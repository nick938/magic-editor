{"version":3,"file":"tmagic-stage.umd.cjs","sources":["../src/const.ts","../src/util.ts","../src/TargetShadow.ts","../src/DragResizeHelper.ts","../src/moveable-able.css?raw","../src/types.ts","../src/MoveableActionsAble.ts","../src/MoveableOptionsManager.ts","../src/StageDragResize.ts","../src/StageHighlight.ts","../src/StageMultiDragResize.ts","../src/ActionManager.ts","../src/Rule.ts","../src/StageMask.ts","../src/style.css?raw","../src/StageRender.ts","../src/StageCore.ts"],"sourcesContent":["/*\n * Tencent is pleased to support the open source community by making TMagicEditor available.\n *\n * Copyright (C) 2023 THL A29 Limited, a Tencent company.  All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** 流式布局下拖动时需要clone一个镜像节点，镜像节点的id前缀 */\nexport const GHOST_EL_ID_PREFIX = 'ghost_el_';\n\n/** 拖动的时候需要在蒙层中创建一个占位节点，该节点的id前缀 */\nexport const DRAG_EL_ID_PREFIX = 'drag_el_';\n\n/** 高亮时需要在蒙层中创建一个占位节点，该节点的id前缀 */\nexport const HIGHLIGHT_EL_ID_PREFIX = 'highlight_el_';\n\nexport const CONTAINER_HIGHLIGHT_CLASS_NAME = 'tmagic-stage-container-highlight';\n\nexport const PAGE_CLASS = 'magic-ui-page';\n\n/** 默认放到缩小倍数 */\nexport const DEFAULT_ZOOM = 1;\n\n/** 参考线类型 */\nexport enum GuidesType {\n  /** 水平 */\n  HORIZONTAL = 'horizontal',\n  /** 垂直 */\n  VERTICAL = 'vertical',\n}\n\n/** css z-index */\nexport enum ZIndex {\n  /** 蒙层，用于监听用户操作，需要置于顶层 */\n  MASK = '99999',\n  /** 选中的节点 */\n  SELECTED_EL = '666',\n  GHOST_EL = '700',\n  DRAG_EL = '9',\n  HIGHLIGHT_EL = '8',\n}\n\n/** 鼠标按键 */\nexport enum MouseButton {\n  /** 左键 */\n  LEFT = 0,\n  /** z中健 */\n  MIDDLE = 1,\n  /** 右键 */\n  RIGHT = 2,\n}\n\n/** 布局方式 */\nexport enum Mode {\n  /** 绝对定位布局 */\n  ABSOLUTE = 'absolute',\n  /** 固定定位布局 */\n  FIXED = 'fixed',\n  /** 流式布局 */\n  SORTABLE = 'sortable',\n}\n\n/** 选中节点的class name */\nexport const SELECTED_CLASS = 'tmagic-stage-selected-area';\n","/*\n * Tencent is pleased to support the open source community by making TMagicEditor available.\n *\n * Copyright (C) 2023 THL A29 Limited, a Tencent company.  All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { removeClassName } from '@tmagic/utils';\n\nimport { GHOST_EL_ID_PREFIX, Mode, SELECTED_CLASS, ZIndex } from './const';\nimport type { Offset, SortEventData, TargetElement } from './types';\n\nconst getParents = (el: Element, relative: Element) => {\n  let cur: Element | null = el.parentElement;\n  const parents: Element[] = [];\n  while (cur && cur !== relative) {\n    parents.push(cur);\n    cur = cur.parentElement;\n  }\n  return parents;\n};\n\nexport const getOffset = (el: TargetElement): Offset => {\n  const htmlEl = el as HTMLElement;\n  const { offsetParent } = htmlEl;\n\n  const left = htmlEl.offsetLeft || 0;\n  const top = htmlEl.offsetTop || 0;\n\n  // 在 Webkit 中，如果元素为隐藏的（该元素或其祖先元素的 style.display 为 \"none\"），或者该元素的 style.position 被设为 \"fixed\"，则该属性返回 null。\n  // 在 IE 9 中，如果该元素的 style.position 被设置为 \"fixed\"，则该属性返回 null。（display:none 无影响。）\n  // body offsetParent 为 null\n  if (offsetParent) {\n    const parentOffset = getOffset(offsetParent as HTMLElement);\n    return {\n      left: left + parentOffset.left,\n      top: top + parentOffset.top,\n    };\n  }\n\n  return {\n    left,\n    top,\n  };\n};\n\n// 将蒙层占位节点覆盖在原节点上方\nexport const getTargetElStyle = (el: TargetElement, zIndex?: ZIndex) => {\n  const offset = getOffset(el);\n  const { transform } = getComputedStyle(el);\n  return `\n    position: absolute;\n    transform: ${transform};\n    left: ${offset.left}px;\n    top: ${offset.top}px;\n    width: ${el.clientWidth}px;\n    height: ${el.clientHeight}px;\n    ${typeof zIndex !== 'undefined' ? `z-index: ${zIndex};` : ''}\n  `;\n};\n\nexport const getAbsolutePosition = (el: HTMLElement, { top, left }: Offset) => {\n  const { offsetParent } = el;\n\n  // 在 Webkit 中，如果元素为隐藏的（该元素或其祖先元素的 style.display 为 \"none\"），或者该元素的 style.position 被设为 \"fixed\"，则该属性返回 null。\n  // 在 IE 9 中，如果该元素的 style.position 被设置为 \"fixed\"，则该属性返回 null。（display:none 无影响。）\n  // body offsetParent 为 null\n  if (offsetParent) {\n    const parentOffset = getOffset(offsetParent as HTMLElement);\n    return {\n      left: left - parentOffset.left,\n      top: top - parentOffset.top,\n    };\n  }\n\n  return { left, top };\n};\n\nexport const isAbsolute = (style: CSSStyleDeclaration): boolean => style.position === 'absolute';\n\nexport const isRelative = (style: CSSStyleDeclaration): boolean => style.position === 'relative';\n\nexport const isStatic = (style: CSSStyleDeclaration): boolean => style.position === 'static';\n\nexport const isFixed = (style: CSSStyleDeclaration): boolean => style.position === 'fixed';\n\nexport const isFixedParent = (el: Element) => {\n  let fixed = false;\n  let dom = el;\n  while (dom) {\n    fixed = isFixed(getComputedStyle(dom));\n    if (fixed) {\n      break;\n    }\n    const { parentElement } = dom;\n    if (!parentElement || parentElement.tagName === 'BODY') {\n      break;\n    }\n    dom = parentElement;\n  }\n  return fixed;\n};\n\nexport const getMode = (el: Element): Mode => {\n  if (isFixedParent(el)) return Mode.FIXED;\n  const style = getComputedStyle(el);\n  if (isStatic(style) || isRelative(style)) return Mode.SORTABLE;\n  return Mode.ABSOLUTE;\n};\n\nexport const getScrollParent = (element: HTMLElement, includeHidden = false): HTMLElement | null => {\n  let style = getComputedStyle(element);\n  const overflowRegex = includeHidden ? /(auto|scroll|hidden)/ : /(auto|scroll)/;\n\n  if (isFixed(style)) return null;\n\n  for (let parent = element; parent.parentElement; ) {\n    parent = parent.parentElement;\n\n    if (parent.tagName === 'HTML') return parent;\n\n    style = getComputedStyle(parent);\n\n    if (isAbsolute(style) && isStatic(style)) continue;\n\n    if (overflowRegex.test(style.overflow + style.overflowY + style.overflowX)) return parent;\n  }\n\n  return null;\n};\n\nexport const removeSelectedClassName = (doc: Document) => {\n  const oldEl = doc.querySelector(`.${SELECTED_CLASS}`);\n\n  if (oldEl) {\n    removeClassName(oldEl, SELECTED_CLASS);\n    if (oldEl.parentNode) removeClassName(oldEl.parentNode as Element, `${SELECTED_CLASS}-parent`);\n    doc.querySelectorAll(`.${SELECTED_CLASS}-parents`).forEach((item) => {\n      removeClassName(item, `${SELECTED_CLASS}-parents`);\n    });\n  }\n};\n\nexport const addSelectedClassName = (el: Element, doc: Document) => {\n  el.classList.add(SELECTED_CLASS);\n  (el.parentNode as Element)?.classList.add(`${SELECTED_CLASS}-parent`);\n  getParents(el, doc.body).forEach((item) => {\n    item.classList.add(`${SELECTED_CLASS}-parents`);\n  });\n};\n\nexport const calcValueByFontsize = (doc: Document, value: number) => {\n  const { fontSize } = doc.documentElement.style;\n\n  if (fontSize) {\n    const times = globalThis.parseFloat(fontSize) / 100;\n    return Number((value / times).toFixed(2));\n  }\n\n  return value;\n};\n\n/**\n * 下移组件位置\n * @param {number} deltaTop 偏移量\n * @param {Object} detail 当前选中的组件配置\n */\nexport const down = (deltaTop: number, target: TargetElement): SortEventData | void => {\n  let swapIndex = 0;\n  let addUpH = target.clientHeight;\n  const brothers = Array.from(target.parentNode?.children || []).filter(\n    (node) => !node.id.startsWith(GHOST_EL_ID_PREFIX),\n  );\n  const index = brothers.indexOf(target);\n  // 往下移动\n  const downEls = brothers.slice(index + 1) as HTMLElement[];\n\n  for (let i = 0; i < downEls.length; i++) {\n    const ele = downEls[i];\n    // 是 fixed 不做处理\n    if (ele.style?.position === 'fixed') {\n      continue;\n    }\n    addUpH += ele.clientHeight / 2;\n    if (deltaTop <= addUpH) {\n      break;\n    }\n    addUpH += ele.clientHeight / 2;\n    swapIndex = i;\n  }\n  return {\n    src: target.id,\n    dist: downEls.length && swapIndex > -1 ? downEls[swapIndex].id : target.id,\n  };\n};\n\n/**\n * 上移组件位置\n * @param {Array} brothers 处于同一容器下的所有子组件配置\n * @param {number} index 当前组件所处的位置\n * @param {number} deltaTop 偏移量\n * @param {Object} detail 当前选中的组件配置\n */\nexport const up = (deltaTop: number, target: TargetElement): SortEventData | void => {\n  const brothers = Array.from(target.parentNode?.children || []).filter(\n    (node) => !node.id.startsWith(GHOST_EL_ID_PREFIX),\n  );\n  const index = brothers.indexOf(target);\n  // 往上移动\n  const upEls = brothers.slice(0, index) as HTMLElement[];\n\n  let addUpH = target.clientHeight;\n  let swapIndex = upEls.length - 1;\n\n  for (let i = upEls.length - 1; i >= 0; i--) {\n    const ele = upEls[i];\n    if (!ele) continue;\n    // 是 fixed 不做处理\n    if (ele.style.position === 'fixed') continue;\n\n    addUpH += ele.clientHeight / 2;\n    if (-deltaTop <= addUpH) break;\n    addUpH += ele.clientHeight / 2;\n\n    swapIndex = i;\n  }\n  return {\n    src: target.id,\n    dist: upEls.length && swapIndex > -1 ? upEls[swapIndex].id : target.id,\n  };\n};\n\nexport const isMoveableButton = (target: Element) =>\n  target.classList.contains('moveable-button') || target.parentElement?.classList.contains('moveable-button');\n","/*\n * Tencent is pleased to support the open source community by making TMagicEditor available.\n *\n * Copyright (C) 2023 THL A29 Limited, a Tencent company.  All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Mode, ZIndex } from './const';\nimport type { TargetElement as ShadowElement, TargetShadowConfig, UpdateDragEl } from './types';\nimport { getTargetElStyle, isFixedParent } from './util';\n\n/**\n * 将选中的节点修正定位后，添加一个操作节点到蒙层上\n */\nexport default class TargetShadow {\n  public el?: ShadowElement;\n  public els: ShadowElement[] = [];\n\n  private idPrefix = 'target_calibrate_';\n  private container: HTMLElement;\n  private scrollLeft = 0;\n  private scrollTop = 0;\n  private zIndex?: ZIndex;\n\n  private updateDragEl?: UpdateDragEl;\n\n  constructor(config: TargetShadowConfig) {\n    this.container = config.container;\n\n    if (config.updateDragEl) {\n      this.updateDragEl = config.updateDragEl;\n    }\n\n    if (typeof config.zIndex !== 'undefined') {\n      this.zIndex = config.zIndex;\n    }\n\n    if (config.idPrefix) {\n      this.idPrefix = config.idPrefix;\n    }\n\n    this.container.addEventListener('customScroll', this.scrollHandler);\n  }\n\n  public update(target: ShadowElement): ShadowElement {\n    this.el = this.updateEl(target, this.el);\n\n    return this.el;\n  }\n\n  public updateGroup(targetGroup: ShadowElement[]): ShadowElement[] {\n    if (this.els.length > targetGroup.length) {\n      this.els.slice(targetGroup.length - 1).forEach((el) => {\n        el.remove();\n      });\n    }\n\n    this.els = targetGroup.map((target, index) => this.updateEl(target, this.els[index]));\n\n    return this.els;\n  }\n\n  public destroyEl(): void {\n    this.el?.remove();\n    this.el = undefined;\n  }\n\n  public destroyEls(): void {\n    this.els.forEach((el) => {\n      el.remove();\n    });\n    this.els = [];\n  }\n\n  public destroy(): void {\n    this.container.removeEventListener('customScroll', this.scrollHandler);\n    this.destroyEl();\n    this.destroyEls();\n  }\n\n  private updateEl(target: ShadowElement, src?: ShadowElement): ShadowElement {\n    const el = src || globalThis.document.createElement('div');\n\n    el.id = `${this.idPrefix}${target.id}`;\n\n    el.style.cssText = getTargetElStyle(target, this.zIndex);\n\n    if (typeof this.updateDragEl === 'function') {\n      this.updateDragEl(el, target);\n    }\n    const isFixed = isFixedParent(target);\n    const mode = this.container.dataset.mode || Mode.ABSOLUTE;\n    if (isFixed && mode !== Mode.FIXED) {\n      el.style.transform = `translate3d(${this.scrollLeft}px, ${this.scrollTop}px, 0)`;\n    } else if (!isFixed && mode === Mode.FIXED) {\n      el.style.transform = `translate3d(${-this.scrollLeft}px, ${-this.scrollTop}px, 0)`;\n    }\n\n    if (!globalThis.document.getElementById(el.id)) {\n      this.container.append(el);\n    }\n\n    return el;\n  }\n\n  private scrollHandler = (e: any) => {\n    this.scrollLeft = e.detail.scrollLeft;\n    this.scrollTop = e.detail.scrollTop;\n  };\n}\n","/*\n * Tencent is pleased to support the open source community by making TMagicEditor available.\n *\n * Copyright (C) 2023 THL A29 Limited, a Tencent company.  All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  OnDrag,\n  OnDragGroup,\n  OnDragGroupStart,\n  OnDragStart,\n  OnResize,\n  OnResizeGroup,\n  OnResizeGroupStart,\n  OnResizeStart,\n  OnRotate,\n  OnRotateStart,\n  OnScale,\n  OnScaleStart,\n} from 'moveable';\nimport MoveableHelper from 'moveable-helper';\n\nimport { DRAG_EL_ID_PREFIX, GHOST_EL_ID_PREFIX, Mode, ZIndex } from './const';\nimport TargetShadow from './TargetShadow';\nimport { DragResizeHelperConfig, Rect, TargetElement } from './types';\nimport { calcValueByFontsize, getAbsolutePosition, getOffset } from './util';\n\n/**\n * 拖拽/改变大小等操作发生时，moveable会抛出各种状态事件，DragResizeHelper负责响应这些事件，对目标节点target和拖拽节点targetShadow进行修改；\n * 其中目标节点是DragResizeHelper直接改的，targetShadow作为直接被操作的拖拽框，是调用moveableHelper改的；\n * 有个特殊情况是流式布局下，moveableHelper不支持，targetShadow也是DragResizeHelper直接改的\n */\nexport default class DragResizeHelper {\n  /** 目标节点在蒙层上的占位节点，用于跟鼠标交互，避免鼠标事件直接作用到目标节点 */\n  private targetShadow: TargetShadow;\n  /** 要操作的原始目标节点 */\n  private target!: HTMLElement;\n  /** 多选:目标节点组 */\n  private targetList: HTMLElement[] = [];\n  /** 响应拖拽的状态事件，修改绝对定位布局下targetShadow的dom。\n   * MoveableHelper里面的方法是成员属性，如果DragResizeHelper用继承的方式将无法通过super去调这些方法 */\n  private moveableHelper: MoveableHelper;\n  /** 流式布局下，目标节点的镜像节点 */\n  private ghostEl: HTMLElement | undefined;\n  /** 用于记录节点被改变前的位置 */\n  private frameSnapShot = {\n    left: 0,\n    top: 0,\n  };\n  /** 多选模式下的多个节点 */\n  private framesSnapShot: { left: number; top: number; id: string }[] = [];\n  /** 布局方式：流式布局、绝对定位、固定定位 */\n  private mode: Mode = Mode.ABSOLUTE;\n\n  constructor(config: DragResizeHelperConfig) {\n    this.moveableHelper = MoveableHelper.create({\n      useBeforeRender: true,\n      useRender: false,\n      createAuto: true,\n    });\n\n    this.targetShadow = new TargetShadow({\n      container: config.container,\n      updateDragEl: config.updateDragEl,\n      zIndex: ZIndex.DRAG_EL,\n      idPrefix: DRAG_EL_ID_PREFIX,\n    });\n  }\n\n  public destroy(): void {\n    this.targetShadow.destroy();\n    this.destroyGhostEl();\n    this.moveableHelper.clear();\n  }\n\n  public destroyShadowEl(): void {\n    this.targetShadow.destroyEl();\n  }\n\n  public getShadowEl(): TargetElement | undefined {\n    return this.targetShadow.el;\n  }\n\n  public updateShadowEl(el: HTMLElement): void {\n    this.destroyGhostEl();\n    this.target = el;\n    this.targetShadow.update(el);\n  }\n\n  public setMode(mode: Mode): void {\n    this.mode = mode;\n  }\n\n  /**\n   * 改变大小事件开始\n   * @param e 包含了拖拽节点的dom，moveableHelper会直接修改拖拽节点\n   */\n  public onResizeStart(e: OnResizeStart): void {\n    this.moveableHelper.onResizeStart(e);\n\n    this.frameSnapShot.top = this.target.offsetTop;\n    this.frameSnapShot.left = this.target.offsetLeft;\n  }\n\n  public onResize(e: OnResize): void {\n    const { width, height, drag } = e;\n    const { beforeTranslate } = drag;\n    // 流式布局\n    if (this.mode === Mode.SORTABLE) {\n      this.target.style.top = '0px';\n      if (this.targetShadow.el) {\n        this.targetShadow.el.style.width = `${width}px`;\n        this.targetShadow.el.style.height = `${height}px`;\n      }\n    } else {\n      this.moveableHelper.onResize(e);\n      this.target.style.left = `${this.frameSnapShot.left + beforeTranslate[0]}px`;\n      this.target.style.top = `${this.frameSnapShot.top + beforeTranslate[1]}px`;\n    }\n\n    this.target.style.width = `${width}px`;\n    this.target.style.height = `${height}px`;\n  }\n\n  public onDragStart(e: OnDragStart): void {\n    this.moveableHelper.onDragStart(e);\n\n    if (this.mode === Mode.SORTABLE) {\n      this.ghostEl = this.generateGhostEl(this.target);\n    }\n\n    this.frameSnapShot.top = this.target.offsetTop;\n    this.frameSnapShot.left = this.target.offsetLeft;\n  }\n\n  public onDrag(e: OnDrag): void {\n    // 流式布局\n    if (this.ghostEl) {\n      this.ghostEl.style.top = `${this.frameSnapShot.top + e.beforeTranslate[1]}px`;\n      return;\n    }\n\n    this.moveableHelper.onDrag(e);\n\n    this.target.style.left = `${this.frameSnapShot.left + e.beforeTranslate[0]}px`;\n    this.target.style.top = `${this.frameSnapShot.top + e.beforeTranslate[1]}px`;\n  }\n\n  public onRotateStart(e: OnRotateStart): void {\n    this.moveableHelper.onRotateStart(e);\n  }\n\n  public onRotate(e: OnRotate): void {\n    this.moveableHelper.onRotate(e);\n    const frame = this.moveableHelper.getFrame(e.target);\n    this.target.style.transform = frame?.toCSSObject().transform || '';\n  }\n\n  public onScaleStart(e: OnScaleStart): void {\n    this.moveableHelper.onScaleStart(e);\n  }\n\n  public onScale(e: OnScale): void {\n    this.moveableHelper.onScale(e);\n    const frame = this.moveableHelper.getFrame(e.target);\n    this.target.style.transform = frame?.toCSSObject().transform || '';\n  }\n\n  public getGhostEl(): HTMLElement | undefined {\n    return this.ghostEl;\n  }\n\n  public destroyGhostEl(): void {\n    this.ghostEl?.remove();\n    this.ghostEl = undefined;\n  }\n\n  public clear(): void {\n    this.moveableHelper.clear();\n  }\n\n  public getFrame(el: HTMLElement | SVGElement): ReturnType<MoveableHelper['getFrame']> {\n    return this.moveableHelper.getFrame(el);\n  }\n\n  public getShadowEls(): TargetElement[] {\n    return this.targetShadow.els;\n  }\n\n  public updateGroup(els: HTMLElement[]): void {\n    this.targetList = els;\n    this.framesSnapShot = [];\n    this.targetShadow.updateGroup(els);\n  }\n\n  public setTargetList(targetList: HTMLElement[]): void {\n    this.targetList = targetList;\n  }\n\n  public clearMultiSelectStatus(): void {\n    this.targetList = [];\n    this.targetShadow.destroyEls();\n  }\n\n  public onResizeGroupStart(e: OnResizeGroupStart): void {\n    const { events } = e;\n    this.moveableHelper.onResizeGroupStart(e);\n    this.setFramesSnapShot(events);\n  }\n\n  /**\n   * 多选状态下通过拖拽边框改变大小，所有选中组件会一起改变大小\n   */\n  public onResizeGroup(e: OnResizeGroup): void {\n    const { events } = e;\n    // 拖动过程更新\n    events.forEach((ev) => {\n      const { width, height, beforeTranslate } = ev.drag;\n      const frameSnapShot = this.framesSnapShot.find(\n        (frameItem) => frameItem.id === ev.target.id.replace(DRAG_EL_ID_PREFIX, ''),\n      );\n      if (!frameSnapShot) return;\n      const targeEl = this.targetList.find(\n        (targetItem) => targetItem.id === ev.target.id.replace(DRAG_EL_ID_PREFIX, ''),\n      );\n      if (!targeEl) return;\n      // 元素与其所属组同时加入多选列表时，只更新父元素\n      const isParentIncluded = this.targetList.find((targetItem) => targetItem.id === targeEl.parentElement?.id);\n\n      if (!isParentIncluded) {\n        // 更新页面元素位置\n        targeEl.style.left = `${frameSnapShot.left + beforeTranslate[0]}px`;\n        targeEl.style.top = `${frameSnapShot.top + beforeTranslate[1]}px`;\n      }\n\n      // 更新页面元素大小\n      targeEl.style.width = `${width}px`;\n      targeEl.style.height = `${height}px`;\n    });\n    this.moveableHelper.onResizeGroup(e);\n  }\n\n  public onDragGroupStart(e: OnDragGroupStart): void {\n    const { events } = e;\n    this.moveableHelper.onDragGroupStart(e);\n    // 记录拖动前快照\n    this.setFramesSnapShot(events);\n  }\n\n  public onDragGroup(e: OnDragGroup): void {\n    const { events } = e;\n    // 拖动过程更新\n    events.forEach((ev) => {\n      const frameSnapShot = this.framesSnapShot.find(\n        (frameItem) => frameItem.id === ev.target.id.replace(DRAG_EL_ID_PREFIX, ''),\n      );\n      if (!frameSnapShot) return;\n      const targeEl = this.targetList.find(\n        (targetItem) => targetItem.id === ev.target.id.replace(DRAG_EL_ID_PREFIX, ''),\n      );\n      if (!targeEl) return;\n      // 元素与其所属组同时加入多选列表时，只更新父元素\n      const isParentIncluded = this.targetList.find((targetItem) => targetItem.id === targeEl.parentElement?.id);\n      if (!isParentIncluded) {\n        // 更新页面元素位置\n        targeEl.style.left = `${frameSnapShot.left + ev.beforeTranslate[0]}px`;\n        targeEl.style.top = `${frameSnapShot.top + ev.beforeTranslate[1]}px`;\n      }\n    });\n    this.moveableHelper.onDragGroup(e);\n  }\n\n  public getUpdatedElRect(el: HTMLElement, parentEl: HTMLElement | null, doc: Document): Rect {\n    const offset = this.mode === Mode.SORTABLE ? { left: 0, top: 0 } : { left: el.offsetLeft, top: el.offsetTop };\n\n    let left = calcValueByFontsize(doc, offset.left);\n    let top = calcValueByFontsize(doc, offset.top);\n    const width = calcValueByFontsize(doc, el.clientWidth);\n    const height = calcValueByFontsize(doc, el.clientHeight);\n\n    let shadowEl = this.getShadowEl();\n    const shadowEls = this.getShadowEls();\n\n    if (shadowEls.length) {\n      shadowEl = shadowEls.find((item) => item.id.endsWith(el.id));\n    }\n\n    if (parentEl && this.mode === Mode.ABSOLUTE && shadowEl) {\n      const targetShadowHtmlEl = shadowEl as HTMLElement;\n      const targetShadowElOffsetLeft = targetShadowHtmlEl.offsetLeft || 0;\n      const targetShadowElOffsetTop = targetShadowHtmlEl.offsetTop || 0;\n\n      const frame = this.getFrame(shadowEl);\n\n      const [translateX, translateY] = frame?.properties.transform.translate.value;\n      const { left: parentLeft, top: parentTop } = getOffset(parentEl);\n\n      left =\n        calcValueByFontsize(doc, targetShadowElOffsetLeft) +\n        parseFloat(translateX) -\n        calcValueByFontsize(doc, parentLeft);\n      top =\n        calcValueByFontsize(doc, targetShadowElOffsetTop) +\n        parseFloat(translateY) -\n        calcValueByFontsize(doc, parentTop);\n    }\n\n    return { width, height, left, top };\n  }\n\n  /**\n   * 多选状态设置多个节点的快照\n   */\n  private setFramesSnapShot(events: OnDragStart[] | OnResizeStart[]): void {\n    // 同一组被选中的目标元素多次拖拽和改变大小会触发多次setFramesSnapShot，只有第一次可以设置成功\n    if (this.framesSnapShot.length > 0) return;\n    // 记录拖动前快照\n    events.forEach((ev) => {\n      // 实际目标元素\n      const matchEventTarget = this.targetList.find(\n        (targetItem) => targetItem.id === ev.target.id.replace(DRAG_EL_ID_PREFIX, ''),\n      );\n      if (!matchEventTarget) return;\n      this.framesSnapShot.push({\n        left: matchEventTarget.offsetLeft,\n        top: matchEventTarget.offsetTop,\n        id: matchEventTarget.id,\n      });\n    });\n  }\n\n  /**\n   * 流式布局把目标节点复制一份进行拖拽，在拖拽结束前不影响页面原布局样式\n   */\n  private generateGhostEl(el: HTMLElement): HTMLElement {\n    if (this.ghostEl) {\n      this.destroyGhostEl();\n    }\n\n    const ghostEl = el.cloneNode(true) as HTMLElement;\n    this.setGhostElChildrenId(ghostEl);\n    const { top, left } = getAbsolutePosition(el, getOffset(el));\n    ghostEl.id = `${GHOST_EL_ID_PREFIX}${el.id}`;\n    ghostEl.style.zIndex = ZIndex.GHOST_EL;\n    ghostEl.style.opacity = '.5';\n    ghostEl.style.position = 'absolute';\n    ghostEl.style.left = `${left}px`;\n    ghostEl.style.top = `${top}px`;\n    el.after(ghostEl);\n    return ghostEl;\n  }\n\n  private setGhostElChildrenId(el: Element): void {\n    for (const child of Array.from(el.children)) {\n      if (child.id) {\n        child.id = `${GHOST_EL_ID_PREFIX}${child.id}`;\n      }\n\n      if (child.children.length) {\n        this.setGhostElChildrenId(child);\n      }\n    }\n  }\n}\n","export default \".moveable-button {\\n  width: 20px;\\n  height: 20px;\\n  background: #4af;\\n  border-radius: 4px;\\n  appearance: none;\\n  border: 0;\\n  color: white;\\n  font-size: 12px;\\n  font-weight: bold;\\n  margin-left: 2px;\\n  position: relative;\\n}\\n.moveable-remove-button:before, .moveable-remove-button:after {\\n  content: \\\"\\\";\\n  position: absolute;\\n  left: 50%;\\n  top: 50%;\\n  transform: translate(-50%, -50%) rotate(45deg);\\n  width: 14px;\\n  height: 2px;\\n  background: #fff;\\n  border-radius: 1px;\\n  cursor: pointer;\\n}\\n.moveable-remove-button:after {\\n  transform: translate(-50%, -50%) rotate(-45deg);\\n}\\n\\n.moveable-select-parent-arrow-top-icon {\\n  transform: rotateZ(-45deg);\\n  width: 4px;\\n  height: 4px;\\n  border-color: #fff;\\n  border-width: 2px 2px 0 0;\\n  border-style: solid;\\n  position: absolute;\\n  left: 4px;\\n  top: 4px;\\n}\\n\\n.moveable-select-parent-arrow-body-icon {\\n  width: 7px;\\n  height: 11px;\\n  border-color: #fff;\\n  border-width: 0 0 2px 2px;\\n  border-style: solid;\\n}\\n\\n.moveable-drag-area-button {\\n  cursor: move;\\n}\\n\\n.moveable-drag-area-button .moveable-select-parent-arrow-top-icon {\\n  width: 2px;\\n  height: 2px;\\n}\\n\\n.moveable-drag-area-button .moveable-select-parent-arrow-top-icon-top {\\n  transform: rotateZ(-45deg) translateX(-50%);\\n  left: 50%;\\n  top: 3px;\\n  transform-origin: left;\\n}\\n\\n.moveable-drag-area-button .moveable-select-parent-arrow-top-icon-bottom {\\n  transform: rotateZ(135deg) translateX(-50%);\\n  transform-origin: left;\\n  left: 50%;\\n  top: auto;\\n  bottom: 3px;\\n}\\n\\n.moveable-drag-area-button .moveable-select-parent-arrow-top-icon-right {\\n  transform: rotateZ(45deg)  translateY(-50%);\\n  transform-origin: top;\\n  right: 3px;\\n  left: auto;\\n  top: 50%;\\n}\\n\\n.moveable-drag-area-button .moveable-select-parent-arrow-top-icon-left {\\n  transform: rotateZ(235deg) translateY(-50%);\\n  transform-origin: top;\\n  left: 3px;\\n  top: 50%;\\n}\\n\\n.moveable-drag-area-button .moveable-select-parent-arrow-body-icon-horizontal {\\n  width: 2px;\\n  height: 11px;\\n  background-color: #fff;\\n  position: absolute;\\n  transform: translateX(-50%);\\n  left: 50%;\\n  top: 4px;\\n}\\n\\n.moveable-drag-area-button .moveable-select-parent-arrow-body-icon-vertical {\\n  width: 11px;\\n  height: 2px;\\n  background-color: #fff;\\n  position: absolute;\\n  transform: translateY(-50%);\\n  left: 4px;\\n  top: 50%;;\\n}\\n\\n\"","/*\n * Tencent is pleased to support the open source community by making TMagicEditor available.\n *\n * Copyright (C) 2023 THL A29 Limited, a Tencent company.  All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { MoveableOptions } from 'moveable';\n\nimport Core from '@tmagic/core';\nimport type { Id, MApp, MContainer, MNode } from '@tmagic/schema';\n\nimport { GuidesType, ZIndex } from './const';\nimport DragResizeHelper from './DragResizeHelper';\nimport StageCore from './StageCore';\n\nexport type TargetElement = HTMLElement | SVGElement;\n\nexport type CanSelect = (el: HTMLElement, event: MouseEvent, stop: () => boolean) => boolean | Promise<boolean>;\nexport type IsContainer = (el: HTMLElement) => boolean | Promise<boolean>;\nexport type CustomizeRender = (renderer: StageCore) => Promise<HTMLElement> | HTMLElement;\n/** 业务方自定义的moveableOptions，可以是配置，也可以是回调函数 */\nexport type CustomizeMoveableOptions =\n  | ((config?: CustomizeMoveableOptionsCallbackConfig) => MoveableOptions)\n  | MoveableOptions\n  | undefined;\n/** render提供给的接口，如果是id则转成el，如果是el则直接返回 */\nexport type GetTargetElement = (idOrEl: Id | HTMLElement) => HTMLElement;\n/** render提供的接口，通过坐标获得坐标下所有HTML元素数组 */\nexport type GetElementsFromPoint = (point: Point) => HTMLElement[];\nexport type GetRenderDocument = () => Document | undefined;\nexport type DelayedMarkContainer = (event: MouseEvent, exclude: Element[]) => NodeJS.Timeout | undefined;\nexport type MarkContainerEnd = () => HTMLElement | null;\nexport type GetRootContainer = () => HTMLDivElement | undefined;\n\n/** 将组件添加到容器的方式 */\nexport enum ContainerHighlightType {\n  /** 默认方式：组件在容器上方悬停一段时间后加入 */\n  DEFAULT = 'default',\n  /** 按住alt键，并在容器上方悬停一段时间后加入 */\n  ALT = 'alt',\n}\n\nexport type UpdateDragEl = (el: TargetElement, target: TargetElement) => void;\n\nexport interface StageCoreConfig {\n  /** 需要对齐的dom节点的CSS选择器字符串 */\n  snapElementQuerySelector?: string;\n  /** 放大倍数，默认1倍 */\n  zoom?: number;\n  canSelect?: CanSelect;\n  isContainer: IsContainer;\n  containerHighlightClassName?: string;\n  containerHighlightDuration?: number;\n  containerHighlightType?: ContainerHighlightType;\n  moveableOptions?: CustomizeMoveableOptions;\n  /** runtime 的HTML地址，可以是一个HTTP地址，如果和编辑器不同域，需要设置跨域，也可以是一个相对或绝对路径 */\n  runtimeUrl?: string;\n  render?: (renderer: StageCore) => Promise<HTMLElement> | HTMLElement;\n  autoScrollIntoView?: boolean;\n  updateDragEl?: UpdateDragEl;\n  disabledDragStart?: boolean;\n}\n\nexport interface ActionManagerConfig {\n  container: HTMLElement;\n  containerHighlightClassName?: string;\n  containerHighlightDuration?: number;\n  containerHighlightType?: ContainerHighlightType;\n  moveableOptions?: CustomizeMoveableOptions;\n  disabledDragStart?: boolean;\n  canSelect?: CanSelect;\n  isContainer: IsContainer;\n  getRootContainer: GetRootContainer;\n  getRenderDocument: GetRenderDocument;\n  updateDragEl?: UpdateDragEl;\n  getTargetElement: GetTargetElement;\n  getElementsFromPoint: GetElementsFromPoint;\n}\n\nexport interface MoveableOptionsManagerConfig {\n  container: HTMLElement;\n  moveableOptions?: CustomizeMoveableOptions;\n  getRootContainer: GetRootContainer;\n}\n\nexport interface CustomizeMoveableOptionsCallbackConfig {\n  targetEl?: HTMLElement;\n  targetElId?: string;\n  targetEls?: HTMLElement[];\n  targetElIds?: string[];\n  isMulti: boolean;\n}\n\nexport interface StageRenderConfig {\n  runtimeUrl?: string;\n  zoom: number | undefined;\n  customizedRender?: () => Promise<HTMLElement | null>;\n}\n\nexport interface StageMaskConfig {\n  core: StageCore;\n}\n\nexport interface StageDragResizeConfig {\n  container: HTMLElement;\n  dragResizeHelper: DragResizeHelper;\n  moveableOptions?: CustomizeMoveableOptions;\n  disabledDragStart?: boolean;\n  getRootContainer: GetRootContainer;\n  getRenderDocument: GetRenderDocument;\n  markContainerEnd: MarkContainerEnd;\n  delayedMarkContainer: DelayedMarkContainer;\n}\n\nexport interface StageMultiDragResizeConfig {\n  container: HTMLElement;\n  dragResizeHelper: DragResizeHelper;\n  moveableOptions?: CustomizeMoveableOptions;\n  getRootContainer: GetRootContainer;\n  getRenderDocument: GetRenderDocument;\n  markContainerEnd: MarkContainerEnd;\n  delayedMarkContainer: DelayedMarkContainer;\n}\n\nexport interface DragResizeHelperConfig {\n  container: HTMLElement;\n  updateDragEl?: UpdateDragEl;\n}\n\n/** 选择状态 */\nexport enum SelectStatus {\n  /** 单选 */\n  SELECT = 'select',\n  /** 多选 */\n  MULTI_SELECT = 'multiSelect',\n}\n\n/** 拖动状态 */\nexport enum StageDragStatus {\n  /** 开始拖动 */\n  START = 'start',\n  /** 拖动中 */\n  ING = 'ing',\n  /** 拖动结束 */\n  END = 'end',\n}\n\nexport type Rect = {\n  width: number;\n  height: number;\n} & Offset;\n\nexport interface Offset {\n  left: number;\n  top: number;\n}\n\nexport interface Point {\n  clientX: number;\n  clientY: number;\n}\n\nexport interface GuidesEventData {\n  type: GuidesType;\n  guides: number[];\n}\n\nexport interface UpdateEventData {\n  data: {\n    el: HTMLElement;\n    style: {\n      width?: number;\n      height?: number;\n      left?: number;\n      top?: number;\n      transform?: {\n        rotate?: string;\n        scale?: string;\n      };\n    };\n    ghostEl?: HTMLElement;\n  }[];\n  parentEl: HTMLElement | null;\n}\n\nexport interface RemoveEventData {\n  data: {\n    el: HTMLElement;\n  }[];\n}\n\nexport interface SortEventData {\n  src: Id;\n  dist: Id;\n  root?: MApp;\n}\n\nexport interface UpdateData {\n  config: MNode;\n  parent?: MContainer;\n  parentId?: Id;\n  root: MApp;\n}\n\nexport interface RemoveData {\n  id: Id;\n  parentId: Id;\n  root: MApp;\n}\n\nexport interface Runtime {\n  getApp?: () => Core | undefined;\n  beforeSelect?: (el: HTMLElement) => Promise<boolean> | boolean;\n  updateRootConfig?: (config: MApp) => void;\n  updatePageId?: (id: Id) => void;\n  select?: (id: Id) => Promise<HTMLElement> | HTMLElement;\n  add?: (data: UpdateData) => void;\n  update?: (data: UpdateData) => void;\n  sortNode?: (data: SortEventData) => void;\n  remove?: (data: RemoveData) => void;\n}\n\nexport interface Magic {\n  /** 当前页面的根节点变化时调用该方法，编辑器会同步该el和stage的大小，该方法由stage注入到iframe.contentWindow中 */\n  onPageElUpdate: (el: HTMLElement) => void;\n\n  onRuntimeReady: (runtime: Runtime) => void;\n}\n\nexport interface RuntimeWindow extends Window {\n  magic: Magic;\n}\n\nexport interface StageHighlightConfig {\n  container: HTMLElement;\n  updateDragEl?: UpdateDragEl;\n  getRootContainer: GetRootContainer;\n}\n\nexport interface TargetShadowConfig {\n  container: HTMLElement;\n  zIndex?: ZIndex;\n  updateDragEl?: UpdateDragEl;\n  idPrefix?: string;\n}\n\nexport enum AbleActionEventType {\n  SELECT_PARENT = 'select-parent',\n  REMOVE = 'remove',\n}\n","import { MoveableManagerInterface, Renderer } from 'moveable';\n\nimport ableCss from './moveable-able.css?raw';\nimport { AbleActionEventType } from './types';\n\nexport default (handler: (type: AbleActionEventType) => void) => ({\n  name: 'actions',\n  props: [],\n  events: [],\n  render(moveable: MoveableManagerInterface<any, any>, React: Renderer) {\n    const rect = moveable.getRect();\n    const { pos2 } = moveable.state;\n\n    // use css for able\n    const editableViewer = moveable.useCSS(\n      'div',\n      `\n      {\n        position: absolute;\n        left: 0px;\n        top: 0px;\n        will-change: transform;\n        transform-origin: 0px 0px;\n        display: flex;\n      }\n      ${ableCss}\n      `,\n    );\n    // Add key (required)\n    // Add class prefix moveable-(required)\n    return React.createElement(\n      editableViewer,\n      {\n        className: 'moveable-editable',\n        style: {\n          transform: `translate(${pos2[0] - 60}px, ${pos2[1] - 28}px) rotate(${rect.rotation}deg)`,\n        },\n      },\n      [\n        React.createElement(\n          'button',\n          {\n            className: 'moveable-button',\n            title: '选中父组件',\n            onClick: () => {\n              handler(AbleActionEventType.SELECT_PARENT);\n            },\n          },\n          React.createElement('div', {\n            className: 'moveable-select-parent-arrow-top-icon',\n          }),\n          React.createElement('div', {\n            className: 'moveable-select-parent-arrow-body-icon',\n          }),\n        ),\n        React.createElement('button', {\n          className: 'moveable-button moveable-remove-button',\n          title: '删除',\n          onClick: () => {\n            handler(AbleActionEventType.REMOVE);\n          },\n        }),\n        React.createElement(\n          'button',\n          {\n            className: 'moveable-button moveable-drag-area-button',\n            title: '拖动',\n          },\n          React.createElement('div', {\n            className: 'moveable-select-parent-arrow-top-icon moveable-select-parent-arrow-top-icon-top',\n          }),\n          React.createElement('div', {\n            className: 'moveable-select-parent-arrow-top-icon moveable-select-parent-arrow-top-icon-bottom',\n          }),\n          React.createElement('div', {\n            className: 'moveable-select-parent-arrow-top-icon moveable-select-parent-arrow-top-icon-left',\n          }),\n          React.createElement('div', {\n            className: ' moveable-select-parent-arrow-top-icon moveable-select-parent-arrow-top-icon-right',\n          }),\n          React.createElement('div', {\n            className: 'moveable-select-parent-arrow-body-icon-horizontal',\n          }),\n          React.createElement('div', {\n            className: 'moveable-select-parent-arrow-body-icon-vertical',\n          }),\n        ),\n      ],\n    );\n  },\n});\n","/*\n * Tencent is pleased to support the open source community by making TMagicEditor available.\n *\n * Copyright (C) 2023 THL A29 Limited, a Tencent company.  All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport EventEmitter from 'events';\n\nimport { merge } from 'lodash-es';\nimport { MoveableOptions } from 'moveable';\n\nimport { GuidesType, Mode } from './const';\nimport MoveableActionsAble from './MoveableActionsAble';\nimport { AbleActionEventType, GetRootContainer, MoveableOptionsManagerConfig } from './types';\nimport { getOffset } from './util';\n\n/**\n * 单选和多选的父类，用于管理moveableOptions\n * @extends EventEmitter\n */\nexport default class MoveableOptionsManager extends EventEmitter {\n  /** 布局方式：流式布局、绝对定位、固定定位 */\n  public mode: Mode = Mode.ABSOLUTE;\n\n  /** 画布容器 */\n  protected container: HTMLElement;\n  protected options: MoveableOptions = {};\n\n  /** 水平参考线 */\n  private horizontalGuidelines: number[] = [];\n  /** 垂直参考线 */\n  private verticalGuidelines: number[] = [];\n  /** 对齐元素集合 */\n  private elementGuidelines: HTMLElement[] = [];\n  /** 由外部调用方（编辑器）传入进来的moveable默认参数，可以为空，也可以是一个回调函数 */\n  private customizedOptions?: (() => MoveableOptions) | MoveableOptions;\n  /** 获取整个画布的根元素（在StageCore的mount函数中挂载的container） */\n  private getRootContainer: GetRootContainer;\n\n  constructor(config: MoveableOptionsManagerConfig) {\n    super();\n    this.customizedOptions = config.moveableOptions;\n    this.container = config.container;\n    this.getRootContainer = config.getRootContainer;\n  }\n\n  public getOption<K extends keyof MoveableOptions>(key: K): MoveableOptions[K] {\n    return this.options[key];\n  }\n\n  /**\n   * 设置水平/垂直参考线\n   * @param type 参考线类型\n   * @param guidelines 参考线坐标数组\n   */\n  public setGuidelines(type: GuidesType, guidelines: number[]): void {\n    if (type === GuidesType.HORIZONTAL) {\n      this.horizontalGuidelines = guidelines;\n    } else if (type === GuidesType.VERTICAL) {\n      this.verticalGuidelines = guidelines;\n    }\n\n    this.emit('update-moveable');\n  }\n\n  /**\n   * 清除横向和纵向的参考线\n   */\n  public clearGuides(): void {\n    this.horizontalGuidelines = [];\n    this.verticalGuidelines = [];\n\n    this.emit('update-moveable');\n  }\n\n  /**\n   * 设置有哪些元素要辅助对齐\n   * @param selectedElList 选中的元素列表，需要排除在对齐元素之外\n   * @param allElList 全部元素列表\n   */\n  protected setElementGuidelines(selectedElList: HTMLElement[], allElList: HTMLElement[]): void {\n    this.elementGuidelines.forEach((node) => {\n      node.remove();\n    });\n    this.elementGuidelines = [];\n\n    if (this.mode === Mode.ABSOLUTE) {\n      this.container.append(this.createGuidelineElements(selectedElList, allElList));\n    }\n  }\n\n  /**\n   * 获取moveable参数\n   * @param isMultiSelect 是否多选模式\n   * @param runtimeOptions 调用时实时传进来的的moveable参数\n   * @returns moveable所需参数\n   */\n  protected getOptions(isMultiSelect: boolean, runtimeOptions: MoveableOptions = {}): MoveableOptions {\n    const defaultOptions = this.getDefaultOptions(isMultiSelect);\n    const customizedOptions = this.getCustomizeOptions();\n\n    this.options = merge(defaultOptions, customizedOptions, runtimeOptions);\n    return this.options;\n  }\n\n  /**\n   * 获取单选和多选的moveable公共参数\n   * @returns moveable公共参数\n   */\n  private getDefaultOptions(isMultiSelect: boolean): MoveableOptions {\n    const isSortable = this.mode === Mode.SORTABLE;\n\n    const commonOptions = {\n      draggable: true,\n      resizable: true,\n      rootContainer: this.getRootContainer(),\n      zoom: 1,\n      throttleDrag: 0,\n      snappable: true,\n      horizontalGuidelines: this.horizontalGuidelines,\n      verticalGuidelines: this.verticalGuidelines,\n      elementGuidelines: this.elementGuidelines,\n      bounds: {\n        top: 0,\n        left: 0,\n        right: this.container.clientWidth,\n        bottom: isSortable ? undefined : this.container.clientHeight,\n      },\n    };\n    const differenceOptions = isMultiSelect ? this.getMultiOptions() : this.getSingleOptions();\n\n    return merge(commonOptions, differenceOptions);\n  }\n\n  /**\n   * 获取单选下的差异化参数\n   * @returns {MoveableOptions} moveable options参数\n   */\n  private getSingleOptions(): MoveableOptions {\n    const isAbsolute = this.mode === Mode.ABSOLUTE;\n    const isFixed = this.mode === Mode.FIXED;\n\n    return {\n      origin: false,\n      dragArea: false,\n      scalable: false,\n      rotatable: false,\n      snapGap: isAbsolute || isFixed,\n      snapThreshold: 5,\n      snapDigit: 0,\n      isDisplaySnapDigit: isAbsolute,\n      snapDirections: {\n        top: isAbsolute,\n        right: isAbsolute,\n        bottom: isAbsolute,\n        left: isAbsolute,\n        center: isAbsolute,\n        middle: isAbsolute,\n      },\n      elementSnapDirections: {\n        top: isAbsolute,\n        right: isAbsolute,\n        bottom: isAbsolute,\n        left: isAbsolute,\n      },\n      isDisplayInnerSnapDigit: true,\n      dragTarget: '.moveable-drag-area-button',\n      dragTargetSelf: true,\n      props: {\n        actions: true,\n      },\n\n      ables: [MoveableActionsAble(this.actionHandler.bind(this))],\n    };\n  }\n\n  /**\n   * 获取多选下的差异化参数\n   * @returns {MoveableOptions} moveable options参数\n   */\n  private getMultiOptions(): MoveableOptions {\n    return {\n      defaultGroupRotate: 0,\n      defaultGroupOrigin: '50% 50%',\n      startDragRotate: 0,\n      throttleDragRotate: 0,\n      origin: true,\n      padding: { left: 0, top: 0, right: 0, bottom: 0 },\n    };\n  }\n\n  /**\n   * 获取业务方自定义的moveable参数\n   */\n  private getCustomizeOptions(): MoveableOptions | undefined {\n    if (typeof this.customizedOptions === 'function') {\n      return this.customizedOptions();\n    }\n    return this.customizedOptions;\n  }\n\n  /**\n   * 这是给selectParentAbles的回调函数，用于触发选中父元素事件\n   */\n  private actionHandler(type: AbleActionEventType): void {\n    this.emit(type);\n  }\n\n  /**\n   * 为需要辅助对齐的元素创建div\n   * @param selectedElList 选中的元素列表，需要排除在对齐元素之外\n   * @param allElList 全部元素列表\n   * @returns frame 辅助对齐元素集合的页面片\n   */\n  private createGuidelineElements(selectedElList: HTMLElement[], allElList: HTMLElement[]): DocumentFragment {\n    const frame = globalThis.document.createDocumentFragment();\n\n    for (const node of allElList) {\n      const { width, height } = node.getBoundingClientRect();\n      if (this.isInElementList(node, selectedElList)) continue;\n      const { left, top } = getOffset(node);\n      const elementGuideline = globalThis.document.createElement('div');\n      elementGuideline.style.cssText = `position: absolute;width: ${width}px;height: ${height}px;top: ${top}px;left: ${left}px`;\n      this.elementGuidelines.push(elementGuideline);\n      frame.append(elementGuideline);\n    }\n\n    return frame;\n  }\n\n  /**\n   * 判断一个元素是否在元素列表里面\n   * @param ele 元素\n   * @param eleList 元素列表\n   * @returns 是否在元素列表里面\n   */\n  private isInElementList(ele: HTMLElement, eleList: HTMLElement[]): boolean {\n    for (const eleItem of eleList) {\n      if (ele === eleItem) return true;\n    }\n    return false;\n  }\n}\n","/*\n * Tencent is pleased to support the open source community by making TMagicEditor available.\n *\n * Copyright (C) 2023 THL A29 Limited, a Tencent company.  All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint-disable no-param-reassign */\nimport Moveable, { MoveableOptions } from 'moveable';\n\nimport { Mode } from './const';\nimport DragResizeHelper from './DragResizeHelper';\nimport MoveableOptionsManager from './MoveableOptionsManager';\nimport type { DelayedMarkContainer, GetRenderDocument, MarkContainerEnd, StageDragResizeConfig } from './types';\nimport { StageDragStatus } from './types';\nimport { down, getMode, up } from './util';\n\n/**\n * 管理单选操作，响应选中操作，初始化moveableOption参数并初始化moveable，处理moveable回调事件对组件进行更新\n * @extends MoveableOptionsManager\n */\nexport default class StageDragResize extends MoveableOptionsManager {\n  /** 目标节点 */\n  private target?: HTMLElement;\n  /** Moveable拖拽类实例 */\n  private moveable?: Moveable;\n  /** 拖动状态 */\n  private dragStatus: StageDragStatus = StageDragStatus.END;\n  private dragResizeHelper: DragResizeHelper;\n  private disabledDragStart?: boolean;\n  private getRenderDocument: GetRenderDocument;\n  private markContainerEnd: MarkContainerEnd;\n  private delayedMarkContainer: DelayedMarkContainer;\n\n  constructor(config: StageDragResizeConfig) {\n    super(config);\n\n    this.getRenderDocument = config.getRenderDocument;\n    this.markContainerEnd = config.markContainerEnd;\n    this.delayedMarkContainer = config.delayedMarkContainer;\n    this.disabledDragStart = config.disabledDragStart;\n\n    this.dragResizeHelper = config.dragResizeHelper;\n\n    this.on('update-moveable', () => {\n      if (this.moveable) {\n        this.updateMoveable();\n      }\n    });\n  }\n\n  public getTarget() {\n    return this.target;\n  }\n\n  /**\n   * 将选中框渲染并覆盖到选中的组件Dom节点上方\n   * 当选中的节点不是absolute时，会创建一个新的节点出来作为拖拽目标\n   * @param el 选中组件的Dom节点元素\n   * @param event 鼠标事件\n   */\n  public select(el: HTMLElement, event?: MouseEvent): void {\n    // 从不能拖动到能拖动的节点之间切换，要重新创建moveable，不然dragStart不生效\n    if (!this.moveable || el !== this.target) {\n      this.initMoveable(el);\n    } else {\n      this.updateMoveable(el);\n    }\n\n    if (event && !this.disabledDragStart) {\n      this.moveable?.dragStart(event);\n    }\n  }\n\n  /**\n   * 初始化选中框并渲染出来\n   */\n  public updateMoveable(el = this.target): void {\n    if (!this.moveable) return;\n    if (!el) throw new Error('未选中任何节点');\n\n    const options: MoveableOptions = this.init(el);\n\n    Object.entries(options).forEach(([key, value]) => {\n      (this.moveable as any)[key] = value;\n    });\n    this.moveable.updateRect();\n  }\n\n  public clearSelectStatus(): void {\n    if (!this.moveable) return;\n    this.dragResizeHelper.destroyShadowEl();\n    this.moveable.target = null;\n    this.moveable.updateRect();\n  }\n\n  public getDragStatus(): StageDragStatus {\n    return this.dragStatus;\n  }\n\n  /**\n   * 销毁实例\n   */\n  public destroy(): void {\n    this.moveable?.destroy();\n    this.dragResizeHelper.destroy();\n    this.dragStatus = StageDragStatus.END;\n    this.removeAllListeners();\n  }\n\n  private init(el: HTMLElement): MoveableOptions {\n    // 如果有滚动条会导致resize时获取到width，height不准确\n    if (/(auto|scroll)/.test(el.style.overflow)) {\n      el.style.overflow = 'hidden';\n    }\n\n    this.target = el;\n    this.mode = getMode(el);\n\n    this.dragResizeHelper.updateShadowEl(el);\n    this.dragResizeHelper.setMode(this.mode);\n\n    // 设置选中元素的周围元素，用于选中元素跟周围元素对齐辅助\n    const elementGuidelines: HTMLElement[] = Array.prototype.slice.call(this.target?.parentElement?.children) || [];\n    this.setElementGuidelines([this.target as HTMLElement], elementGuidelines);\n\n    return this.getOptions(false, {\n      target: this.dragResizeHelper.getShadowEl(),\n    });\n  }\n\n  private initMoveable(el: HTMLElement) {\n    const options: MoveableOptions = this.init(el);\n    this.dragResizeHelper.clear();\n\n    this.moveable?.destroy();\n\n    this.moveable = new Moveable(this.container, {\n      ...options,\n    });\n\n    this.bindResizeEvent();\n    this.bindDragEvent();\n    this.bindRotateEvent();\n    this.bindScaleEvent();\n  }\n\n  private bindResizeEvent(): void {\n    if (!this.moveable) throw new Error('moveable 未初始化');\n\n    this.moveable\n      .on('resizeStart', (e) => {\n        if (!this.target) return;\n\n        this.dragStatus = StageDragStatus.START;\n        this.dragResizeHelper.onResizeStart(e);\n      })\n      .on('resize', (e) => {\n        if (!this.moveable || !this.target || !this.dragResizeHelper.getShadowEl()) return;\n\n        this.dragStatus = StageDragStatus.ING;\n\n        this.dragResizeHelper.onResize(e);\n      })\n      .on('resizeEnd', () => {\n        this.dragStatus = StageDragStatus.END;\n        this.update(true);\n      });\n  }\n\n  private bindDragEvent(): void {\n    if (!this.moveable) throw new Error('moveable 未初始化');\n\n    let timeout: NodeJS.Timeout | undefined;\n\n    this.moveable\n      .on('dragStart', (e) => {\n        if (!this.target) throw new Error('未选中组件');\n\n        this.dragStatus = StageDragStatus.START;\n\n        this.dragResizeHelper.onDragStart(e);\n        this.emit('drag-start', e);\n      })\n      .on('drag', (e) => {\n        if (!this.target || !this.dragResizeHelper.getShadowEl()) return;\n\n        if (timeout) {\n          globalThis.clearTimeout(timeout);\n          timeout = undefined;\n        }\n        timeout = this.delayedMarkContainer(e.inputEvent, [this.target]);\n\n        this.dragStatus = StageDragStatus.ING;\n\n        this.dragResizeHelper.onDrag(e);\n      })\n      .on('dragEnd', () => {\n        if (timeout) {\n          globalThis.clearTimeout(timeout);\n          timeout = undefined;\n        }\n\n        const parentEl = this.markContainerEnd();\n        // 点击不拖动时会触发dragStart和dragEnd，但是不会有drag事件\n        if (this.dragStatus === StageDragStatus.ING) {\n          if (parentEl) {\n            this.update(false, parentEl);\n          } else {\n            switch (this.mode) {\n              case Mode.SORTABLE:\n                this.sort();\n                break;\n              default:\n                this.update();\n            }\n          }\n        }\n\n        this.dragStatus = StageDragStatus.END;\n        this.dragResizeHelper.destroyGhostEl();\n      });\n  }\n\n  private bindRotateEvent(): void {\n    if (!this.moveable) throw new Error('moveable 未初始化');\n\n    this.moveable\n      .on('rotateStart', (e) => {\n        this.dragStatus = StageDragStatus.START;\n        this.dragResizeHelper.onRotateStart(e);\n      })\n      .on('rotate', (e) => {\n        if (!this.target || !this.dragResizeHelper.getShadowEl()) return;\n        this.dragStatus = StageDragStatus.ING;\n        this.dragResizeHelper.onRotate(e);\n      })\n      .on('rotateEnd', (e) => {\n        this.dragStatus = StageDragStatus.END;\n        const frame = this.dragResizeHelper?.getFrame(e.target);\n        this.emit('update', {\n          data: [\n            {\n              el: this.target,\n              style: {\n                transform: frame?.get('transform'),\n              },\n            },\n          ],\n        });\n      });\n  }\n\n  private bindScaleEvent(): void {\n    if (!this.moveable) throw new Error('moveable 未初始化');\n\n    this.moveable\n      .on('scaleStart', (e) => {\n        this.dragStatus = StageDragStatus.START;\n        this.dragResizeHelper.onScaleStart(e);\n      })\n      .on('scale', (e) => {\n        if (!this.target || !this.dragResizeHelper.getShadowEl()) return;\n        this.dragStatus = StageDragStatus.ING;\n        this.dragResizeHelper.onScale(e);\n      })\n      .on('scaleEnd', (e) => {\n        this.dragStatus = StageDragStatus.END;\n        const frame = this.dragResizeHelper.getFrame(e.target);\n        this.emit('update', {\n          data: [\n            {\n              el: this.target,\n              style: {\n                transform: frame?.get('transform'),\n              },\n            },\n          ],\n        });\n      });\n  }\n\n  private sort(): void {\n    if (!this.target || !this.dragResizeHelper.getGhostEl()) throw new Error('未知错误');\n    const { top } = this.dragResizeHelper.getGhostEl()!.getBoundingClientRect();\n    const { top: oriTop } = this.target.getBoundingClientRect();\n    const deltaTop = top - oriTop;\n    if (Math.abs(deltaTop) >= this.target.clientHeight / 2) {\n      if (deltaTop > 0) {\n        this.emit('sort', down(deltaTop, this.target));\n      } else {\n        this.emit('sort', up(deltaTop, this.target));\n      }\n    } else {\n      this.emit('sort', {\n        src: this.target.id,\n        dist: this.target.id,\n      });\n    }\n  }\n\n  private update(isResize = false, parentEl: HTMLElement | null = null): void {\n    if (!this.target) return;\n\n    const doc = this.getRenderDocument();\n\n    if (!doc) return;\n\n    const rect = this.dragResizeHelper.getUpdatedElRect(this.target, parentEl, doc);\n\n    this.emit('update', {\n      data: [\n        {\n          el: this.target,\n          style: isResize ? rect : { left: rect.left, top: rect.top },\n        },\n      ],\n      parentEl,\n    });\n  }\n}\n","/*\n * Tencent is pleased to support the open source community by making TMagicEditor available.\n *\n * Copyright (C) 2023 THL A29 Limited, a Tencent company.  All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { EventEmitter } from 'events';\n\nimport Moveable from 'moveable';\n\nimport { HIGHLIGHT_EL_ID_PREFIX, ZIndex } from './const';\nimport TargetShadow from './TargetShadow';\nimport type { GetRootContainer, StageHighlightConfig } from './types';\n\nexport default class StageHighlight extends EventEmitter {\n  public container: HTMLElement;\n  public target?: HTMLElement;\n  public moveable?: Moveable;\n  public targetShadow?: TargetShadow;\n  private getRootContainer: GetRootContainer;\n\n  constructor(config: StageHighlightConfig) {\n    super();\n\n    this.container = config.container;\n    this.getRootContainer = config.getRootContainer;\n\n    this.targetShadow = new TargetShadow({\n      container: config.container,\n      updateDragEl: config.updateDragEl,\n      zIndex: ZIndex.HIGHLIGHT_EL,\n      idPrefix: HIGHLIGHT_EL_ID_PREFIX,\n    });\n  }\n\n  /**\n   * 高亮鼠标悬停的组件\n   * @param el 选中组件的Dom节点元素\n   */\n  public highlight(el: HTMLElement): void {\n    if (!el || el === this.target) return;\n    this.target = el;\n\n    this.targetShadow?.update(el);\n    if (this.moveable) {\n      this.moveable.zoom = 2;\n      this.moveable.updateRect();\n    } else {\n      this.moveable = new Moveable(this.container, {\n        target: this.targetShadow?.el,\n        origin: false,\n        rootContainer: this.getRootContainer(),\n        zoom: 2,\n      });\n    }\n  }\n\n  /**\n   * 清空高亮\n   */\n  public clearHighlight(): void {\n    if (!this.moveable || !this.target) return;\n    this.moveable.zoom = 0;\n    this.moveable.updateRect();\n    this.target = undefined;\n  }\n\n  /**\n   * 销毁实例\n   */\n  public destroy(): void {\n    this.moveable?.destroy();\n    this.targetShadow?.destroy();\n    this.moveable = undefined;\n    this.targetShadow = undefined;\n  }\n}\n","/*\n * Tencent is pleased to support the open source community by making TMagicEditor available.\n *\n * Copyright (C) 2023 THL A29 Limited, a Tencent company.  All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Moveable from 'moveable';\n\nimport { DRAG_EL_ID_PREFIX, Mode } from './const';\nimport DragResizeHelper from './DragResizeHelper';\nimport MoveableOptionsManager from './MoveableOptionsManager';\nimport {\n  DelayedMarkContainer,\n  GetRenderDocument,\n  MarkContainerEnd,\n  MoveableOptionsManagerConfig,\n  StageDragStatus,\n  StageMultiDragResizeConfig,\n} from './types';\nimport { getMode } from './util';\n\nexport default class StageMultiDragResize extends MoveableOptionsManager {\n  /** 画布容器 */\n  public container: HTMLElement;\n  /** 多选:目标节点组 */\n  public targetList: HTMLElement[] = [];\n  /** Moveable多选拖拽类实例 */\n  public moveableForMulti?: Moveable;\n  public dragStatus: StageDragStatus = StageDragStatus.END;\n  private dragResizeHelper: DragResizeHelper;\n  private getRenderDocument: GetRenderDocument;\n  private delayedMarkContainer: DelayedMarkContainer;\n  private markContainerEnd: MarkContainerEnd;\n\n  constructor(config: StageMultiDragResizeConfig) {\n    const moveableOptionsManagerConfig: MoveableOptionsManagerConfig = {\n      container: config.container,\n      moveableOptions: config.moveableOptions,\n      getRootContainer: config.getRootContainer,\n    };\n    super(moveableOptionsManagerConfig);\n\n    this.delayedMarkContainer = config.delayedMarkContainer;\n    this.markContainerEnd = config.markContainerEnd;\n    this.container = config.container;\n    this.getRenderDocument = config.getRenderDocument;\n\n    this.dragResizeHelper = config.dragResizeHelper;\n\n    this.on('update-moveable', () => {\n      if (this.moveableForMulti) {\n        this.updateMoveable();\n      }\n    });\n  }\n\n  /**\n   * 多选\n   * @param els\n   */\n  public multiSelect(els: HTMLElement[]): void {\n    if (els.length === 0) {\n      return;\n    }\n    this.mode = getMode(els[0]);\n    this.targetList = els;\n\n    this.dragResizeHelper.updateGroup(els);\n\n    // 设置周围元素，用于选中元素跟周围元素的对齐辅助\n    const elementGuidelines: HTMLElement[] =\n      Array.prototype.slice.call(this.targetList[0].parentElement?.children) || [];\n    this.setElementGuidelines(this.targetList, elementGuidelines);\n\n    this.moveableForMulti?.destroy();\n    this.dragResizeHelper.clear();\n    this.moveableForMulti = new Moveable(\n      this.container,\n      this.getOptions(true, {\n        target: this.dragResizeHelper.getShadowEls(),\n      }),\n    );\n\n    let timeout: NodeJS.Timeout | undefined;\n\n    this.moveableForMulti\n      .on('resizeGroupStart', (e) => {\n        this.dragResizeHelper.onResizeGroupStart(e);\n        this.dragStatus = StageDragStatus.START;\n      })\n      .on('resizeGroup', (e) => {\n        this.dragResizeHelper.onResizeGroup(e);\n        this.dragStatus = StageDragStatus.ING;\n      })\n      .on('resizeGroupEnd', () => {\n        this.update(true);\n        this.dragStatus = StageDragStatus.END;\n      })\n      .on('dragGroupStart', (e) => {\n        this.dragResizeHelper.onDragGroupStart(e);\n        this.dragStatus = StageDragStatus.START;\n      })\n      .on('dragGroup', (e) => {\n        if (timeout) {\n          globalThis.clearTimeout(timeout);\n          timeout = undefined;\n        }\n        timeout = this.delayedMarkContainer(e.inputEvent, this.targetList);\n\n        this.dragResizeHelper.onDragGroup(e);\n        this.dragStatus = StageDragStatus.ING;\n      })\n      .on('dragGroupEnd', () => {\n        const parentEl = this.markContainerEnd();\n        this.update(false, parentEl);\n        this.dragStatus = StageDragStatus.END;\n      })\n      .on('clickGroup', (e) => {\n        const { inputTarget, targets } = e;\n        // 如果有多个元素被选中，同时点击的元素在选中元素中的其中一项，可能是多选态切换为该元素的单选态，抛事件给上一层继续判断是否切换\n        if (targets.length > 1 && targets.includes(inputTarget)) {\n          this.emit('change-to-select', inputTarget.id.replace(DRAG_EL_ID_PREFIX, ''));\n        }\n      });\n  }\n\n  public canSelect(el: HTMLElement, selectedEl: HTMLElement | undefined): boolean {\n    const currentTargetMode = getMode(el);\n    let selectedElMode = '';\n\n    // 流式布局不支持多选\n    if (currentTargetMode === Mode.SORTABLE) {\n      return false;\n    }\n\n    if (this.targetList.length === 0 && selectedEl) {\n      // 单选后添加到多选的情况\n      selectedElMode = getMode(selectedEl);\n    } else if (this.targetList.length > 0) {\n      // 已加入多选列表的布局模式是一样的，取第一个判断\n      selectedElMode = getMode(this.targetList[0]);\n    }\n    // 定位模式不同，不可混选\n    if (currentTargetMode !== selectedElMode) {\n      return false;\n    }\n    return true;\n  }\n\n  public updateMoveable(eleList = this.targetList) {\n    if (!this.moveableForMulti) return;\n    if (!eleList) throw new Error('未选中任何节点');\n\n    this.targetList = eleList;\n    this.dragResizeHelper.setTargetList(eleList);\n\n    const options = this.getOptions(true, {\n      target: this.dragResizeHelper.getShadowEls(),\n    });\n\n    Object.entries(options).forEach(([key, value]) => {\n      (this.moveableForMulti as any)[key] = value;\n    });\n    this.moveableForMulti.updateRect();\n  }\n\n  /**\n   * 清除多选状态\n   */\n  public clearSelectStatus(): void {\n    if (!this.moveableForMulti) return;\n    this.dragResizeHelper.clearMultiSelectStatus();\n    this.moveableForMulti.target = null;\n    this.moveableForMulti.updateTarget();\n    this.targetList = [];\n  }\n\n  /**\n   * 销毁实例\n   */\n  public destroy(): void {\n    this.moveableForMulti?.destroy();\n    this.dragResizeHelper.destroy();\n  }\n\n  /**\n   * 拖拽完成后将更新的位置信息暴露给上层业务方，业务方可以接收事件进行保存\n   * @param isResize 是否进行大小缩放\n   */\n  private update(isResize = false, parentEl: HTMLElement | null = null): void {\n    if (this.targetList.length === 0) return;\n\n    const doc = this.getRenderDocument();\n    if (!doc) return;\n\n    const data = this.targetList.map((targetItem) => {\n      const rect = this.dragResizeHelper.getUpdatedElRect(targetItem, parentEl, doc);\n      return {\n        el: targetItem,\n        style: isResize ? rect : { left: rect.left, top: rect.top },\n      };\n    });\n    this.emit('update', { data, parentEl });\n  }\n}\n","/*\n * Tencent is pleased to support the open source community by making TMagicEditor available.\n *\n * Copyright (C) 2023 THL A29 Limited, a Tencent company.  All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport EventEmitter from 'events';\n\nimport KeyController from 'keycon';\nimport { throttle } from 'lodash-es';\nimport type { MoveableOptions, OnDragStart } from 'moveable';\n\nimport { Env } from '@tmagic/core';\nimport type { Id } from '@tmagic/schema';\nimport { addClassName, getDocument, removeClassNameByClassName } from '@tmagic/utils';\n\nimport { CONTAINER_HIGHLIGHT_CLASS_NAME, GHOST_EL_ID_PREFIX, GuidesType, MouseButton, PAGE_CLASS } from './const';\nimport DragResizeHelper from './DragResizeHelper';\nimport StageDragResize from './StageDragResize';\nimport StageHighlight from './StageHighlight';\nimport StageMultiDragResize from './StageMultiDragResize';\nimport {\n  ActionManagerConfig,\n  CanSelect,\n  ContainerHighlightType,\n  CustomizeMoveableOptions,\n  CustomizeMoveableOptionsCallbackConfig,\n  GetElementsFromPoint,\n  GetRenderDocument,\n  GetTargetElement,\n  IsContainer,\n  Point,\n  RemoveEventData,\n  SelectStatus,\n  StageDragStatus,\n  UpdateEventData,\n} from './types';\nimport { isMoveableButton } from './util';\n\nconst throttleTime = 100;\nconst defaultContainerHighlightDuration = 800;\n\n/**\n * 管理蒙层mask之上的操作：1、监听键盘鼠标事件，判断形成单选、多选、高亮操作；2、管理单选、多选、高亮三个类协同工作。\n * @extends EventEmitter\n */\nexport default class ActionManager extends EventEmitter {\n  private dr: StageDragResize;\n  private multiDr: StageMultiDragResize;\n  private highlightLayer: StageHighlight;\n  /** 单选、多选、高亮的容器（蒙层的content） */\n  private container: HTMLElement;\n  /** 当前选中的节点 */\n  private selectedEl: HTMLElement | undefined;\n  /** 多选选中的节点组 */\n  private selectedElList: HTMLElement[] = [];\n  /** 当前高亮的节点 */\n  private highlightedEl: HTMLElement | undefined;\n  /** 当前是否处于多选状态 */\n  private isMultiSelectStatus = false;\n  /** 当拖拽组件到容器上方进入可加入容器状态时，给容器添加的一个class名称 */\n  private containerHighlightClassName: string;\n  /** 当拖拽组件到容器上方时，需要悬停多久才能将组件加入容器 */\n  private containerHighlightDuration: number;\n  /** 将组件加入容器的操作方式 */\n  private containerHighlightType?: ContainerHighlightType;\n  private isAltKeydown = false;\n  private getTargetElement: GetTargetElement;\n  private getElementsFromPoint: GetElementsFromPoint;\n  private canSelect: CanSelect;\n  private isContainer: IsContainer;\n  private getRenderDocument: GetRenderDocument;\n\n  private mouseMoveHandler = throttle(async (event: MouseEvent): Promise<void> => {\n    const el = await this.getElementFromPoint(event);\n    if (!el) {\n      this.clearHighlight();\n      return;\n    }\n\n    this.emit('mousemove', event);\n\n    this.highlight(el);\n  }, throttleTime);\n\n  constructor(config: ActionManagerConfig) {\n    super();\n    this.container = config.container;\n    this.containerHighlightClassName = config.containerHighlightClassName || CONTAINER_HIGHLIGHT_CLASS_NAME;\n    this.containerHighlightDuration = config.containerHighlightDuration || defaultContainerHighlightDuration;\n    this.containerHighlightType = config.containerHighlightType;\n    this.getTargetElement = config.getTargetElement;\n    this.getElementsFromPoint = config.getElementsFromPoint;\n    this.canSelect = config.canSelect || ((el: HTMLElement) => !!el.id);\n    this.getRenderDocument = config.getRenderDocument;\n    this.isContainer = config.isContainer;\n\n    const createDrHelper = () =>\n      new DragResizeHelper({\n        container: config.container,\n        updateDragEl: config.updateDragEl,\n      });\n\n    this.dr = new StageDragResize({\n      container: config.container,\n      disabledDragStart: config.disabledDragStart,\n      moveableOptions: this.changeCallback(config.moveableOptions, false),\n      dragResizeHelper: createDrHelper(),\n      getRootContainer: config.getRootContainer,\n      getRenderDocument: config.getRenderDocument,\n      markContainerEnd: this.markContainerEnd.bind(this),\n      delayedMarkContainer: this.delayedMarkContainer.bind(this),\n    });\n    this.multiDr = new StageMultiDragResize({\n      container: config.container,\n      moveableOptions: this.changeCallback(config.moveableOptions, true),\n      dragResizeHelper: createDrHelper(),\n      getRootContainer: config.getRootContainer,\n      getRenderDocument: config.getRenderDocument,\n      markContainerEnd: this.markContainerEnd.bind(this),\n      delayedMarkContainer: this.delayedMarkContainer.bind(this),\n    });\n    this.highlightLayer = new StageHighlight({\n      container: config.container,\n      updateDragEl: config.updateDragEl,\n      getRootContainer: config.getRootContainer,\n    });\n\n    this.initMouseEvent();\n    this.initKeyEvent();\n    this.initActionEvent();\n  }\n\n  /**\n   * 设置水平/垂直参考线\n   * @param type 参考线类型\n   * @param guidelines 参考线坐标数组\n   */\n  public setGuidelines(type: GuidesType, guidelines: number[]): void {\n    this.dr.setGuidelines(type, guidelines);\n    this.multiDr.setGuidelines(type, guidelines);\n  }\n\n  /**\n   * 清空所有参考线\n   */\n  public clearGuides(): void {\n    this.dr.clearGuides();\n    this.multiDr.clearGuides();\n  }\n\n  /**\n   * 更新moveable，外部主要调用场景是元素配置变更、页面大小变更\n   * @param el 变更的元素\n   */\n  public updateMoveable(el?: HTMLElement): void {\n    this.dr.updateMoveable(el);\n    // 多选时不可配置元素，因此不存在多选元素变更，不需要传el\n    this.multiDr.updateMoveable();\n  }\n\n  /**\n   * 判断是否单选选中的元素\n   */\n  public isSelectedEl(el: HTMLElement): boolean {\n    // 有可能dom已经重新渲染，不再是原来的dom了，所以这里判断id，而不是判断el === this.selectedDom\n    return el.id === this.selectedEl?.id;\n  }\n\n  public setSelectedEl(el: HTMLElement): void {\n    this.selectedEl = el;\n  }\n\n  public getSelectedEl(): HTMLElement | undefined {\n    return this.selectedEl;\n  }\n\n  public getSelectedElList(): HTMLElement[] {\n    return this.selectedElList;\n  }\n\n  public getMoveableOption<K extends keyof MoveableOptions>(key: K): MoveableOptions[K] | undefined {\n    if (this.dr.getTarget()) {\n      return this.dr.getOption(key);\n    }\n    if (this.multiDr.targetList.length) {\n      return this.multiDr.getOption(key);\n    }\n  }\n\n  /**\n   * 获取鼠标下方第一个可选中元素，如果元素层叠，返回到是最上层元素\n   * @param event 鼠标事件\n   * @returns 鼠标下方第一个可选中元素\n   */\n  public async getElementFromPoint(event: MouseEvent): Promise<HTMLElement | undefined> {\n    const els = this.getElementsFromPoint(event as Point);\n\n    this.emit('get-elements-from-point', els);\n\n    let stopped = false;\n    const stop = () => (stopped = true);\n    for (const el of els) {\n      if (!el.id.startsWith(GHOST_EL_ID_PREFIX) && (await this.isElCanSelect(el, event, stop))) {\n        if (stopped) break;\n        return el;\n      }\n    }\n  }\n\n  /**\n   * 判断一个元素能否在当前场景被选中\n   * @param el 被判断的元素\n   * @param event 鼠标事件\n   * @param stop 通过该元素如果得知剩下的元素都不可被选中，通知调用方终止对剩下元素的判断\n   * @returns 能否选中\n   */\n  public async isElCanSelect(el: HTMLElement, event: MouseEvent, stop: () => boolean): Promise<boolean> {\n    // 执行业务方传入的判断逻辑\n    const canSelectByProp = await this.canSelect(el, event, stop);\n    if (!canSelectByProp) return false;\n    // 多选规则\n    if (this.isMultiSelectStatus) {\n      return this.canMultiSelect(el, stop);\n    }\n    return true;\n  }\n\n  /**\n   * 判断一个元素是否可以被多选，如果当前元素是page，则调stop函数告诉调用方不必继续判断其它元素了\n   */\n  public canMultiSelect(el: HTMLElement, stop: () => boolean): boolean {\n    // 多选状态下不可以选中magic-ui-page，并停止继续向上层选中\n    if (el.className.includes(PAGE_CLASS)) {\n      stop();\n      return false;\n    }\n    const selectedEl = this.getSelectedEl();\n    // 先单击选中了页面(magic-ui-page)，再按住多选键多选时，任一元素均可选中\n    if (selectedEl?.className.includes(PAGE_CLASS)) {\n      return true;\n    }\n    return this.multiDr.canSelect(el, selectedEl);\n  }\n\n  public select(el: HTMLElement, event: MouseEvent | undefined): void {\n    this.selectedEl = el;\n    this.clearSelectStatus(SelectStatus.MULTI_SELECT);\n    this.dr.select(el, event);\n  }\n\n  public multiSelect(idOrElList: HTMLElement[] | Id[]): void {\n    this.selectedElList = idOrElList.map((idOrEl) => this.getTargetElement(idOrEl));\n    this.clearSelectStatus(SelectStatus.SELECT);\n    this.multiDr.multiSelect(this.selectedElList);\n  }\n\n  public getHighlightEl(): HTMLElement | undefined {\n    return this.highlightedEl;\n  }\n\n  public setHighlightEl(el: HTMLElement | undefined): void {\n    this.highlightedEl = el;\n  }\n\n  public highlight(idOrEl: Id | HTMLElement): void {\n    let el;\n    try {\n      el = this.getTargetElement(idOrEl);\n    } catch (error) {\n      this.clearHighlight();\n      return;\n    }\n\n    // 选中组件不高亮、多选拖拽状态不高亮\n    if (el === this.getSelectedEl() || this.multiDr.dragStatus === StageDragStatus.ING) {\n      this.clearHighlight();\n      return;\n    }\n    if (el === this.highlightedEl || !el) return;\n\n    this.highlightLayer.highlight(el);\n    this.highlightedEl = el;\n    this.emit('highlight', el);\n  }\n\n  public clearHighlight(): void {\n    this.setHighlightEl(undefined);\n    this.highlightLayer.clearHighlight();\n  }\n\n  /**\n   * 用于在切换选择模式时清除上一次的状态\n   * @param selectType 需要清理的选择模式\n   */\n  public clearSelectStatus(selectType: SelectStatus): void {\n    if (selectType === SelectStatus.MULTI_SELECT) {\n      this.multiDr.clearSelectStatus();\n      this.selectedElList = [];\n    } else {\n      this.dr.clearSelectStatus();\n    }\n  }\n\n  /**\n   * 找到鼠标下方的容器，通过添加className对容器进行标记\n   * @param event 鼠标事件\n   * @param excludeElList 计算鼠标点所在容器时要排除的元素列表\n   */\n  public async addContainerHighlightClassName(event: MouseEvent, excludeElList: Element[]): Promise<void> {\n    const doc = this.getRenderDocument();\n    if (!doc) return;\n\n    const els = this.getElementsFromPoint(event);\n\n    for (const el of els) {\n      if (!el.id.startsWith(GHOST_EL_ID_PREFIX) && (await this.isContainer(el)) && !excludeElList.includes(el)) {\n        addClassName(el, doc, this.containerHighlightClassName);\n        break;\n      }\n    }\n  }\n\n  /**\n   * 鼠标拖拽着元素，在容器上方悬停，延迟一段时间后，对容器进行标记，如果悬停时间够长将标记成功，悬停时间短，调用方通过返回的timeoutId取消标记\n   * 标记的作用：1、高亮容器，给用户一个加入容器的交互感知；2、释放鼠标后，通过标记的标志找到要加入的容器\n   * @param event 鼠标事件\n   * @param excludeElList 计算鼠标所在容器时要排除的元素列表\n   * @returns timeoutId，调用方在鼠标移走时要取消该timeout，阻止标记\n   */\n  public delayedMarkContainer(event: MouseEvent, excludeElList: Element[] = []): NodeJS.Timeout | undefined {\n    if (this.canAddToContainer()) {\n      return globalThis.setTimeout(() => {\n        this.addContainerHighlightClassName(event, excludeElList);\n      }, this.containerHighlightDuration);\n    }\n    return undefined;\n  }\n\n  public getDragStatus() {\n    return this.dr.getDragStatus();\n  }\n\n  public destroy(): void {\n    this.container.removeEventListener('mousedown', this.mouseDownHandler);\n    this.container.removeEventListener('mousemove', this.mouseMoveHandler);\n    this.container.removeEventListener('mouseleave', this.mouseLeaveHandler);\n    this.container.removeEventListener('wheel', this.mouseWheelHandler);\n    this.dr.destroy();\n    this.multiDr.destroy();\n    this.highlightLayer.destroy();\n  }\n\n  private changeCallback(options: CustomizeMoveableOptions, isMulti: boolean): CustomizeMoveableOptions {\n    // 在actionManager才能获取到各种参数，在这里传好参数有比较好的扩展性\n    if (typeof options === 'function') {\n      return () => {\n        // 要再判断一次，不然过不了ts检查\n        if (typeof options === 'function') {\n          const cfg: CustomizeMoveableOptionsCallbackConfig = {\n            targetEl: this.selectedEl,\n            targetElId: this.selectedEl?.id,\n            targetEls: this.selectedElList,\n            targetElIds: this.selectedElList?.map((item) => item.id),\n            isMulti,\n          };\n          return options(cfg);\n        }\n        return options;\n      };\n    }\n    return options;\n  }\n\n  /**\n   * 在执行多选逻辑前，先准备好多选选中元素\n   * @param el 新选中的元素\n   * @returns 多选选中的元素列表\n   */\n  private async beforeMultiSelect(event: MouseEvent): Promise<void> {\n    const el = await this.getElementFromPoint(event);\n    if (!el) return;\n\n    // 如果已有单选选中元素，不是magic-ui-page就可以加入多选列表\n    if (this.selectedEl && !this.selectedEl.className.includes(PAGE_CLASS)) {\n      this.selectedElList.push(this.selectedEl as HTMLElement);\n      this.selectedEl = undefined;\n    }\n    // 判断元素是否已在多选列表\n    const existIndex = this.selectedElList.findIndex((selectedDom) => selectedDom.id === el.id);\n    if (existIndex !== -1) {\n      // 再次点击取消选中\n      this.selectedElList.splice(existIndex, 1);\n    } else {\n      this.selectedElList.push(el);\n    }\n  }\n\n  /**\n   * 当前状态下能否将组件加入容器，默认是鼠标悬停一段时间加入，alt模式则是按住alt+鼠标悬停一段时间加入\n   */\n  private canAddToContainer(): boolean {\n    return (\n      this.containerHighlightType === ContainerHighlightType.DEFAULT ||\n      (this.containerHighlightType === ContainerHighlightType.ALT && this.isAltKeydown)\n    );\n  }\n\n  /**\n   * 结束对container的标记状态\n   * @returns 标记的容器元素，没有标记的容器时返回null\n   */\n  private markContainerEnd(): HTMLElement | null {\n    const doc = this.getRenderDocument();\n    if (doc && this.canAddToContainer()) {\n      return removeClassNameByClassName(doc, this.containerHighlightClassName);\n    }\n    return null;\n  }\n\n  private initMouseEvent(): void {\n    this.container.addEventListener('mousedown', this.mouseDownHandler);\n    this.container.addEventListener('mousemove', this.mouseMoveHandler);\n    this.container.addEventListener('mouseleave', this.mouseLeaveHandler);\n    this.container.addEventListener('wheel', this.mouseWheelHandler);\n  }\n\n  /**\n   * 初始化键盘事件监听\n   */\n  private initKeyEvent(): void {\n    const { isMac } = new Env();\n    const ctrl = isMac ? 'meta' : 'ctrl';\n\n    // 多选启用状态监听\n    KeyController.global.keydown(ctrl, (e) => {\n      e.inputEvent.preventDefault();\n      this.isMultiSelectStatus = true;\n    });\n    // ctrl+tab切到其他窗口，需要将多选状态置为false\n    KeyController.global.on('blur', () => {\n      this.isMultiSelectStatus = false;\n    });\n    KeyController.global.keyup(ctrl, (e) => {\n      e.inputEvent.preventDefault();\n      this.isMultiSelectStatus = false;\n    });\n\n    // alt健监听，用于启用拖拽组件加入容器状态\n    KeyController.global.keydown('alt', (e) => {\n      e.inputEvent.preventDefault();\n      this.isAltKeydown = true;\n    });\n\n    KeyController.global.keyup('alt', (e) => {\n      e.inputEvent.preventDefault();\n      this.markContainerEnd();\n      this.isAltKeydown = false;\n    });\n  }\n\n  /**\n   * 处理单选、多选抛出来的事件\n   */\n  private initActionEvent(): void {\n    this.dr\n      .on('update', (data: UpdateEventData) => {\n        // 点击组件并立即拖动的场景，要保证select先被触发，延迟update通知\n        setTimeout(() => this.emit('update', data));\n      })\n      .on('sort', (data: UpdateEventData) => {\n        // 点击组件并立即拖动的场景，要保证select先被触发，延迟update通知\n        setTimeout(() => this.emit('sort', data));\n      })\n      .on('select-parent', () => {\n        this.emit('select-parent');\n      })\n      .on('remove', () => {\n        const drTarget = this.dr.getTarget();\n        if (!drTarget) return;\n        const data: RemoveEventData = {\n          data: [{ el: drTarget }],\n        };\n        this.emit('remove', data);\n      })\n      .on('drag-start', (e: OnDragStart) => {\n        this.emit('drag-start', e);\n      });\n\n    this.multiDr\n      .on('update', (data: UpdateEventData) => {\n        this.emit('multi-update', data);\n      })\n      .on('change-to-select', async (id: Id) => {\n        // 如果还在多选状态，不触发切换到单选\n        if (this.isMultiSelectStatus) return false;\n        const el = this.getTargetElement(id);\n        this.emit('change-to-select', el);\n      });\n  }\n\n  /**\n   * 在down事件中集中cpu处理画布中选中操作渲染，在up事件中再通知外面的编辑器更新\n   */\n  private mouseDownHandler = async (event: MouseEvent): Promise<void> => {\n    this.clearHighlight();\n    event.stopImmediatePropagation();\n    event.stopPropagation();\n\n    if (this.isStopTriggerSelect(event)) return;\n\n    // 点击状态下不触发高亮事件\n    this.container.removeEventListener('mousemove', this.mouseMoveHandler);\n\n    // 判断触发多选还是单选\n    if (this.isMultiSelectStatus) {\n      await this.beforeMultiSelect(event);\n      if (this.selectedElList.length > 0) {\n        this.emit('before-multi-select', this.selectedElList);\n      }\n    } else {\n      const el = await this.getElementFromPoint(event);\n      if (!el) return;\n      this.emit('before-select', el, event);\n    }\n    getDocument().addEventListener('mouseup', this.mouseUpHandler);\n  };\n\n  private isStopTriggerSelect(event: MouseEvent): boolean {\n    if (event.button !== MouseButton.LEFT && event.button !== MouseButton.RIGHT) return true;\n    if (!event.target) return true;\n\n    const targetClassList = (event.target as HTMLDivElement).classList;\n\n    // 如果单击多选选中区域，则不需要再触发选中了，要支持此处单击后进行拖动\n    if (!this.isMultiSelectStatus && targetClassList.contains('moveable-area')) {\n      return true;\n    }\n    // 点击对象如果是边框锚点，则可能是resize; 点击对象是功能按钮\n    if (targetClassList.contains('moveable-control') || isMoveableButton(event.target as Element)) {\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * 在up事件中负责对外通知选中事件，通知画布之外的编辑器更新\n   */\n  private mouseUpHandler = (): void => {\n    getDocument().removeEventListener('mouseup', this.mouseUpHandler);\n    this.container.addEventListener('mousemove', this.mouseMoveHandler);\n    if (this.isMultiSelectStatus) {\n      this.emit('multi-select', this.selectedElList);\n    } else {\n      this.emit('select', this.selectedEl);\n    }\n  };\n\n  private mouseLeaveHandler = (event: MouseEvent) => {\n    setTimeout(() => this.clearHighlight(), throttleTime);\n    this.emit('mouseleave', event);\n  };\n\n  private mouseWheelHandler = () => {\n    this.clearHighlight();\n  };\n}\n","import EventEmitter from 'events';\n\nimport Guides, { GuidesEvents } from '@scena/guides';\n\nimport { GuidesType } from './const';\n\nexport default class Rule extends EventEmitter {\n  public hGuides: Guides;\n  public vGuides: Guides;\n  public horizontalGuidelines: number[] = [];\n  public verticalGuidelines: number[] = [];\n\n  private container: HTMLDivElement;\n  private containerResizeObserver: ResizeObserver;\n  private isShowGuides = true;\n\n  constructor(container: HTMLDivElement) {\n    super();\n\n    this.container = container;\n    this.hGuides = this.createGuides(GuidesType.HORIZONTAL, this.horizontalGuidelines);\n    this.vGuides = this.createGuides(GuidesType.VERTICAL, this.verticalGuidelines);\n\n    this.hGuides.on('changeGuides', this.hGuidesChangeGuidesHandler);\n    this.vGuides.on('changeGuides', this.vGuidesChangeGuidesHandler);\n\n    this.containerResizeObserver = new ResizeObserver(() => {\n      this.vGuides.resize();\n      this.hGuides.resize();\n    });\n\n    this.containerResizeObserver.observe(this.container);\n  }\n\n  /**\n   * 是否显示辅助线\n   * @param isShowGuides 是否显示\n   */\n  public showGuides(isShowGuides = true) {\n    this.isShowGuides = isShowGuides;\n\n    this.hGuides.setState({\n      showGuides: isShowGuides,\n    });\n\n    this.vGuides.setState({\n      showGuides: isShowGuides,\n    });\n  }\n\n  public setGuides([hLines, vLines]: [number[], number[]]) {\n    this.horizontalGuidelines = hLines;\n    this.verticalGuidelines = vLines;\n\n    this.hGuides.setState({\n      defaultGuides: hLines,\n    });\n\n    this.vGuides.setState({\n      defaultGuides: vLines,\n    });\n\n    this.emit('change-guides', {\n      type: GuidesType.HORIZONTAL,\n      guides: hLines,\n    });\n\n    this.emit('change-guides', {\n      type: GuidesType.VERTICAL,\n      guides: vLines,\n    });\n  }\n\n  /**\n   * 清空所有参考线\n   */\n  public clearGuides() {\n    this.setGuides([[], []]);\n  }\n\n  /**\n   * 是否显示标尺\n   * @param show 是否显示\n   */\n  public showRule(show = true) {\n    // 当尺子隐藏时发现大小变化，显示后会变形，所以这里做重新初始化处理\n    if (show) {\n      this.hGuides.destroy();\n      this.hGuides = this.createGuides(GuidesType.HORIZONTAL, this.horizontalGuidelines);\n\n      this.vGuides.destroy();\n      this.vGuides = this.createGuides(GuidesType.VERTICAL, this.verticalGuidelines);\n    } else {\n      this.hGuides.setState({\n        rulerStyle: {\n          visibility: 'hidden',\n        },\n      });\n\n      this.vGuides.setState({\n        rulerStyle: {\n          visibility: 'hidden',\n        },\n      });\n    }\n  }\n\n  public scrollRule(scrollTop: number) {\n    this.hGuides.scrollGuides(scrollTop);\n    this.hGuides.scroll(0);\n\n    this.vGuides.scrollGuides(0);\n    this.vGuides.scroll(scrollTop);\n  }\n\n  public destroy(): void {\n    this.hGuides.off('changeGuides', this.hGuidesChangeGuidesHandler);\n    this.vGuides.off('changeGuides', this.vGuidesChangeGuidesHandler);\n    this.containerResizeObserver.disconnect();\n    this.removeAllListeners();\n  }\n\n  private getGuidesStyle = (type: GuidesType) => ({\n    position: 'fixed',\n    zIndex: 1,\n    left: type === GuidesType.HORIZONTAL ? 0 : '-30px',\n    top: type === GuidesType.HORIZONTAL ? '-30px' : 0,\n    width: type === GuidesType.HORIZONTAL ? '100%' : '30px',\n    height: type === GuidesType.HORIZONTAL ? '30px' : '100%',\n  });\n\n  private createGuides = (type: GuidesType, defaultGuides: number[] = []): Guides =>\n    new Guides(this.container, {\n      type,\n      defaultGuides,\n      displayDragPos: true,\n      backgroundColor: '#fff',\n      lineColor: '#000',\n      textColor: '#000',\n      style: this.getGuidesStyle(type),\n      showGuides: this.isShowGuides,\n    });\n\n  private hGuidesChangeGuidesHandler = (e: GuidesEvents['changeGuides']) => {\n    this.horizontalGuidelines = e.guides;\n    this.emit('change-guides', {\n      type: GuidesType.HORIZONTAL,\n      guides: this.horizontalGuidelines,\n    });\n  };\n\n  private vGuidesChangeGuidesHandler = (e: GuidesEvents['changeGuides']) => {\n    this.verticalGuidelines = e.guides;\n    this.emit('change-guides', {\n      type: GuidesType.VERTICAL,\n      guides: this.verticalGuidelines,\n    });\n  };\n}\n","/*\n * Tencent is pleased to support the open source community by making TMagicEditor available.\n *\n * Copyright (C) 2023 THL A29 Limited, a Tencent company.  All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { createDiv, getDocument, injectStyle } from '@tmagic/utils';\n\nimport { Mode, ZIndex } from './const';\nimport Rule from './Rule';\nimport { getScrollParent, isFixedParent } from './util';\n\nconst wrapperClassName = 'editor-mask-wrapper';\n\nconst hideScrollbar = () => {\n  injectStyle(getDocument(), `.${wrapperClassName}::-webkit-scrollbar { width: 0 !important; display: none }`);\n};\n\nconst createContent = (): HTMLDivElement =>\n  createDiv({\n    className: 'editor-mask',\n    cssText: `\n    position: absolute;\n    top: 0;\n    left: 0;\n    transform: translate3d(0, 0, 0);\n  `,\n  });\n\nconst createWrapper = (): HTMLDivElement => {\n  const el = createDiv({\n    className: wrapperClassName,\n    cssText: `\n      position: absolute;\n      top: 0;\n      left: 0;\n      height: 100%;\n      width: 100%;\n      overflow: hidden;\n      z-index: ${ZIndex.MASK};\n    `,\n  });\n\n  hideScrollbar();\n\n  return el;\n};\n\n/**\n * 蒙层\n * @description 用于拦截页面的点击动作，避免点击时触发组件自身动作；在编辑器中点击组件应当是选中组件；\n */\nexport default class StageMask extends Rule {\n  public content: HTMLDivElement = createContent();\n  public wrapper: HTMLDivElement;\n  public page: HTMLElement | null = null;\n  public scrollTop = 0;\n  public scrollLeft = 0;\n  public width = 0;\n  public height = 0;\n  public wrapperHeight = 0;\n  public wrapperWidth = 0;\n  public maxScrollTop = 0;\n  public maxScrollLeft = 0;\n\n  private mode: Mode = Mode.ABSOLUTE;\n  private pageScrollParent: HTMLElement | null = null;\n  private intersectionObserver: IntersectionObserver | null = null;\n  private wrapperResizeObserver: ResizeObserver | null = null;\n\n  constructor() {\n    const wrapper = createWrapper();\n    super(wrapper);\n\n    this.wrapper = wrapper;\n\n    this.content.addEventListener('wheel', this.mouseWheelHandler);\n    this.wrapper.appendChild(this.content);\n  }\n\n  public setMode(mode: Mode) {\n    this.mode = mode;\n    this.scroll();\n\n    this.content.dataset.mode = mode;\n\n    if (mode === Mode.FIXED) {\n      this.content.style.width = `${this.wrapperWidth}px`;\n      this.content.style.height = `${this.wrapperHeight}px`;\n    } else {\n      this.content.style.width = `${this.width}px`;\n      this.content.style.height = `${this.height}px`;\n    }\n  }\n\n  /**\n   * 初始化视窗和蒙层监听，监听元素是否在视窗区域、监听mask蒙层所在的wrapper大小变化\n   * @description 初始化视窗和蒙层监听\n   * @param page 页面Dom节点\n   */\n  public observe(page: HTMLElement): void {\n    if (!page) return;\n\n    this.page = page;\n    this.initObserverIntersection();\n    this.initObserverWrapper();\n  }\n\n  /**\n   * 处理页面大小变更，同步页面和mask大小\n   * @param entries ResizeObserverEntry，获取页面最新大小\n   */\n  public pageResize(entries: ResizeObserverEntry[]): void {\n    const [entry] = entries;\n    const { clientHeight, clientWidth } = entry.target;\n    this.setHeight(clientHeight);\n    this.setWidth(clientWidth);\n\n    this.scroll();\n  }\n\n  /**\n   * 监听一个组件是否在画布可视区域内\n   * @param el 被选中的组件，可能是左侧目录树中选中的\n   */\n  public observerIntersection(el: HTMLElement): void {\n    this.intersectionObserver?.observe(el);\n  }\n\n  /**\n   * 挂载Dom节点\n   * @param el 将蒙层挂载到该Dom节点上\n   */\n  public mount(el: HTMLDivElement): void {\n    if (!this.content) throw new Error('content 不存在');\n\n    el.appendChild(this.wrapper);\n  }\n\n  public setLayout(el: HTMLElement): void {\n    this.setMode(isFixedParent(el) ? Mode.FIXED : Mode.ABSOLUTE);\n  }\n\n  public scrollIntoView(el: Element): void {\n    el.scrollIntoView();\n    if (!this.pageScrollParent) return;\n    this.scrollLeft = this.pageScrollParent.scrollLeft;\n    this.scrollTop = this.pageScrollParent.scrollTop;\n    this.scroll();\n  }\n\n  /**\n   * 销毁实例\n   */\n  public destroy(): void {\n    this.content?.remove();\n    this.page = null;\n    this.pageScrollParent = null;\n    this.wrapperResizeObserver?.disconnect();\n\n    super.destroy();\n  }\n\n  /**\n   * 监听选中元素是否在画布可视区域内，如果目标元素不在可视区域内，通过滚动使该元素出现在可视区域\n   */\n  private initObserverIntersection(): void {\n    this.pageScrollParent = getScrollParent(this.page as HTMLElement) || null;\n    this.intersectionObserver?.disconnect();\n\n    if (typeof IntersectionObserver !== 'undefined') {\n      this.intersectionObserver = new IntersectionObserver(\n        (entries) => {\n          entries.forEach((entry) => {\n            const { target, intersectionRatio } = entry;\n            if (intersectionRatio <= 0) {\n              this.scrollIntoView(target);\n            }\n            this.intersectionObserver?.unobserve(target);\n          });\n        },\n        {\n          root: this.pageScrollParent,\n          rootMargin: '0px',\n          threshold: 1.0,\n        },\n      );\n    }\n  }\n\n  /**\n   * 监听mask的容器大小变化\n   */\n  private initObserverWrapper(): void {\n    this.wrapperResizeObserver?.disconnect();\n    if (typeof ResizeObserver !== 'undefined') {\n      this.wrapperResizeObserver = new ResizeObserver((entries) => {\n        const [entry] = entries;\n        const { clientHeight, clientWidth } = entry.target;\n        this.wrapperHeight = clientHeight;\n        this.wrapperWidth = clientWidth;\n        this.setMaxScrollLeft();\n        this.setMaxScrollTop();\n      });\n      this.wrapperResizeObserver.observe(this.wrapper);\n    }\n  }\n\n  private scroll() {\n    this.fixScrollValue();\n\n    let { scrollLeft, scrollTop } = this;\n\n    if (this.pageScrollParent) {\n      this.pageScrollParent.scrollTo({\n        top: scrollTop,\n        left: scrollLeft,\n      });\n    }\n\n    if (this.mode === Mode.FIXED) {\n      scrollLeft = 0;\n      scrollTop = 0;\n    }\n\n    this.scrollRule(scrollTop);\n    this.scrollTo(scrollLeft, scrollTop);\n  }\n\n  private scrollTo(scrollLeft: number, scrollTop: number): void {\n    this.content.style.transform = `translate3d(${-scrollLeft}px, ${-scrollTop}px, 0)`;\n\n    const event = new CustomEvent<{\n      scrollLeft: number;\n      scrollTop: number;\n    }>('customScroll', {\n      detail: {\n        scrollLeft: this.scrollLeft,\n        scrollTop: this.scrollTop,\n      },\n    });\n    this.content.dispatchEvent(event);\n  }\n\n  /**\n   * 设置蒙层高度\n   * @param height 高度\n   */\n  private setHeight(height: number): void {\n    this.height = height;\n    this.setMaxScrollTop();\n    this.content.style.height = `${height}px`;\n  }\n\n  /**\n   * 设置蒙层宽度\n   * @param width 宽度\n   */\n  private setWidth(width: number): void {\n    this.width = width;\n    this.setMaxScrollLeft();\n    this.content.style.width = `${width}px`;\n  }\n\n  /**\n   * 计算并设置最大滚动宽度\n   */\n  private setMaxScrollLeft(): void {\n    this.maxScrollLeft = Math.max(this.width - this.wrapperWidth, 0);\n  }\n\n  /**\n   * 计算并设置最大滚动高度\n   */\n  private setMaxScrollTop(): void {\n    this.maxScrollTop = Math.max(this.height - this.wrapperHeight, 0);\n  }\n\n  /**\n   * 修复滚动距离\n   * 由于滚动容器变化等因素，会导致当前滚动的距离不正确\n   */\n  private fixScrollValue(): void {\n    if (this.scrollTop < 0) this.scrollTop = 0;\n    if (this.scrollLeft < 0) this.scrollLeft = 0;\n    if (this.maxScrollTop < this.scrollTop) this.scrollTop = this.maxScrollTop;\n    if (this.maxScrollLeft < this.scrollLeft) this.scrollLeft = this.maxScrollLeft;\n  }\n\n  private mouseWheelHandler = (event: WheelEvent) => {\n    if (!this.page) throw new Error('page 未初始化');\n\n    const { deltaY, deltaX } = event;\n\n    if (this.page.clientHeight < this.wrapperHeight && deltaY) return;\n    if (this.page.clientWidth < this.wrapperWidth && deltaX) return;\n\n    if (this.maxScrollTop > 0) {\n      this.scrollTop = this.scrollTop + deltaY;\n    }\n\n    if (this.maxScrollLeft > 0) {\n      this.scrollLeft = this.scrollLeft + deltaX;\n    }\n\n    this.scroll();\n    this.emit('scroll', event);\n  };\n}\n","export default \".tmagic-stage-container-highlight::after {\\n  content: '';\\n  position: absolute;\\n  width: 100%;\\n  height: 100%;\\n  top: 0;\\n  left: 0;\\n  background-color: #000;\\n  opacity: .1;\\n  pointer-events: none;\\n}\\n\\n.magic-ui-container.magic-layout-relative {\\n  min-height: 50px;\\n}\\n\"","/*\n * Tencent is pleased to support the open source community by making TMagicEditor available.\n *\n * Copyright (C) 2023 THL A29 Limited, a Tencent company.  All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { EventEmitter } from 'events';\n\nimport { Id } from '@tmagic/schema';\nimport { getHost, injectStyle, isSameDomain } from '@tmagic/utils';\n\nimport { DEFAULT_ZOOM } from './const';\nimport style from './style.css?raw';\nimport type { Point, RemoveData, Runtime, RuntimeWindow, StageRenderConfig, UpdateData } from './types';\nimport { addSelectedClassName, removeSelectedClassName } from './util';\n\nexport default class StageRender extends EventEmitter {\n  /** 组件的js、css执行的环境，直接渲染为当前window，iframe渲染则为iframe.contentWindow */\n  public contentWindow: RuntimeWindow | null = null;\n  public runtime: Runtime | null = null;\n  public iframe?: HTMLIFrameElement;\n\n  private runtimeUrl?: string;\n  private zoom = DEFAULT_ZOOM;\n  private customizedRender?: () => Promise<HTMLElement | null>;\n\n  constructor({ runtimeUrl, zoom, customizedRender }: StageRenderConfig) {\n    super();\n\n    this.runtimeUrl = runtimeUrl || '';\n    this.customizedRender = customizedRender;\n    this.setZoom(zoom);\n\n    this.iframe = globalThis.document.createElement('iframe');\n    // 同源，直接加载\n    this.iframe.src = isSameDomain(this.runtimeUrl) ? this.runtimeUrl : '';\n    this.iframe.style.cssText = `\n      border: 0;\n      width: 100%;\n      height: 100%;\n    `;\n\n    this.iframe.addEventListener('load', this.loadHandler);\n  }\n\n  public getMagicApi = () => ({\n    onPageElUpdate: (el: HTMLElement) => this.emit('page-el-update', el),\n    onRuntimeReady: (runtime: Runtime) => {\n      this.runtime = runtime;\n      // @ts-ignore\n      globalThis.runtime = runtime;\n      this.emit('runtime-ready', runtime);\n    },\n  });\n\n  public async add(data: UpdateData): Promise<void> {\n    const runtime = await this.getRuntime();\n    return runtime?.add?.(data);\n  }\n\n  public async remove(data: RemoveData): Promise<void> {\n    const runtime = await this.getRuntime();\n    return runtime?.remove?.(data);\n  }\n\n  public async update(data: UpdateData): Promise<void> {\n    const runtime = await this.getRuntime();\n    // 更新画布中的组件\n    runtime?.update?.(data);\n  }\n\n  public async select(els: HTMLElement[]): Promise<void> {\n    const runtime = await this.getRuntime();\n\n    for (const el of els) {\n      await runtime?.select?.(el.id);\n      if (runtime?.beforeSelect) {\n        await runtime.beforeSelect(el);\n      }\n      this.flagSelectedEl(el);\n    }\n  }\n\n  public setZoom(zoom: number = DEFAULT_ZOOM): void {\n    this.zoom = zoom;\n  }\n\n  /**\n   * 挂载Dom节点\n   * @param el 将页面挂载到该Dom节点上\n   */\n  public async mount(el: HTMLDivElement) {\n    if (!this.iframe) {\n      throw Error('mount 失败');\n    }\n\n    if (!isSameDomain(this.runtimeUrl) && this.runtimeUrl) {\n      // 不同域，使用srcdoc发起异步请求，需要目标地址支持跨域\n      let html = await fetch(this.runtimeUrl).then((res) => res.text());\n      // 使用base, 解决相对路径或绝对路径的问题\n      const base = `${location.protocol}//${getHost(this.runtimeUrl)}`;\n      html = html.replace('<head>', `<head>\\n<base href=\"${base}\">`);\n      this.iframe.srcdoc = html;\n    }\n\n    el.appendChild<HTMLIFrameElement>(this.iframe);\n\n    this.postTmagicRuntimeReady();\n  }\n\n  public getRuntime = (): Promise<Runtime> => {\n    if (this.runtime) return Promise.resolve(this.runtime);\n    return new Promise((resolve) => {\n      const listener = (runtime: Runtime) => {\n        this.off('runtime-ready', listener);\n        resolve(runtime);\n      };\n      this.on('runtime-ready', listener);\n    });\n  };\n\n  public getDocument(): Document | undefined {\n    return this.contentWindow?.document;\n  }\n\n  /**\n   * 通过坐标获得坐标下所有HTML元素数组\n   * @param point 坐标\n   * @returns 坐标下方所有HTML元素数组，会包含父元素直至html，元素层叠时返回顺序是从上到下\n   */\n  public getElementsFromPoint(point: Point): HTMLElement[] {\n    let x = point.clientX;\n    let y = point.clientY;\n\n    if (this.iframe) {\n      const rect = this.iframe.getClientRects()[0];\n      if (rect) {\n        x = x - rect.left;\n        y = y - rect.top;\n      }\n    }\n\n    return this.getDocument()?.elementsFromPoint(x / this.zoom, y / this.zoom) as HTMLElement[];\n  }\n\n  public getTargetElement(idOrEl: Id | HTMLElement): HTMLElement {\n    if (typeof idOrEl === 'string' || typeof idOrEl === 'number') {\n      const el = this.getDocument()?.getElementById(`${idOrEl}`);\n      if (!el) throw new Error(`不存在ID为${idOrEl}的元素`);\n      return el;\n    }\n    return idOrEl;\n  }\n\n  /**\n   * 销毁实例\n   */\n  public destroy(): void {\n    this.iframe?.removeEventListener('load', this.loadHandler);\n    this.contentWindow = null;\n    this.iframe?.remove();\n    this.iframe = undefined;\n    this.removeAllListeners();\n  }\n\n  /**\n   * 在runtime中对被选中的元素进行标记，部分组件有对选中态进行特殊显示的需求\n   * @param el 被选中的元素\n   */\n  private flagSelectedEl(el: HTMLElement): void {\n    const doc = this.getDocument();\n    if (doc) {\n      removeSelectedClassName(doc);\n      addSelectedClassName(el, doc);\n    }\n  }\n\n  private loadHandler = async () => {\n    if (!this.contentWindow?.magic) {\n      this.postTmagicRuntimeReady();\n    }\n\n    if (!this.contentWindow) return;\n\n    if (this.customizedRender) {\n      const el = await this.customizedRender();\n      if (el) {\n        this.contentWindow.document?.body?.appendChild(el);\n      }\n    }\n\n    this.emit('onload');\n\n    injectStyle(this.contentWindow.document, style);\n  };\n\n  private postTmagicRuntimeReady() {\n    this.contentWindow = this.iframe?.contentWindow as RuntimeWindow;\n\n    this.contentWindow.magic = this.getMagicApi();\n\n    this.contentWindow.postMessage(\n      {\n        tmagicRuntimeReady: true,\n      },\n      '*',\n    );\n  }\n}\n","/*\n * Tencent is pleased to support the open source community by making TMagicEditor available.\n *\n * Copyright (C) 2023 THL A29 Limited, a Tencent company.  All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { EventEmitter } from 'events';\n\nimport type { MoveableOptions, OnDragStart } from 'moveable';\n\nimport type { Id } from '@tmagic/schema';\n\nimport ActionManager from './ActionManager';\nimport { DEFAULT_ZOOM } from './const';\nimport StageMask from './StageMask';\nimport StageRender from './StageRender';\nimport type {\n  ActionManagerConfig,\n  CustomizeRender,\n  GuidesEventData,\n  Point,\n  RemoveData,\n  RemoveEventData,\n  Runtime,\n  StageCoreConfig,\n  UpdateData,\n  UpdateEventData,\n} from './types';\n\n/**\n * 负责管理画布，管理renderer、mask、actionManager三个核心类，并负责统一对外通信，包括提供接口和抛事件\n */\nexport default class StageCore extends EventEmitter {\n  public container?: HTMLDivElement;\n  public renderer: StageRender;\n  public mask: StageMask;\n\n  private actionManager: ActionManager;\n  private pageResizeObserver: ResizeObserver | null = null;\n  private autoScrollIntoView: boolean | undefined;\n  private customizedRender?: CustomizeRender;\n\n  constructor(config: StageCoreConfig) {\n    super();\n\n    this.autoScrollIntoView = config.autoScrollIntoView;\n    this.customizedRender = config.render;\n\n    this.renderer = new StageRender({\n      runtimeUrl: config.runtimeUrl,\n      zoom: config.zoom,\n      customizedRender: async (): Promise<HTMLElement | null> => {\n        if (this?.customizedRender) {\n          return await this.customizedRender(this);\n        }\n        return null;\n      },\n    });\n    this.mask = new StageMask();\n    this.actionManager = new ActionManager(this.getActionManagerConfig(config));\n\n    this.initRenderEvent();\n    this.initActionEvent();\n    this.initMaskEvent();\n  }\n\n  /**\n   * 单选选中元素\n   * @param idOrEl 选中的id或者元素\n   */\n  public async select(idOrEl: Id | HTMLElement, event?: MouseEvent): Promise<void> {\n    const el = this.renderer.getTargetElement(idOrEl);\n    if (el === this.actionManager.getSelectedEl()) return;\n\n    await this.renderer.select([el]);\n\n    this.mask.setLayout(el);\n\n    this.actionManager.select(el, event);\n\n    if (this.autoScrollIntoView || el.dataset.autoScrollIntoView) {\n      this.mask.observerIntersection(el);\n    }\n  }\n\n  /**\n   * 多选选中多个元素\n   * @param idOrElList 选中元素的id或元素列表\n   */\n  public async multiSelect(idOrElList: HTMLElement[] | Id[]): Promise<void> {\n    const els = idOrElList.map((idOrEl) => this.renderer.getTargetElement(idOrEl));\n    if (els.length === 0) return;\n\n    const lastEl = els[els.length - 1];\n    // 是否减少了组件选择\n    const isReduceSelect = els.length < this.actionManager.getSelectedElList().length;\n    await this.renderer.select(els);\n\n    this.mask.setLayout(lastEl);\n\n    this.actionManager.multiSelect(idOrElList);\n\n    if ((this.autoScrollIntoView || lastEl.dataset.autoScrollIntoView) && !isReduceSelect) {\n      this.mask.observerIntersection(lastEl);\n    }\n  }\n\n  /**\n   * 高亮选中元素\n   * @param el 要高亮的元素\n   */\n  public highlight(idOrEl: Id | HTMLElement): void {\n    this.actionManager.highlight(idOrEl);\n  }\n\n  public clearHighlight(): void {\n    this.actionManager.clearHighlight();\n  }\n\n  /**\n   * 更新组件\n   * @param data 更新组件的数据\n   */\n  public async update(data: UpdateData): Promise<void> {\n    const { config } = data;\n\n    await this.renderer.update(data);\n    // 通过setTimeout等画布中组件完成渲染更新\n    setTimeout(() => {\n      const el = this.renderer.getTargetElement(`${config.id}`);\n      if (el && this.actionManager.isSelectedEl(el)) {\n        // 更新了组件的布局，需要重新设置mask是否可以滚动\n        this.mask.setLayout(el);\n        // 组件有更新，需要set\n        this.actionManager.setSelectedEl(el);\n        this.actionManager.updateMoveable(el);\n      }\n    });\n  }\n\n  /**\n   * 往画布增加一个组件\n   * @param data 组件信息数据\n   */\n  public async add(data: UpdateData): Promise<void> {\n    return await this.renderer.add(data);\n  }\n\n  /**\n   * 从画布删除一个组件\n   * @param data 组件信息数据\n   */\n  public async remove(data: RemoveData): Promise<void> {\n    return await this.renderer.remove(data);\n  }\n\n  public setZoom(zoom: number = DEFAULT_ZOOM): void {\n    this.renderer.setZoom(zoom);\n  }\n\n  /**\n   * 挂载Dom节点\n   * @param el 将stage挂载到该Dom节点上\n   */\n  public async mount(el: HTMLDivElement) {\n    this.container = el;\n    const { mask, renderer } = this;\n\n    await renderer.mount(el);\n    mask.mount(el);\n\n    this.emit('mounted');\n  }\n\n  /**\n   * 清空所有参考线\n   */\n  public clearGuides() {\n    this.mask.clearGuides();\n    this.actionManager.clearGuides();\n  }\n\n  /**\n   * @deprecated 废弃接口，建议用delayedMarkContainer代替\n   */\n  public getAddContainerHighlightClassNameTimeout(\n    event: MouseEvent,\n    excludeElList: Element[] = [],\n  ): NodeJS.Timeout | undefined {\n    return this.delayedMarkContainer(event, excludeElList);\n  }\n\n  /**\n   * 鼠标拖拽着元素，在容器上方悬停，延迟一段时间后，对容器进行标记，如果悬停时间够长将标记成功，悬停时间短，调用方通过返回的timeoutId取消标记\n   * 标记的作用：1、高亮容器，给用户一个加入容器的交互感知；2、释放鼠标后，通过标记的标志找到要加入的容器\n   * @param event 鼠标事件\n   * @param excludeElList 计算鼠标所在容器时要排除的元素列表\n   * @returns timeoutId，调用方在鼠标移走时要取消该timeout，阻止标记\n   */\n  public delayedMarkContainer(event: MouseEvent, excludeElList: Element[] = []): NodeJS.Timeout | undefined {\n    return this.actionManager.delayedMarkContainer(event, excludeElList);\n  }\n\n  public getMoveableOption<K extends keyof MoveableOptions>(key: K): MoveableOptions[K] | undefined {\n    return this.actionManager.getMoveableOption(key);\n  }\n\n  public getDragStatus() {\n    return this.actionManager.getDragStatus();\n  }\n\n  /**\n   * 销毁实例\n   */\n  public destroy(): void {\n    const { mask, renderer, actionManager, pageResizeObserver } = this;\n\n    renderer.destroy();\n    mask.destroy();\n    actionManager.destroy();\n    pageResizeObserver?.disconnect();\n\n    this.removeAllListeners();\n\n    this.container = undefined;\n  }\n\n  /**\n   * 监听页面大小变化\n   */\n  private observePageResize(page: HTMLElement): void {\n    if (typeof ResizeObserver !== 'undefined') {\n      this.pageResizeObserver = new ResizeObserver((entries) => {\n        this.mask.pageResize(entries);\n        this.actionManager.updateMoveable();\n      });\n\n      this.pageResizeObserver.observe(page);\n    }\n  }\n\n  private getActionManagerConfig(config: StageCoreConfig): ActionManagerConfig {\n    const actionManagerConfig: ActionManagerConfig = {\n      containerHighlightClassName: config.containerHighlightClassName,\n      containerHighlightDuration: config.containerHighlightDuration,\n      containerHighlightType: config.containerHighlightType,\n      moveableOptions: config.moveableOptions,\n      container: this.mask.content,\n      disabledDragStart: config.disabledDragStart,\n      canSelect: config.canSelect,\n      isContainer: config.isContainer,\n      updateDragEl: config.updateDragEl,\n      getRootContainer: () => this.container,\n      getRenderDocument: () => this.renderer.getDocument(),\n      getTargetElement: (idOrEl: Id | HTMLElement) => this.renderer.getTargetElement(idOrEl),\n      getElementsFromPoint: (point: Point) => this.renderer.getElementsFromPoint(point),\n    };\n\n    return actionManagerConfig;\n  }\n\n  private initRenderEvent(): void {\n    this.renderer.on('runtime-ready', (runtime: Runtime) => {\n      this.emit('runtime-ready', runtime);\n    });\n    this.renderer.on('page-el-update', (el: HTMLElement) => {\n      this.mask?.observe(el);\n      this.observePageResize(el);\n    });\n  }\n\n  private initMaskEvent(): void {\n    this.mask.on('change-guides', (data: GuidesEventData) => {\n      this.actionManager.setGuidelines(data.type, data.guides);\n      this.emit('change-guides', data);\n    });\n  }\n\n  /**\n   * 初始化操作相关事件监听\n   */\n  private initActionEvent(): void {\n    this.initActionManagerEvent();\n    this.initDrEvent();\n    this.initMulDrEvent();\n    this.initHighlightEvent();\n    this.initMouseEvent();\n  }\n\n  /**\n   * 初始化ActionManager类本身抛出来的事件监听\n   */\n  private initActionManagerEvent(): void {\n    this.actionManager\n      .on('before-select', (idOrEl: Id | HTMLElement, event?: MouseEvent) => {\n        this.select(idOrEl, event);\n      })\n      .on('select', (selectedEl: HTMLElement) => {\n        this.emit('select', selectedEl);\n      })\n      .on('before-multi-select', (idOrElList: HTMLElement[] | Id[]) => {\n        this.multiSelect(idOrElList);\n      })\n      .on('multi-select', (selectedElList: HTMLElement[]) => {\n        this.emit('multi-select', selectedElList);\n      });\n  }\n\n  /**\n   * 初始化DragResize类通过ActionManager抛出来的事件监听\n   */\n  private initDrEvent(): void {\n    this.actionManager\n      .on('update', (data: UpdateEventData) => {\n        this.emit('update', data);\n      })\n      .on('sort', (data: UpdateEventData) => {\n        this.emit('sort', data);\n      })\n      .on('select-parent', () => {\n        this.emit('select-parent');\n      })\n      .on('remove', (data: RemoveEventData) => {\n        this.emit('remove', data);\n      });\n  }\n\n  /**\n   * 初始化MultiDragResize类通过ActionManager抛出来的事件监听\n   */\n  private initMulDrEvent(): void {\n    this.actionManager\n      // 多选切换到单选\n      .on('change-to-select', (el: HTMLElement) => {\n        this.select(el);\n        // 先保证画布内完成渲染，再通知外部更新\n        setTimeout(() => this.emit('select', el));\n      })\n      .on('multi-update', (data: UpdateEventData) => {\n        this.emit('update', data);\n      });\n  }\n\n  /**\n   * 初始化Highlight类通过ActionManager抛出来的事件监听\n   */\n  private initHighlightEvent(): void {\n    this.actionManager.on('highlight', async (highlightEl: HTMLElement) => {\n      this.emit('highlight', highlightEl);\n    });\n  }\n\n  /**\n   * 初始化Highlight类通过ActionManager抛出来的事件监听\n   */\n  private initMouseEvent(): void {\n    this.actionManager\n      .on('mousemove', (event: MouseEvent) => {\n        this.emit('mousemove', event);\n      })\n      .on('mouseleave', (event: MouseEvent) => {\n        this.emit('mouseleave', event);\n      })\n      .on('drag-start', (e: OnDragStart) => {\n        this.emit('drag-start', e);\n      });\n  }\n}\n"],"names":["GuidesType","ZIndex","MouseButton","Mode","removeClassName","ContainerHighlightType","SelectStatus","StageDragStatus","AbleActionEventType","merge","EventEmitter","throttle","addClassName","removeClassNameByClassName","Env","getDocument","injectStyle","createDiv","isSameDomain","getHost"],"mappings":"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"}