import type { DataSourceDeps, Id, MComponent, MNode } from '@tmagic/schema';
export * from './dom';
export declare const sleep: (ms: number) => Promise<void>;
export declare const datetimeFormatter: (v: string | Date, defaultValue?: string, format?: string) => string | number;
export declare const toLine: (name?: string) => string;
export declare const toHump: (name?: string) => string;
export declare const emptyFn: () => any;
/**
 * 通过id获取组件在应用的子孙路径
 * @param {number | string} id 组件id
 * @param {Array} data 要查找的根容器节点
 * @return {Array} 组件在data中的子孙路径
 */
export declare const getNodePath: (id: Id, data?: MNode[]) => MNode[];
export declare const filterXSS: (str: string) => string;
export declare const getUrlParam: (param: string, url?: string) => string;
export declare const isObject: (obj: any) => boolean;
export declare const isPop: (node: MComponent | null) => boolean;
export declare const isPage: (node?: MComponent | null) => boolean;
export declare const isNumber: (value: string) => boolean;
export declare const getHost: (targetUrl: string) => string | undefined;
export declare const isSameDomain: (targetUrl?: string, source?: string) => boolean;
/**
 * 生成指定位数的GUID，无【-】格式
 * @param digit 位数，默认值8
 * @returns
 */
export declare const guid: (digit?: number) => string;
export declare const getValueByKeyPath: any;
export declare const getNodes: (ids: Id[], data?: MNode[]) => MNode[];
export declare const getDepKeys: (dataSourceDeps: DataSourceDeps | undefined, nodeId: Id) => Id[];
export declare const getDepNodeIds: (dataSourceDeps?: DataSourceDeps) => string[];
/**
 * 将新节点更新到data或者parentId对应的节点的子节点中
 * @param newNode 新节点
 * @param data 需要修改的数据
 * @param parentId 父节点 id
 */
export declare const replaceChildNode: (newNode: MNode, data?: MNode[], parentId?: Id) => void;
export declare const compiledNode: (compile: (value: any) => any, node: MNode, dataSourceDeps?: DataSourceDeps, sourceId?: Id) => MNode;
export declare const compiledCond: (op: string, fieldValue: any, value: any, range: [number, number]) => boolean;
