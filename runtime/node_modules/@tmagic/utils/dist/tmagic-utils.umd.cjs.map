{"version":3,"file":"tmagic-utils.umd.cjs","sources":["../src/dom.ts","../src/index.ts"],"sourcesContent":["export const asyncLoadJs = (() => {\n  // 正在加载或加载成功的存入此Map中\n  const documentMap = new Map();\n\n  return (url: string, crossOrigin?: string, document = globalThis.document) => {\n    let loaded = documentMap.get(document);\n    if (!loaded) {\n      loaded = new Map();\n      documentMap.set(document, loaded);\n    }\n\n    // 正在加载或已经加载成功的，直接返回\n    if (loaded.get(url)) return loaded.get(url);\n\n    const load = new Promise<void>((resolve, reject) => {\n      const script = document.createElement('script');\n      script.type = 'text/javascript';\n      if (crossOrigin) {\n        script.crossOrigin = crossOrigin;\n      }\n      script.src = url;\n      document.body.appendChild(script);\n      script.onload = () => {\n        resolve();\n      };\n      script.onerror = () => {\n        reject(new Error('加载失败'));\n      };\n      setTimeout(() => {\n        reject(new Error('timeout'));\n      }, 60 * 1000);\n    }).catch((err) => {\n      // 加载失败的，从map中移除，第二次加载时，可以再次执行加载\n      loaded.delete(url);\n      throw err;\n    });\n\n    loaded.set(url, load);\n    return loaded.get(url);\n  };\n})();\n\nexport const asyncLoadCss = (() => {\n  // 正在加载或加载成功的存入此Map中\n  const documentMap = new Map();\n\n  return (url: string, document = globalThis.document) => {\n    let loaded = documentMap.get(document);\n    if (!loaded) {\n      loaded = new Map();\n      documentMap.set(document, loaded);\n    }\n\n    // 正在加载或已经加载成功的，直接返回\n    if (loaded.get(url)) return loaded.get(url);\n\n    const load = new Promise<void>((resolve, reject) => {\n      const node = document.createElement('link');\n      node.rel = 'stylesheet';\n      node.href = url;\n      document.head.appendChild(node);\n      node.onload = () => {\n        resolve();\n      };\n      node.onerror = () => {\n        reject(new Error('加载失败'));\n      };\n      setTimeout(() => {\n        reject(new Error('timeout'));\n      }, 60 * 1000);\n    }).catch((err) => {\n      // 加载失败的，从map中移除，第二次加载时，可以再次执行加载\n      loaded.delete(url);\n      throw err;\n    });\n\n    loaded.set(url, load);\n    return loaded.get(url);\n  };\n})();\n\nexport const addClassName = (el: Element, doc: Document, className: string) => {\n  const oldEl = doc.querySelector(`.${className}`);\n  if (oldEl && oldEl !== el) removeClassName(oldEl, className);\n  if (!el.classList.contains(className)) el.classList.add(className);\n};\n\nexport const removeClassName = (el: Element, className: string) => {\n  el.classList.remove(className);\n};\n\nexport const removeClassNameByClassName = (doc: Document, className: string) => {\n  const el: HTMLElement | null = doc.querySelector(`.${className}`);\n  el?.classList.remove(className);\n  return el;\n};\n\nexport const injectStyle = (doc: Document, style: string) => {\n  const styleEl = doc.createElement('style');\n  styleEl.innerHTML = style;\n  doc.head.appendChild(styleEl);\n  return styleEl;\n};\n\nexport const createDiv = ({ className, cssText }: { className: string; cssText: string }) => {\n  const el = globalThis.document.createElement('div');\n  el.className = className;\n  el.style.cssText = cssText;\n  return el;\n};\n\nexport const getDocument = () => globalThis.document;\n","/*\n * Tencent is pleased to support the open source community by making TMagicEditor available.\n *\n * Copyright (C) 2023 THL A29 Limited, a Tencent company.  All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport dayjs from 'dayjs';\nimport utc from 'dayjs/plugin/utc';\n\nimport type { DataSourceDeps, Id, MComponent, MNode } from '@tmagic/schema';\nimport { NodeType } from '@tmagic/schema';\n\nexport * from './dom';\n\ndayjs.extend(utc);\n\nexport const sleep = (ms: number): Promise<void> =>\n  new Promise((resolve) => {\n    const timer = setTimeout(() => {\n      clearTimeout(timer);\n      resolve();\n    }, ms);\n  });\n\nexport const datetimeFormatter = (\n  v: string | Date,\n  defaultValue = '-',\n  format = 'YYYY-MM-DD HH:mm:ss',\n): string | number => {\n  if (v) {\n    let time = null;\n    if (['x', 'timestamp'].includes(format)) {\n      time = dayjs(v).valueOf();\n    } else if ((typeof v === 'string' && v.includes('Z')) || v.constructor === Date) {\n      // UTC字符串时间或Date对象格式化为北京时间\n      time = dayjs(v).utcOffset(8).format(format);\n    } else {\n      time = dayjs(v).format(format);\n    }\n\n    // 格式化为北京时间\n    if (time !== 'Invalid Date') {\n      return time;\n    }\n    return defaultValue;\n  }\n  return defaultValue;\n};\n\n// 驼峰转换横线\nexport const toLine = (name = '') => name.replace(/\\B([A-Z])/g, '-$1').toLowerCase();\n\nexport const toHump = (name = ''): string => name.replace(/-(\\w)/g, (all, letter) => letter.toUpperCase());\n\nexport const emptyFn = (): any => undefined;\n\n/**\n * 通过id获取组件在应用的子孙路径\n * @param {number | string} id 组件id\n * @param {Array} data 要查找的根容器节点\n * @return {Array} 组件在data中的子孙路径\n */\nexport const getNodePath = (id: Id, data: MNode[] = []): MNode[] => {\n  const path: MNode[] = [];\n\n  const get = function (id: number | string, data: MNode[]): MNode | null {\n    if (!Array.isArray(data)) {\n      return null;\n    }\n\n    for (let i = 0, l = data.length; i < l; i++) {\n      const item = data[i];\n\n      path.push(item);\n      if (`${item.id}` === `${id}`) {\n        return item;\n      }\n\n      if (item.items) {\n        const node = get(id, item.items);\n        if (node) {\n          return node;\n        }\n      }\n\n      path.pop();\n    }\n\n    return null;\n  };\n\n  get(id, data);\n\n  return path;\n};\n\nexport const filterXSS = (str: string) =>\n  str.replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\"/g, '&quot;').replace(/'/g, '&apos;');\n\nexport const getUrlParam = (param: string, url?: string) => {\n  const u = url || location.href;\n  const reg = new RegExp(`[?&#]${param}=([^&#]+)`, 'gi');\n\n  const matches = u.match(reg);\n  let strArr;\n  if (matches && matches.length > 0) {\n    strArr = matches[matches.length - 1].split('=');\n    if (strArr && strArr.length > 1) {\n      // 过滤XSS字符\n      return filterXSS(strArr[1]);\n    }\n    return '';\n  }\n  return '';\n};\n\nexport const isObject = (obj: any) => Object.prototype.toString.call(obj) === '[object Object]';\n\nexport const isPop = (node: MComponent | null): boolean => Boolean(node?.type?.toLowerCase().endsWith('pop'));\n\nexport const isPage = (node?: MComponent | null): boolean => {\n  if (!node) return false;\n  return Boolean(node.type?.toLowerCase() === NodeType.PAGE);\n};\n\nexport const isNumber = (value: string) => /^(-?\\d+)(\\.\\d+)?$/.test(value);\n\nexport const getHost = (targetUrl: string) => targetUrl.match(/\\/\\/([^/]+)/)?.[1];\n\nexport const isSameDomain = (targetUrl = '', source = globalThis.location.host) => {\n  const isHttpUrl = /^(http[s]?:)?\\/\\//.test(targetUrl);\n\n  if (!isHttpUrl) return true;\n\n  return getHost(targetUrl) === source;\n};\n\n/**\n * 生成指定位数的GUID，无【-】格式\n * @param digit 位数，默认值8\n * @returns\n */\nexport const guid = (digit = 8): string =>\n  'x'.repeat(digit).replace(/[xy]/g, (c) => {\n    const r = (Math.random() * 16) | 0;\n    const v = c === 'x' ? r : (r & 0x3) | 0x8;\n    return v.toString(16);\n  });\n\nexport const getValueByKeyPath: any = (keys: string, value: Record<string | number, any> = {}) => {\n  const path = keys.split('.');\n  const pathLength = path.length;\n\n  return path.reduce((accumulator, currentValue: any, currentIndex: number) => {\n    if (Object.prototype.toString.call(accumulator) === '[object Object]' || Array.isArray(accumulator)) {\n      return accumulator[currentValue];\n    }\n\n    if (pathLength - 1 === currentIndex) {\n      return undefined;\n    }\n\n    return {};\n  }, value);\n};\n\nexport const getNodes = (ids: Id[], data: MNode[] = []): MNode[] => {\n  const nodes: MNode[] = [];\n\n  const get = function (ids: Id[], data: MNode[]) {\n    if (!Array.isArray(data)) {\n      return;\n    }\n\n    for (let i = 0, l = data.length; i < l; i++) {\n      const item = data[i];\n      const index = ids.findIndex((id: Id) => `${id}` === `${item.id}`);\n\n      if (index > -1) {\n        ids.slice(index, 1);\n        nodes.push(item);\n      }\n\n      if (item.items) {\n        get(ids, item.items);\n      }\n    }\n  };\n\n  get(ids, data);\n\n  return nodes;\n};\n\nexport const getDepKeys = (dataSourceDeps: DataSourceDeps = {}, nodeId: Id) =>\n  Array.from(\n    Object.values(dataSourceDeps).reduce((prev, cur) => {\n      (cur[nodeId]?.keys || []).forEach((key) => prev.add(key));\n      return prev;\n    }, new Set<Id>()),\n  );\n\nexport const getDepNodeIds = (dataSourceDeps: DataSourceDeps = {}) =>\n  Array.from(\n    Object.values(dataSourceDeps).reduce((prev, cur) => {\n      Object.keys(cur).forEach((id) => {\n        prev.add(id);\n      });\n      return prev;\n    }, new Set<string>()),\n  );\n\n/**\n * 将新节点更新到data或者parentId对应的节点的子节点中\n * @param newNode 新节点\n * @param data 需要修改的数据\n * @param parentId 父节点 id\n */\nexport const replaceChildNode = (newNode: MNode, data?: MNode[], parentId?: Id) => {\n  const path = getNodePath(newNode.id, data);\n  const node = path.pop();\n  let parent = path.pop();\n\n  if (parentId) {\n    parent = getNodePath(parentId, data).pop();\n  }\n\n  if (!node) throw new Error('未找到目标节点');\n  if (!parent) throw new Error('未找到父节点');\n\n  const index = parent.items?.findIndex((child: MNode) => child.id === node.id);\n  parent.items.splice(index, 1, newNode);\n};\n\nexport const compiledNode = (\n  compile: (value: any) => any,\n  node: MNode,\n  dataSourceDeps: DataSourceDeps = {},\n  sourceId?: Id,\n) => {\n  let keys: Id[] = [];\n  if (!sourceId) {\n    keys = getDepKeys(dataSourceDeps, node.id);\n  } else {\n    const dep = dataSourceDeps[sourceId];\n    keys = dep?.[node.id].keys || [];\n  }\n\n  const keyPrefix = '__magic__';\n\n  keys.forEach((key) => {\n    const keyPath = `${key}`.split('.');\n    const keyPathLength = keyPath.length;\n    keyPath.reduce((accumulator, currentValue: any, currentIndex) => {\n      if (keyPathLength - 1 === currentIndex) {\n        const cacheKey = `${keyPrefix}${currentValue}`;\n\n        if (typeof accumulator[cacheKey] === 'undefined') {\n          accumulator[cacheKey] = accumulator[currentValue];\n        }\n\n        try {\n          accumulator[currentValue] = compile(accumulator[cacheKey]);\n        } catch (e) {\n          console.error(e);\n          accumulator[currentValue] = '';\n        }\n\n        return accumulator;\n      }\n\n      if (Object.prototype.toString.call(accumulator) === '[object Object]' || Array.isArray(accumulator)) {\n        return accumulator[currentValue];\n      }\n\n      return {};\n    }, node);\n  });\n\n  if (Array.isArray(node.items)) {\n    node.items.forEach((item) => compiledNode(compile, item, dataSourceDeps));\n  }\n\n  return node;\n};\n\nexport const compiledCond = (op: string, fieldValue: any, value: any, range: [number, number]): boolean => {\n  switch (op) {\n    case 'is':\n      if (!fieldValue) return false;\n      break;\n    case 'not':\n      if (fieldValue) return false;\n      break;\n    case '=':\n      if (fieldValue !== value) return false;\n      break;\n    case '!=':\n      if (fieldValue === value) return false;\n      break;\n    case '>':\n      if (fieldValue <= value) return false;\n      break;\n    case '>=':\n      if (fieldValue < value) return false;\n      break;\n    case '<':\n      if (fieldValue >= value) return false;\n      break;\n    case '<=':\n      if (fieldValue > value) return false;\n      break;\n    case 'between':\n      if (fieldValue < range[0] || fieldValue > range[1]) return false;\n      break;\n    case 'not_between':\n      if (fieldValue >= range[0] && fieldValue <= range[1]) return false;\n      break;\n    case 'include':\n      if (typeof fieldValue !== 'undefined' && !fieldValue.includes?.(value)) return false;\n      break;\n    case 'not_include':\n      if (typeof fieldValue !== 'undefined' && fieldValue.includes?.(value)) return false;\n      break;\n    default:\n      break;\n  }\n\n  return true;\n};\n"],"names":["id","data","NodeType","ids"],"mappings":"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"}