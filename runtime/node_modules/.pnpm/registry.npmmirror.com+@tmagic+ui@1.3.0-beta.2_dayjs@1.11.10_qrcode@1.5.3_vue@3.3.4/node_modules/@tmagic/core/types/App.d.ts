/// <reference types="node" />
import { EventEmitter } from 'events';
import { DataSourceManager } from '@tmagic/data-source';
import { type AppCore, type CodeBlockDSL, type CodeItemConfig, type CompItemConfig, type DataSourceItemConfig, type DeprecatedEventConfig, type Id, type MApp, type RequestFunction } from '@tmagic/schema';
import Env from './Env';
import Page from './Page';
interface AppOptionsConfig {
    ua?: string;
    config?: MApp;
    platform?: 'editor' | 'mobile' | 'tv' | 'pc';
    jsEngine?: 'browser' | 'hippy';
    designWidth?: number;
    curPage?: Id;
    transformStyle?: (style: Record<string, any>) => Record<string, any>;
    request?: RequestFunction;
}
interface EventCache {
    eventConfig: CompItemConfig | DeprecatedEventConfig;
    fromCpt: any;
    args: any[];
}
declare class App extends EventEmitter implements AppCore {
    env: Env;
    dsl?: MApp;
    codeDsl?: CodeBlockDSL;
    dataSourceManager?: DataSourceManager;
    page?: Page;
    platform: string;
    jsEngine: string;
    designWidth: number;
    request?: RequestFunction;
    components: Map<any, any>;
    eventQueueMap: Record<string, EventCache[]>;
    private eventList;
    constructor(options: AppOptionsConfig);
    setEnv(ua?: string): void;
    setDesignWidth(width: number): void;
    /**
     * 将dsl中的style配置转换成css，主要是将数值转成rem为单位的样式值，例如100将被转换成1rem
     * @param style Object
     * @returns Object
     */
    transformStyle(style: Record<string, any> | string): Record<string, any>;
    /**
     * 设置dsl
     * @param config dsl跟节点
     * @param curPage 当前页面id
     */
    setConfig(config: MApp, curPage?: Id): void;
    /**
     * 留着为了兼容，不让报错
     * @deprecated
     */
    addPage(): void;
    setPage(id?: Id): void;
    deletePage(): void;
    /**
     * 兼容id参数
     * @param id 节点id
     * @returns Page | void
     */
    getPage(id?: Id): Page | undefined;
    registerComponent(type: string, Component: any): void;
    unregisterComponent(type: string): void;
    resolveComponent(type: string): any;
    bindEvents(): void;
    emit(name: string | symbol, node: any, ...args: any[]): boolean;
    /**
     * 执行代码块动作
     * @param eventConfig 代码动作的配置
     * @returns void
     */
    codeActionHandler(eventConfig: CodeItemConfig): Promise<void>;
    /**
     * 执行联动组件动作
     * @param eventConfig 联动组件的配置
     * @returns void
     */
    compActionHandler(eventConfig: CompItemConfig | DeprecatedEventConfig, fromCpt: any, args: any[]): Promise<void>;
    dataSourceActionHandler(eventConfig: DataSourceItemConfig): Promise<void>;
    destroy(): void;
    /**
     * 事件联动处理函数
     * @param eventConfig 事件配置
     * @param fromCpt 触发事件的组件
     * @param args 事件参数
     */
    private eventHandler;
    private addEventToMap;
    private getTransform;
    private calcFontsize;
}
export default App;
