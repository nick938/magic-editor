{"version":3,"file":"tmagic-data-source.js","sources":["../src/util.ts","../src/data-sources/Base.ts","../src/data-sources/Http.ts","../src/DataSourceManager.ts","../src/createDataSourceManager.ts"],"sourcesContent":["/*\n * Tencent is pleased to support the open source community by making TMagicEditor available.\n *\n * Copyright (C) 2023 THL A29 Limited, a Tencent company.  All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { DataSchema } from '@tmagic/schema';\n\nexport const getDefaultValueFromFields = (fields: DataSchema[]) => {\n  const data: Record<string, any> = {};\n\n  const defaultValue: Record<string, any> = {\n    string: '',\n    object: {},\n    array: [],\n    boolean: false,\n    number: 0,\n    null: null,\n    any: undefined,\n  };\n\n  fields.forEach((field) => {\n    if (typeof field.defaultValue !== 'undefined') {\n      data[field.name] = field.defaultValue;\n    } else if (field.type === 'object') {\n      data[field.name] = field.fields ? getDefaultValueFromFields(field.fields) : {};\n    } else if (field.type) {\n      data[field.name] = defaultValue[field.type];\n    } else {\n      data[field.name] = undefined;\n    }\n  });\n  return data;\n};\n","/*\n * Tencent is pleased to support the open source community by making TMagicEditor available.\n *\n * Copyright (C) 2023 THL A29 Limited, a Tencent company.  All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport EventEmitter from 'events';\n\nimport type { AppCore, CodeBlockContent, DataSchema } from '@tmagic/schema';\n\nimport type { DataSourceOptions } from '@data-source/types';\nimport { getDefaultValueFromFields } from '@data-source/util';\n\n/**\n * 静态数据源\n */\nexport default class DataSource extends EventEmitter {\n  public type = 'base';\n\n  public id: string;\n\n  public isInit = false;\n\n  public data: Record<string, any> = {};\n\n  public app: AppCore;\n\n  private fields: DataSchema[] = [];\n  private methods: CodeBlockContent[] = [];\n\n  constructor(options: DataSourceOptions) {\n    super();\n\n    this.app = options.app;\n    this.id = options.schema.id;\n    this.setFields(options.schema.fields);\n    this.setMethods(options.schema.methods || []);\n\n    this.updateDefaultData();\n  }\n\n  public setFields(fields: DataSchema[]) {\n    this.fields = fields;\n  }\n\n  public setMethods(methods: CodeBlockContent[]) {\n    this.methods = methods;\n  }\n\n  public getMethods() {\n    return this.methods;\n  }\n\n  public setData(data: Record<string, any>) {\n    // todo: 校验数据，看是否符合 schema\n    this.data = data;\n    this.emit('change');\n  }\n\n  public getDefaultData() {\n    return getDefaultValueFromFields(this.fields);\n  }\n\n  public updateDefaultData() {\n    this.setData(this.getDefaultData());\n  }\n\n  public async init() {\n    this.isInit = true;\n  }\n\n  public destroy() {\n    this.data = {};\n    this.fields = [];\n    this.removeAllListeners();\n  }\n}\n","/*\n * Tencent is pleased to support the open source community by making TMagicEditor available.\n *\n * Copyright (C) 2023 THL A29 Limited, a Tencent company.  All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { HttpOptions, RequestFunction } from '@tmagic/schema';\nimport { getValueByKeyPath } from '@tmagic/utils';\n\nimport { HttpDataSourceOptions, HttpDataSourceSchema } from '@data-source/types';\n\nimport DataSource from './Base';\n\n/**\n * 将json对象转换为urlencoded字符串\n * @param data json对象\n * @returns string\n */\nconst urlencoded = (data: Record<string, string | number | boolean | null | undefined>) =>\n  Object.entries(data).reduce((prev, [key, value]) => {\n    let v = value;\n    if (typeof value === 'object') {\n      v = JSON.stringify(value);\n    }\n    if (typeof value !== 'undefined') {\n      return `${prev}${prev ? '&' : ''}${globalThis.encodeURIComponent(key)}=${globalThis.encodeURIComponent(`${v}`)}`;\n    }\n    return prev;\n  }, '');\n\n/**\n * 浏览器端请求\n * 如果未有自定义的request方法，则使用浏览器的fetch方法\n * @param options 请求参数\n */\nconst webRequest = async (options: HttpOptions) => {\n  const { url, method = 'GET', headers = {}, params = {}, data = {}, ...config } = options;\n  const query = urlencoded(params);\n  let body: string = JSON.stringify(data);\n  if (headers['Content-Type']?.includes('application/x-www-form-urlencoded')) {\n    body = urlencoded(data);\n  }\n\n  const response = await globalThis.fetch(query ? `${url}?${query}` : url, {\n    method,\n    headers,\n    body: method === 'GET' ? undefined : body,\n    ...config,\n  });\n\n  return response.json();\n};\n\n/**\n * Http 数据源\n * @description 通过 http 请求获取数据\n */\nexport default class HttpDataSource extends DataSource {\n  public type = 'http';\n\n  public isLoading = false;\n  public error?: {\n    msg?: string;\n    code?: string | number;\n  };\n  public schema: HttpDataSourceSchema;\n  public httpOptions: HttpOptions;\n\n  private fetch?: RequestFunction;\n  private beforeRequest: ((...args: any[]) => any)[] = [];\n  private afterRequest: ((...args: any[]) => any)[] = [];\n\n  constructor(options: HttpDataSourceOptions) {\n    const { options: httpOptions, ...dataSourceOptions } = options.schema;\n\n    super({\n      schema: dataSourceOptions,\n      app: options.app,\n    });\n\n    this.schema = options.schema;\n    this.httpOptions = httpOptions;\n\n    if (typeof options.request === 'function') {\n      this.fetch = options.request;\n    } else if (typeof globalThis.fetch === 'function') {\n      this.fetch = webRequest;\n    }\n\n    this.getMethods().forEach((method) => {\n      if (typeof method.content !== 'function') return;\n      if (method.timing === 'beforeRequest') {\n        this.beforeRequest.push(method.content);\n      }\n      if (method.timing === 'afterRequest') {\n        this.afterRequest.push(method.content);\n      }\n    });\n  }\n\n  public async init() {\n    if (this.schema.autoFetch) {\n      await this.request(this.httpOptions);\n    }\n\n    super.init();\n  }\n\n  public async request(options: HttpOptions) {\n    try {\n      for (const method of this.beforeRequest) {\n        await method({ options, params: {}, dataSource: this, app: this.app });\n      }\n\n      const res = await this.fetch?.({\n        ...this.httpOptions,\n        ...options,\n      });\n\n      for (const method of this.afterRequest) {\n        await method({ res, options, params: {}, dataSource: this, app: this.app });\n      }\n\n      if (this.schema.responseOptions?.dataPath) {\n        const data = getValueByKeyPath(this.schema.responseOptions.dataPath, res);\n        this.setData(data);\n      } else {\n        this.setData(res);\n      }\n\n      this.error = undefined;\n    } catch (error: any) {\n      this.error = {\n        msg: error.message,\n      };\n\n      this.emit('error', error);\n    }\n  }\n\n  public get(options: Partial<HttpOptions> & { url: string }) {\n    return this.request({\n      ...options,\n      method: 'GET',\n    });\n  }\n\n  public post(options: Partial<HttpOptions> & { url: string }) {\n    return this.request({\n      ...options,\n      method: 'POST',\n    });\n  }\n}\n","/*\n * Tencent is pleased to support the open source community by making TMagicEditor available.\n *\n * Copyright (C) 2023 THL A29 Limited, a Tencent company.  All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport EventEmitter from 'events';\n\nimport { cloneDeep, template } from 'lodash-es';\n\nimport type { AppCore, DataSourceSchema, Id, MNode } from '@tmagic/schema';\nimport { compiledCond, compiledNode } from '@tmagic/utils';\n\nimport { DataSource, HttpDataSource } from './data-sources';\nimport type { DataSourceManagerData, DataSourceManagerOptions, HttpDataSourceSchema } from './types';\n\nclass DataSourceManager extends EventEmitter {\n  private static dataSourceClassMap = new Map<string, typeof DataSource>();\n\n  public static registe(type: string, dataSource: typeof DataSource) {\n    DataSourceManager.dataSourceClassMap.set(type, dataSource);\n  }\n\n  public static getDataSourceClass(type: string) {\n    return DataSourceManager.dataSourceClassMap.get(type);\n  }\n\n  public app: AppCore;\n\n  public dataSourceMap = new Map<string, DataSource>();\n\n  public data: DataSourceManagerData = {};\n\n  constructor({ app }: DataSourceManagerOptions) {\n    super();\n\n    this.app = app;\n\n    app.dsl?.dataSources?.forEach((config) => {\n      this.addDataSource(config);\n    });\n  }\n\n  public get(id: string) {\n    return this.dataSourceMap.get(id);\n  }\n\n  public async addDataSource(config?: DataSourceSchema) {\n    if (!config) return;\n\n    let ds: DataSource;\n    if (config.type === 'http') {\n      ds = new HttpDataSource({\n        app: this.app,\n        schema: config as HttpDataSourceSchema,\n        request: this.app.request,\n      });\n    } else {\n      // eslint-disable-next-line @typescript-eslint/naming-convention\n      const DataSourceClass = DataSourceManager.dataSourceClassMap.get(config.type) || DataSource;\n\n      ds = new DataSourceClass({\n        app: this.app,\n        schema: config,\n      });\n    }\n\n    this.dataSourceMap.set(config.id, ds);\n\n    this.data[ds.id] = ds.data;\n\n    const beforeInit: ((...args: any[]) => any)[] = [];\n    const afterInit: ((...args: any[]) => any)[] = [];\n\n    ds.getMethods().forEach((method) => {\n      if (typeof method.content !== 'function') return;\n      if (method.timing === 'beforeInit') {\n        beforeInit.push(method.content);\n      }\n      if (method.timing === 'afterInit') {\n        afterInit.push(method.content);\n      }\n    });\n\n    for (const method of beforeInit) {\n      await method({ params: {}, dataSource: ds, app: this.app });\n    }\n\n    await ds.init();\n\n    for (const method of afterInit) {\n      await method({ params: {}, dataSource: ds, app: this.app });\n    }\n\n    this.setData(ds);\n\n    ds.on('change', () => {\n      this.setData(ds);\n    });\n  }\n\n  public setData(ds: DataSource) {\n    Object.assign(this.data[ds.id], ds.data);\n    this.emit('change', ds.id);\n  }\n\n  public removeDataSource(id: string) {\n    this.get(id)?.destroy();\n    delete this.data[id];\n    this.dataSourceMap.delete(id);\n  }\n\n  public updateSchema(schemas: DataSourceSchema[]) {\n    schemas.forEach((schema) => {\n      const ds = this.dataSourceMap.get(schema.id);\n      if (!ds) {\n        return;\n      }\n      ds.setFields(schema.fields);\n      ds.updateDefaultData();\n      this.data[ds.id] = ds.data;\n    });\n  }\n\n  public compiledNode(node: MNode, sourceId?: Id) {\n    if (node.condResult === false) return node;\n    if (node.visible === false) return node;\n\n    return compiledNode(\n      (value: any) => {\n        if (typeof value === 'string') {\n          return template(value)(this.data);\n        }\n        if (value?.isBindDataSource && value.dataSourceId) {\n          return this.data[value.dataSourceId];\n        }\n        return value;\n      },\n      cloneDeep(node),\n      this.app.dsl?.dataSourceDeps || {},\n      sourceId,\n    );\n  }\n\n  public compliedConds(node: MNode) {\n    if (!node.displayConds || !Array.isArray(node.displayConds) || !node.displayConds.length) return true;\n\n    for (const { cond } of node.displayConds) {\n      if (!cond) continue;\n\n      let result = true;\n      for (const { op, value, range, field } of cond) {\n        const [sourceId, fieldKey] = field;\n\n        const dsData = this.data[sourceId];\n\n        if (!dsData || !fieldKey) {\n          break;\n        }\n\n        const fieldValue = dsData[fieldKey];\n        if (!compiledCond(op, fieldValue, value, range)) {\n          result = false;\n          break;\n        }\n      }\n\n      if (result) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  public destroy() {\n    this.removeAllListeners();\n    this.data = {};\n    this.dataSourceMap.forEach((ds) => {\n      ds.destroy();\n    });\n    this.dataSourceMap = new Map();\n  }\n}\n\nexport default DataSourceManager;\n","/*\n * Tencent is pleased to support the open source community by making TMagicEditor available.\n *\n * Copyright (C) 2023 THL A29 Limited, a Tencent company.  All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { cloneDeep, union } from 'lodash-es';\n\nimport type { AppCore } from '@tmagic/schema';\nimport { getDepNodeIds, getNodes, replaceChildNode } from '@tmagic/utils';\n\nimport DataSourceManager from './DataSourceManager';\n\n/**\n * 创建数据源管理器\n * @param dsl DSL\n * @param httpDataSourceOptions http 数据源配置\n * @returns DataSourceManager\n */\nexport const createDataSourceManager = (app: AppCore) => {\n  const { dsl, platform } = app;\n  if (!dsl?.dataSources) return;\n\n  const dataSourceManager = new DataSourceManager({ app });\n\n  if (dsl.dataSources && dsl.dataSourceCondDeps && platform !== 'editor') {\n    getNodes(getDepNodeIds(dsl.dataSourceCondDeps), dsl.items).forEach((node) => {\n      node.condResult = dataSourceManager.compliedConds(node);\n      replaceChildNode(node, dsl!.items);\n    });\n  }\n\n  if (dsl.dataSources && dsl.dataSourceDeps) {\n    getNodes(getDepNodeIds(dsl.dataSourceDeps), dsl.items).forEach((node) => {\n      replaceChildNode(dataSourceManager.compiledNode(node), dsl!.items);\n    });\n  }\n\n  dataSourceManager.on('change', (sourceId: string) => {\n    const dep = dsl.dataSourceDeps?.[sourceId] || {};\n    const condDep = dsl.dataSourceCondDeps?.[sourceId] || {};\n\n    const nodeIds = union([...Object.keys(condDep), ...Object.keys(dep)]);\n\n    dataSourceManager.emit(\n      'update-data',\n      getNodes(nodeIds, dsl.items).map((node) => {\n        const newNode = cloneDeep(node);\n        newNode.condResult = dataSourceManager.compliedConds(node);\n        return dataSourceManager.compiledNode(newNode);\n      }),\n      sourceId,\n    );\n  });\n\n  return dataSourceManager;\n};\n"],"names":["DataSourceManager"],"mappings":"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"}