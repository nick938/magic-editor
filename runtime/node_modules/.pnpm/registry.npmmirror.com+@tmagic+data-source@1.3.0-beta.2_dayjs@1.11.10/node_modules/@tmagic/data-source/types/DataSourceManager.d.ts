/// <reference types="node" />
import EventEmitter from 'events';
import type { AppCore, DataSourceSchema, Id, MNode } from '@tmagic/schema';
import { DataSource } from './data-sources';
import type { DataSourceManagerData, DataSourceManagerOptions } from './types';
declare class DataSourceManager extends EventEmitter {
    private static dataSourceClassMap;
    static registe(type: string, dataSource: typeof DataSource): void;
    static getDataSourceClass(type: string): typeof DataSource | undefined;
    app: AppCore;
    dataSourceMap: Map<string, DataSource>;
    data: DataSourceManagerData;
    constructor({ app }: DataSourceManagerOptions);
    get(id: string): DataSource | undefined;
    addDataSource(config?: DataSourceSchema): Promise<void>;
    setData(ds: DataSource): void;
    removeDataSource(id: string): void;
    updateSchema(schemas: DataSourceSchema[]): void;
    compiledNode(node: MNode, sourceId?: Id): MNode;
    compliedConds(node: MNode): boolean;
    destroy(): void;
}
export default DataSourceManager;
