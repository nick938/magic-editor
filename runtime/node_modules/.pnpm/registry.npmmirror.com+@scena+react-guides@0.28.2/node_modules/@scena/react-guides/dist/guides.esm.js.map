{"version":3,"file":"guides.esm.js","sources":["../src/react-guides/utils.ts","../src/react-guides/consts.ts","../src/react-guides/Guides.tsx"],"sourcesContent":["import { prefixNames } from \"framework-utils\";\n\nexport function prefix(...classNames: string[]) {\n    return prefixNames(\"scena-guides-\", ...classNames);\n}\n","import { prefix } from \"./utils\";\nimport { prefixCSS } from \"framework-utils\";\nimport { GuidesOptions } from \"./types\";\nimport { PROPERTIES as RULER_PROPERTIES } from \"@scena/react-ruler\";\n\nexport const ADDER = prefix(\"guide\", \"adder\");\nexport const GUIDES = prefix(\"guides\");\nexport const GUIDE = prefix(\"guide\");\nexport const DRAGGING = prefix(\"dragging\");\nexport const DISPLAY_DRAG = prefix(\"display-drag\");\nexport const GUIDES_CSS = prefixCSS(\"scena-guides-\", `\n{\n    position: relative;\n    width: 100%;\n    height: 100%;\n}\ncanvas {\n    position: relative;\n}\n.guide-origin {\n    position: absolute;\n    width: 1px;\n    height: 1px;\n    top: 0;\n    left: 0;\n    opacity: 0;\n}\n.guides {\n    position: absolute;\n    bottom: 0;\n    right: 0;\n    will-change: transform;\n    z-index: 2000;\n}\n.guide-pos {\n    position: absolute;\n    font-weight: bold;\n    font-size: 12px;\n    color: #f33;\n}\n.horizontal .guide-pos {\n    bottom: 100%;\n    left: 50%;\n    transform: translate(-50%);\n}\n.vertical .guide-pos {\n    left: calc(100% + 2px);\n    top: 50%;\n    transform: translateY(-50%);\n}\n.display-drag {\n    position: absolute;\n    will-change: transform;\n    z-index: 2000;\n    font-weight: bold;\n    font-size: 12px;\n    display: none;\n    left: 20px;\n    top: -20px;\n    color: #f33;\n}\n:host.horizontal .guides {\n    width: 100%;\n    height: 0;\n}\n:host.vertical .guides {\n    height: 100%;\n    width: 0;\n}\n:host.horizontal canvas {\n    cursor: ns-resize;\n}\n:host.vertical canvas {\n    cursor: ew-resize;\n}\n.guide {\n    position: absolute;\n    background: #f33;\n    z-index: 2;\n}\n.guide.dragging:before {\n    position: absolute;\n    content: \"\";\n    width: 100%;\n    height: 100%;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n}\n:host.horizontal .guide {\n    width: 100%;\n    height: 1px;\n    cursor: row-resize;\n}\n:host.vertical .guide {\n    width: 1px;\n    height: 100%;\n    cursor: col-resize;\n}\n.mobile :host.horizontal .guide {\n    transform: scale(1, 2);\n}\n.mobile :host.vertical .guide {\n    transform: scale(2, 1);\n}\n:host.horizontal .guide:before {\n    height: 20px;\n}\n:host.vertical .guide:before {\n    width: 20px;\n}\n.adder {\n    display: none;\n}\n.adder.dragging {\n    display: block;\n}\n`);\n\nexport const PROPERTIES: Array<keyof GuidesOptions> = [\n    \"className\",\n    \"rulerStyle\",\n    'snapThreshold',\n    \"snaps\",\n    \"displayDragPos\",\n    \"cspNonce\",\n    'dragPosFormat',\n    \"defaultGuides\",\n    \"showGuides\",\n    \"scrollOptions\",\n    \"guideStyle\",\n    \"guidesOffset\",\n    \"digit\",\n    \"defaultGuidesPos\",\n    \"dragGuideStyle\",\n    \"displayGuidePos\",\n    \"guidePosFormat\",\n    \"guidePosStyle\",\n    \"lockGuides\",\n    \"guidesZoom\",\n    ...RULER_PROPERTIES,\n];\n\nexport const METHODS = [\n    \"getGuides\",\n    \"loadGuides\",\n    \"scroll\",\n    \"scrollGuides\",\n    \"resize\",\n    \"getElement\",\n    \"getRulerElement\",\n    \"forceUpdate\",\n    \"getRulerScrollPos\",\n    \"getGuideScrollPos\",\n    \"zoomTo\",\n    \"drawRuler\",\n] as const;\n\nexport const EVENTS = [\n    \"changeGuides\",\n    \"requestScroll\",\n    \"dragStart\",\n    \"drag\",\n    \"dragEnd\",\n    \"clickRuler\",\n] as const;\n","import * as React from \"react\";\nimport Ruler, { DrawRulerOptions, PROPERTIES as RULER_PROPERTIES, RulerProps } from \"@scena/react-ruler\";\nimport { ref, refs } from \"framework-utils\";\nimport DragScroll from \"@scena/dragscroll\";\nimport Gesto, { OnDrag, OnDragEnd, OnDragStart } from \"gesto\";\nimport { styled } from \"react-css-styled\";\nimport { GUIDES, GUIDE, DRAGGING, ADDER, DISPLAY_DRAG, GUIDES_CSS } from \"./consts\";\nimport { prefix } from \"./utils\";\nimport { hasClass, addClass, removeClass } from \"@daybrush/utils\";\nimport { GuidesState, GuidesProps, GuidesInterface } from \"./types\";\nimport { getDistElementMatrix, calculateMatrixDist } from \"css-to-mat\";\n\nconst GuidesElement = styled(\"div\", GUIDES_CSS);\n\nexport default class Guides extends React.PureComponent<GuidesProps, GuidesState> implements GuidesInterface {\n    public static defaultProps: GuidesProps = {\n        className: \"\",\n        type: \"horizontal\",\n        zoom: 1,\n        guidesZoom: 0,\n        style: {},\n        snapThreshold: 5,\n        snaps: [],\n        digit: 0,\n        onClickRuler: () => { },\n        onChangeGuides: () => { },\n        onRequestScroll: () => { },\n        onDragStart: () => { },\n        onDrag: () => { },\n        onDragEnd: () => { },\n        displayDragPos: false,\n        dragPosFormat: v => v,\n        defaultGuides: [],\n        lockGuides: false,\n        showGuides: true,\n        guideStyle: {},\n        dragGuideStyle: {},\n        guidePosStyle: {},\n        defaultGuidesPos: 0,\n    };\n    public state: GuidesState = {\n        guides: [],\n    };\n    public adderElement!: HTMLElement;\n    public scrollPos: number = 0;\n    public ruler!: Ruler;\n    private managerRef = React.createRef<HTMLElement>();\n    private guidesElement!: HTMLElement;\n    private displayElement!: HTMLElement;\n    private originElement!: HTMLElement;\n    private gesto!: Gesto;\n    private guideElements: HTMLElement[] = [];\n    private _isFirstMove = false;\n    private _zoom = 1;\n    private _guidesZoom = 1;\n    private _observer: ResizeObserver | null = null;\n\n    constructor(props: GuidesProps) {\n        super(props);\n        this.state.guides = props.defaultGuides || [];\n        this.scrollPos = props.defaultGuidesPos || 0;\n    }\n    public render() {\n        const {\n            className,\n            type,\n            zoom,\n            guidesZoom,\n            style,\n            rulerStyle,\n            displayDragPos,\n            cspNonce,\n            dragGuideStyle,\n            guidePosStyle = {}\n        } = this.props as Required<GuidesProps>;\n        const props = this.props;\n        const translateName = this.getTranslateName();\n        const rulerProps: RulerProps = {};\n\n        RULER_PROPERTIES.forEach(name => {\n            if (name === \"style\" || name === \"warpSelf\" || name === \"useResizeObserver\") {\n                return;\n            }\n            (rulerProps as any)[name] = props[name];\n        });\n\n        this._zoom = zoom;\n        this._guidesZoom = guidesZoom || zoom;\n\n        return <GuidesElement\n            ref={this.managerRef}\n            cspNonce={cspNonce}\n            className={`${prefix(\"manager\", type)} ${className}`}\n            style={style}\n        >\n            <div className={prefix(\"guide-origin\")} ref={ref(this, \"originElement\")}></div>\n            <Ruler\n                ref={ref(this, \"ruler\")}\n                style={rulerStyle}\n                {...rulerProps}\n            />\n            <div className={GUIDES} ref={ref(this, \"guidesElement\")} style={{\n                transform: `${translateName}(${-this.scrollPos * this._guidesZoom}px)`,\n            }}>\n                {displayDragPos && <div className={DISPLAY_DRAG}\n                    ref={ref(this, \"displayElement\")} style={guidePosStyle || {}} />}\n                <div className={ADDER} ref={ref(this, \"adderElement\")} style={dragGuideStyle} />\n                {this.renderGuides()}\n            </div>\n        </GuidesElement>;\n    }\n    /**\n     * Draw ruler\n     */\n    public drawRuler(options: DrawRulerOptions) {\n        this.ruler.draw(options);\n    }\n    public renderGuides() {\n        const props = this.props;\n        const {\n            type,\n            showGuides,\n            guideStyle,\n            displayGuidePos,\n            guidePosStyle = {},\n            guidesOffset,\n        } = props as Required<GuidesProps>;\n\n        const zoom = this._guidesZoom;\n        const translateName = this.getTranslateName();\n        const guides = this.state.guides;\n        const guidePosFormat = props.guidePosFormat || props.dragPosFormat || (v => v);\n\n        this.guideElements = [];\n        if (showGuides) {\n            return guides.map((pos, i) => {\n                const guidePos = pos + (guidesOffset || 0);\n\n                return (<div className={prefix(\"guide\", type)}\n                    ref={refs(this, \"guideElements\", i)}\n                    key={i}\n                    data-index={i}\n                    data-pos={pos}\n                    style={{\n                        ...guideStyle,\n                        transform: `${translateName}(${guidePos * zoom}px) translateZ(0px)`,\n                    }}>\n                    {displayGuidePos && <div className={prefix(\"guide-pos\")} style={guidePosStyle || {}}>\n                        {guidePosFormat!(pos)}\n                    </div>}\n                </div>);\n            });\n        }\n        return;\n    }\n    public componentDidMount() {\n        this.gesto = new Gesto(this.managerRef.current!, {\n            container: document.body,\n        }).on(\"dragStart\", e => {\n            const {\n                type,\n                lockGuides,\n            } = this.props;\n            const zoom = this._guidesZoom;\n\n            if (lockGuides === true) {\n                e.stop();\n                return;\n            }\n            const inputEvent = e.inputEvent;\n            const target = inputEvent.target;\n            const datas = e.datas;\n            const canvasElement = this.ruler.canvasElement;\n            const guidesElement = this.guidesElement;\n            const isHorizontal = type === \"horizontal\";\n            const originRect = this.originElement.getBoundingClientRect();\n            const matrix = getDistElementMatrix(this.managerRef.current!);\n            const offsetPos = calculateMatrixDist(matrix, [\n                e.clientX - originRect.left,\n                e.clientY - originRect.top,\n            ]);\n            offsetPos[0] -= guidesElement.offsetLeft;\n            offsetPos[1] -= guidesElement.offsetTop;\n            offsetPos[isHorizontal ? 1 : 0] += this.scrollPos * zoom!;\n\n            datas.offsetPos = offsetPos;\n            datas.matrix = matrix;\n\n            let isLockAdd = lockGuides && lockGuides.indexOf(\"add\") > -1;\n            let isLockRemove = lockGuides && lockGuides.indexOf(\"remove\") > -1;\n            let isLockChange = lockGuides && lockGuides.indexOf(\"change\") > -1;\n\n            if (target === canvasElement) {\n                if (isLockAdd) {\n                    e.stop();\n                    return;\n                }\n                datas.fromRuler = true;\n                datas.target = this.adderElement;\n                // add\n            } else if (hasClass(target, GUIDE)) {\n                if (isLockRemove && isLockChange) {\n                    e.stop();\n                    return;\n                }\n                datas.target = target;\n                // change\n            } else {\n                e.stop();\n                return false;\n            }\n            this.onDragStart(e);\n        }).on(\"drag\", this._onDrag).on(\"dragEnd\", this.onDragEnd);\n\n        if (this.props.useResizeObserver) {\n            this._observer = new ResizeObserver(this._onCheck);\n            this._observer.observe(this.guidesElement, {\n                box: \"border-box\",\n            });\n            this._observer.observe(this.getRulerElement(), {\n                box: \"border-box\",\n            });\n        } else {\n            this._onCheck();\n        }\n    }\n    public componentWillUnmount() {\n        this.gesto.unset();\n        this._observer?.disconnect();\n    }\n    public componentDidUpdate(prevProps: any) {\n        const nextGuides = this.props.defaultGuides;\n\n        if (prevProps.defaultGuides !== nextGuides) {\n            // to dynamically update guides from code rather than dragging guidelines\n            this.setState({ guides: nextGuides || [] });\n        }\n    }\n    /**\n     * Load the current guidelines.\n     * @memberof Guides\n     * @instance\n     */\n    public loadGuides(guides: number[]) {\n        this.setState({\n            guides,\n        });\n    }\n    /**\n     * Get current guidelines.\n     * @memberof Guides\n     * @instance\n     */\n    public getGuides(): number[] {\n        return this.state.guides;\n    }\n    /**\n     * Scroll the positions of the guidelines opposite the ruler.\n     * @memberof Guides\n     * @instance\n     */\n    public scrollGuides(pos: number, nextZoom = this._guidesZoom) {\n        this._setZoom({ guidesZoom: nextZoom });\n        const translateName = this.getTranslateName();\n        const guidesElement = this.guidesElement;\n\n        this.scrollPos = pos;\n        guidesElement.style.transform = `${translateName}(${-pos * nextZoom}px)`;\n\n        const guides = this.state.guides;\n        const guidesOffset = this.props.guidesOffset || 0;\n        this.guideElements.forEach((el, i) => {\n            if (!el) {\n                return;\n            }\n            const guidePos = guides[i] + (guidesOffset || 0);\n\n            el.style.transform = `${translateName}(${guidePos * nextZoom}px) translateZ(0px)`;\n            el.style.display = -pos + guidePos < 0 ? \"none\" : \"block\";\n        });\n    }\n    /**\n     * Set to the next zoom.\n     * @memberof Guides\n     * @since 0.22.0\n     * @param nextZoom - next zoom\n     */\n    public zoomTo(nextZoom: number, nextGuidesZoom = nextZoom) {\n        this.scroll(this.getRulerScrollPos(), nextZoom);\n        this.scrollGuides(this.getGuideScrollPos(), nextGuidesZoom);\n    }\n    /**\n     * Get Guides DOM Element\n     * @memberof Guides\n     * @instance\n     */\n    public getElement() {\n        return this.managerRef.current!;\n    }\n    /**\n     * Get Ruler DOM Element\n     * @memberof Guides\n     * @instance\n     */\n    public getRulerElement() {\n        return this.ruler.canvasElement;\n    }\n    /**\n     * Scroll position of guides (horizontal: y, vertical: x)\n     */\n    public getGuideScrollPos() {\n        return this.scrollPos;\n    }\n    /**\n     * Scroll position of the ruler (horizontal: x, vertical: y)\n     */\n    public getRulerScrollPos() {\n        return this.ruler.getScrollPos();\n    }\n    /**\n     * Scroll the position of the ruler.\n     * @memberof Guides\n     * @instance\n     */\n    public scroll(pos: number, nextZoom = this._zoom) {\n        this._setZoom({ zoom: nextZoom });\n        this.ruler.scroll(pos, nextZoom);\n    }\n    /**\n     * Recalculate the size of the ruler.\n     * @memberof Guides\n     * @instance\n     */\n    public resize(nextZoom = this._zoom) {\n        this._setZoom({ zoom: nextZoom });\n        this.ruler.resize(nextZoom);\n    }\n    private onDragStart = (e: any) => {\n        const { datas, inputEvent } = e;\n\n        this._isFirstMove = true;\n        this.movePos(e);\n\n        /**\n         * When the drag starts, the dragStart event is called.\n         * @memberof Guides\n         * @event dragStart\n         * @param {OnDragStart} - Parameters for the dragStart event\n         */\n        this.props.onDragStart!({\n            ...e,\n            dragElement: datas.target,\n        });\n\n        if (!this.gesto.isFlag()) {\n            return;\n        }\n        inputEvent.stopPropagation();\n        inputEvent.preventDefault();\n\n\n        this._startDragScroll(e);\n    }\n    private _onDrag = (e: any) => {\n        if (this._isFirstMove) {\n            this._isFirstMove = false;\n            addClass(e.datas.target, DRAGGING);\n        }\n        const nextPos = this.movePos(e);\n\n        /**\n         * When dragging, the drag event is called.\n         * @memberof Guides\n         * @event drag\n         * @param {OnDrag} - Parameters for the drag event\n         */\n        this.props.onDrag!({\n            ...e,\n            dragElement: e.datas.target,\n        });\n\n        if (!this.gesto.isFlag()) {\n            this._endDragScroll(e);\n            return;\n        }\n\n        this._dragScroll(e);\n        return nextPos;\n    }\n    private onDragEnd = (e: OnDragEnd) => {\n        const { datas, isDouble, distX, distY } = e;\n        const pos = this.movePos(e);\n        let guides = this.state.guides;\n        const { onChangeGuides, displayDragPos, digit, lockGuides, guidesOffset } = this.props;\n        const zoom = this._guidesZoom;\n        const guidePos = parseFloat((pos / zoom!).toFixed(digit || 0));\n        const baseScrollPos = this.scrollPos - (guidesOffset || 0);\n\n        if (displayDragPos) {\n            this.displayElement.style.cssText += `display: none;`;\n        }\n        removeClass(datas.target, DRAGGING);\n        /**\n         * When the drag finishes, the dragEnd event is called.\n         * @memberof Guides\n         * @event dragEnd\n         * @param {OnDragEnd} - Parameters for the dragEnd event\n         */\n        this.props.onDragEnd!({\n            ...e,\n            dragElement: datas.target,\n        });\n\n        this._endDragScroll(e);\n        if (datas.fromRuler) {\n            if (this._isFirstMove) {\n                /**\n                 * When click the ruler, the click ruler is called.\n                 * @memberof Guides\n                 * @event clickRuler\n                 * @param {OnClickRuler} - Parameters for the clickRuler event\n                 */\n                this.props.onClickRuler!({\n                    ...e,\n                    pos: 0,\n                });\n            }\n            if (guidePos >= baseScrollPos && guides.indexOf(guidePos) < 0) {\n                this.setState({\n                    guides: [...guides, guidePos],\n                }, () => {\n                    /**\n                     * The `changeGuides` event occurs when the guideline is added / removed / changed.\n                     * @memberof Guides\n                     * @event changeGuides\n                     * @param {OnChangeGuides} - Parameters for the changeGuides event\n                     */\n                    onChangeGuides!({\n                        guides: this.state.guides,\n                        distX,\n                        distY,\n                        index: guides.length,\n                        isAdd: true,\n                        isRemove: false,\n                        isChange: false,\n                    });\n                });\n            }\n        } else {\n            const index = parseFloat(datas.target.getAttribute(\"data-index\"));\n            let isRemove = false;\n            let isChange = false;\n\n            guides = [...guides];\n\n            const guideIndex = guides.indexOf(guidePos);\n            if (\n                isDouble\n                || guidePos < baseScrollPos\n                || (guideIndex > -1 && guideIndex !== index)\n            ) {\n                if (lockGuides && (lockGuides === true || lockGuides.indexOf(\"remove\") > -1)) {\n                    return;\n                }\n                guides.splice(index, 1);\n                isRemove = true;\n            } else if (guideIndex > -1) {\n                return;\n            } else {\n                if (lockGuides && (lockGuides === true || lockGuides.indexOf(\"change\") > -1)) {\n                    return;\n                }\n                guides[index] = guidePos;\n                isChange = true;\n            }\n            this.setState({\n                guides,\n            }, () => {\n                const nextGuides = this.state.guides;\n                onChangeGuides!({\n                    distX,\n                    distY,\n                    guides: nextGuides,\n                    isAdd: false,\n                    index,\n                    isChange,\n                    isRemove,\n                });\n            });\n        }\n    }\n    private movePos(e: any) {\n        const { datas, distX, distY } = e;\n        const props = this.props;\n        const {\n            type, snaps, snapThreshold,\n            displayDragPos,\n            digit,\n        } = props;\n        const guidesOffset = props.guidesOffset || 0;\n        const zoom = this._guidesZoom;\n        const dragPosFormat = props.dragPosFormat || (v => v);\n        const isHorizontal = type === \"horizontal\";\n        const matrixPos = calculateMatrixDist(datas.matrix, [distX, distY]);\n        const offsetPos = datas.offsetPos;\n        const offsetX = matrixPos[0] + offsetPos[0];\n        const offsetY = matrixPos[1] + offsetPos[1];\n        const guidesZoomOffset = guidesOffset * zoom;\n        let nextPos = Math.round(isHorizontal ? offsetY : offsetX) - guidesOffset;\n        let guidePos = parseFloat((nextPos / zoom!).toFixed(digit || 0));\n        const guideSnaps = snaps!.slice().sort((a, b) => {\n            return Math.abs(guidePos - a) - Math.abs(guidePos - b);\n        });\n\n        if (guideSnaps.length && Math.abs(guideSnaps[0] * zoom! - nextPos) < snapThreshold!) {\n            guidePos = guideSnaps[0];\n            nextPos = guidePos * zoom!;\n        }\n        if (!datas.fromRuler || !this._isFirstMove) {\n            if (displayDragPos) {\n                const displayPos = type === \"horizontal\"\n                    ? [offsetX, nextPos + guidesZoomOffset]\n                    : [nextPos + guidesZoomOffset, offsetY];\n\n                this.displayElement.style.cssText += `display: block;`\n                    + `transform: translate(-50%, -50%) `\n                    + `translate(${displayPos.map(v => `${v}px`).join(\", \")})`;\n                this.displayElement.innerHTML = `${dragPosFormat!(guidePos)}`;\n            }\n            const target = datas.target;\n\n\n            target.setAttribute(\"data-pos\", guidePos);\n            target.style.transform = `${this.getTranslateName()}(${nextPos + guidesOffset * zoom}px)`;\n        }\n\n        return nextPos;\n    }\n    private getTranslateName() {\n        return this.props.type === \"horizontal\" ? \"translateY\" : \"translateX\";\n    }\n\n    private _startDragScroll(e: OnDragStart) {\n        const scrollOptions = this.props.scrollOptions;\n\n        if (!scrollOptions) {\n            return;\n        }\n        const datas = e.datas;\n        const dragScroll = new DragScroll();\n\n        datas.dragScroll = dragScroll;\n        dragScroll.on(\"scroll\", ({ container, direction }) => {\n            /**\n             * If scroll can be triggered through drag, the `requestScroll` event is fired.\n             * @memberof Guides\n             * @event requestScroll\n             * @param {OnRequestScroll} - Parameters for the `requestScroll` event\n             */\n            this.props.onRequestScroll?.({ container, direction });\n        }).on(\"move\", ({ offsetX, offsetY, inputEvent }) => {\n            this.gesto.scrollBy(offsetX, offsetY, inputEvent.inputEvent, true);\n        });\n        dragScroll.dragStart(e, {\n            container: scrollOptions.container,\n        });\n    }\n    private _dragScroll(e: OnDrag) {\n        const scrollOptions = this.props.scrollOptions;\n\n        if (!scrollOptions) {\n            return;\n        }\n        const dragScroll = e.datas.dragScroll as DragScroll;\n\n        dragScroll.drag(e, scrollOptions);\n    }\n    private _endDragScroll(e: OnDragEnd) {\n        e.datas.dragScroll?.dragEnd();\n        e.datas.dragScroll = null;\n    }\n    private _onCheck = () => {\n        this.resize();\n    }\n    private _setZoom(zooms: { zoom?: number; guidesZoom?: number }) {\n        const {\n            zoom: nextZoom,\n            guidesZoom: nextGuidesZoom,\n        } = zooms;\n        const hasZoom = !!this.props.zoom;\n        const hasGuidesZoom = !!this.props.guidesZoom;\n\n        if (hasGuidesZoom) {\n            if (nextGuidesZoom) {\n                this._guidesZoom = nextGuidesZoom;\n            }\n        } else {\n            if (nextGuidesZoom) {\n                this._zoom = nextGuidesZoom;\n                this._guidesZoom = nextGuidesZoom;\n            }\n            if (nextZoom) {\n                this._guidesZoom = nextZoom;\n            }\n        }\n        if (nextZoom) {\n            this._zoom  = nextZoom;\n        }\n    }\n}\n"],"names":["prefix","_i","classNames","prefixNames","ADDER","GUIDES","GUIDE","DRAGGING","DISPLAY_DRAG","GUIDES_CSS","prefixCSS","PROPERTIES","RULER_PROPERTIES","METHODS","EVENTS","GuidesElement","styled","__extends","props","_super","_this","guides","React","e","datas","inputEvent","_isFirstMove","movePos","onDragStart","dragElement","target","gesto","isFlag","stopPropagation","preventDefault","_startDragScroll","addClass","nextPos","onDrag","_endDragScroll","_dragScroll","isDouble","distX","distY","pos","state","_a","onChangeGuides","displayDragPos","digit","lockGuides","guidesOffset","zoom","_guidesZoom","guidePos","parseFloat","toFixed","baseScrollPos","scrollPos","displayElement","style","cssText","removeClass","onDragEnd","fromRuler","onClickRuler","indexOf","setState","index","length","isAdd","isRemove","isChange","index_1","getAttribute","isRemove_1","isChange_1","guideIndex","splice","nextGuides","resize","defaultGuides","defaultGuidesPos","className","type","guidesZoom","rulerStyle","cspNonce","dragGuideStyle","_b","guidePosStyle","translateName","getTranslateName","rulerProps","forEach","name","_zoom","ref","managerRef","Ruler","transform","renderGuides","options","ruler","draw","showGuides","guideStyle","displayGuidePos","guidePosFormat","dragPosFormat","v","guideElements","map","i","refs","key","Gesto","current","container","document","body","on","stop","canvasElement","guidesElement","isHorizontal","originRect","originElement","getBoundingClientRect","matrix","getDistElementMatrix","offsetPos","calculateMatrixDist","clientX","left","clientY","top","offsetLeft","offsetTop","isLockAdd","isLockRemove","isLockChange","adderElement","hasClass","_onDrag","useResizeObserver","_observer","ResizeObserver","_onCheck","observe","box","getRulerElement","unset","disconnect","prevProps","nextZoom","_setZoom","el","display","nextGuidesZoom","scroll","getRulerScrollPos","scrollGuides","getGuideScrollPos","getScrollPos","snaps","snapThreshold","matrixPos","offsetX","offsetY","guidesZoomOffset","Math","round","guideSnaps","slice","sort","a","b","abs","displayPos","join","innerHTML","setAttribute","scrollOptions","dragScroll","DragScroll","direction","onRequestScroll","scrollBy","dragStart","drag","dragEnd","zooms","hasZoom","hasGuidesZoom","Guides"],"mappings":"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"}