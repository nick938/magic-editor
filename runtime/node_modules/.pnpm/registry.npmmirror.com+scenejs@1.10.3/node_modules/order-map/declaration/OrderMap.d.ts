declare class OrderMap<T = number | string> {
    private separator;
    orderMap: Record<string, T[]>;
    constructor(separator: string);
    getFullName(names: T[]): string;
    get(names: T[]): T[] | undefined;
    hasName(names: T[]): boolean;
    gets(names: T[], isFull?: boolean): T[][];
    set(names: T[], orders: T[]): T[];
    add(names: T[]): T[];
    addName(names: T[], name: T): T[];
    findIndex(names: T[], orderName: T): number;
    remove(names: T[]): this;
    filter(names: T[], callback: (value: T[], index: number, arr: T[][]) => boolean, isFull?: boolean): OrderMap<T>;
    splice(names: T[], index: number, deleteCount: number, ...orders: T[]): this;
    clear(): void;
    setObject(obj: Record<string, T[]>): void;
    getObject(): Record<string, T[]>;
    clone(): OrderMap<T>;
}
export default OrderMap;
