{"version":3,"file":"ruler.cjs.js","sources":["../src/react-ruler/Ruler.tsx","../src/react-ruler/consts.ts","../src/react-ruler/index.umd.ts"],"sourcesContent":["import * as React from \"react\";\nimport { ref } from \"framework-utils\";\nimport { DrawRulerOptions, RulerInterface, RulerProps } from \"./types\";\nimport { convertUnitSize, findLast } from \"@daybrush/utils\";\n\nexport default class Ruler extends React.PureComponent<RulerProps> implements RulerInterface {\n    public static defaultProps: Partial<RulerProps> = {\n        type: \"horizontal\",\n        zoom: 1,\n        width: 0,\n        height: 0,\n        unit: 50,\n        negativeRuler: true,\n        mainLineSize: \"100%\",\n        longLineSize: 10,\n        shortLineSize: 7,\n        segment: 10,\n        direction: \"end\",\n        style: { width: \"100%\", height: \"100%\" },\n        backgroundColor: \"#333333\",\n        font: \"10px sans-serif\",\n        textColor: \"#ffffff\",\n        textBackgroundColor: 'transparent',\n        lineColor: \"#777777\",\n        range: [-Infinity, Infinity],\n        rangeBackgroundColor: 'transparent',\n        lineWidth: 1,\n        selectedBackgroundColor: \"#555555\",\n        defaultScrollPos: 0,\n        markColor: \"#f55\",\n        marks: [],\n    };\n    public divisionsElement!: HTMLElement;\n    public state = {\n        scrollPos: 0,\n    };\n    public canvasElement!: HTMLCanvasElement;\n    private canvasContext!: CanvasRenderingContext2D;\n    private width: number = 0;\n    private height: number = 0;\n    private _zoom = 0;\n    private _rulerScale = 0;\n    private _observer: ResizeObserver | null = null;\n\n    public render() {\n        const props = this.props;\n        this._zoom = props.zoom!;\n\n        return <canvas\n            ref={ref(this, \"canvasElement\")}\n            style={this.props.style} />;\n\n    }\n    public componentDidMount() {\n        const props = this.props;\n        this.state.scrollPos = props.defaultScrollPos || 0;\n        const canvas = this.canvasElement;\n        const context = canvas.getContext(\"2d\", { alpha: true })!;\n\n        this.canvasContext = context;\n\n        if (props.useResizeObserver) {\n            this._observer = new ResizeObserver(this._checkResize);\n\n            this._observer.observe(canvas, {\n                box: \"border-box\",\n            });\n        } else {\n            this.resize();\n        }\n    }\n    public componentDidUpdate() {\n        this.resize();\n    }\n    public componentWillUnmount(): void {\n        this.state.scrollPos = 0;\n        this._observer?.disconnect();\n    }\n    /**\n     * Gets the scroll position of the ruler.\n     */\n    public getScrollPos() {\n        return this.state.scrollPos;\n    }\n    /**\n     * @method Ruler#scroll\n     * @param scrollPos\n     */\n    public scroll(scrollPos: number, zoom?: number) {\n        this.draw({\n            scrollPos,\n            zoom,\n        });\n    }\n    /**\n     * @method Ruler#resize\n     */\n    public resize(nextZoom?: number) {\n        const canvas = this.canvasElement;\n        const {\n            width,\n            height,\n            scrollPos,\n        } = this.props;\n        const rulerScale = this._getRulerScale();\n\n        this.width = width || canvas.offsetWidth;\n        this.height = height || canvas.offsetHeight;\n        canvas.width = this.width * rulerScale;\n        canvas.height = this.height * rulerScale;\n\n        this.draw({\n            scrollPos,\n            zoom: nextZoom,\n        });\n    }\n    /**\n     * draw a ruler\n     * @param options - It is drawn with an external value, not the existing state.\n     */\n    public draw(options: DrawRulerOptions = {}) {\n        const props = this.props;\n        const {\n            zoom: nextZoom = this._zoom,\n            scrollPos = this.state.scrollPos,\n            marks = props.marks,\n            selectedRanges = props.selectedRanges!,\n            segment = props.segment || 10,\n            unit = props.unit!,\n        } = options;\n\n        this._zoom = nextZoom;\n\n        const {\n            type,\n            backgroundColor,\n            lineColor,\n            textColor,\n            textBackgroundColor,\n            direction,\n            negativeRuler = true,\n            textFormat,\n            range = [-Infinity, Infinity],\n            rangeBackgroundColor,\n            selectedBackgroundColor,\n            lineWidth = 1,\n            selectedRangesText,\n            selectedRangesTextColor = \"#44aaff\",\n            selectedRangesTextOffset = [0, 0],\n            markColor = \"#ff5\",\n        } = props as Required<RulerProps>;\n\n        const rulerScale = this._getRulerScale();\n        const width = this.width;\n        const height = this.height;\n        const state = this.state;\n        state.scrollPos = scrollPos;\n        const context = this.canvasContext;\n        const isHorizontal = type === \"horizontal\";\n        const isNegative = negativeRuler !== false;\n        const font = props.font || \"10px sans-serif\";\n        const textAlign = props.textAlign || \"left\";\n        const textOffset = props.textOffset || [0, 0];\n        const containerSize = isHorizontal ? height : width;\n        const mainLineSize = convertUnitSize(`${props.mainLineSize || \"100%\"}`, containerSize);\n        const longLineSize = convertUnitSize(`${props.longLineSize || 10}`, containerSize);\n        const shortLineSize = convertUnitSize(`${props.shortLineSize || 7}`, containerSize);\n        const lineOffset = props.lineOffset || [0, 0];\n\n        if (backgroundColor === \"transparent\") {\n            // Clear existing paths & text\n            context.clearRect(0, 0, width * rulerScale, height * rulerScale);\n        } else {\n            // Draw the background\n            context.rect(0, 0, width * rulerScale, height * rulerScale);\n            context.fillStyle = backgroundColor;\n            context.fill();\n        }\n\n\n        context.save();\n        context.scale(rulerScale, rulerScale);\n        context.strokeStyle = lineColor;\n        context.lineWidth = lineWidth;\n        context.font = font;\n        context.fillStyle = textColor;\n        context.textAlign = textAlign;\n\n        switch (direction) {\n            case \"start\":\n                context.textBaseline = \"top\";\n                break;\n            case \"center\":\n                context.textBaseline = \"middle\";\n                break;\n            case \"end\":\n                context.textBaseline = \"bottom\";\n                break;\n        }\n\n        context.translate(0.5, 0);\n        context.beginPath();\n\n        const size = isHorizontal ? width : height;\n        const zoomUnit = nextZoom * unit;\n        const minRange = Math.floor(scrollPos * nextZoom / zoomUnit);\n        const maxRange = Math.ceil((scrollPos * nextZoom + size) / zoomUnit);\n        const length = maxRange - minRange;\n        const alignOffset = Math.max([\"left\", \"center\", \"right\"].indexOf(textAlign) - 1, -1);\n        const barSize = isHorizontal ? height : width;\n        const values: Array<{\n            color: string;\n            backgroundColor?: string;\n            offset: number[];\n            value: number;\n            text: string;\n            textSize: number;\n        }> = [];\n\n        for (let i = 0; i <= length; ++i) {\n            const value = (i + minRange) * unit;\n            let text = `${value}`;\n\n            if (textFormat) {\n                text = textFormat(value);\n            }\n            const textSize = context.measureText(text).width;\n\n            values.push({\n                color: textColor,\n                offset: textOffset,\n                backgroundColor: textBackgroundColor,\n                value,\n                text,\n                textSize: textSize,\n            });\n        }\n\n\n        // Draw Selected Range Background\n        if (selectedBackgroundColor !== \"transparent\" && selectedRanges?.length) {\n            selectedRanges.forEach(selectedRange => {\n                const rangeStart = Math.max(selectedRange[0], range[0], negativeRuler ? -Infinity : 0);\n                const rangeEnd = Math.min(selectedRange[1], range[1]);\n                const rangeX = (rangeStart - scrollPos) * nextZoom;\n                const rangeWidth = ((rangeEnd - rangeStart) * nextZoom);\n\n                if (selectedRangesText) {\n                    selectedRange.forEach(value => {\n                        let text = `${value}`;\n\n                        if (textFormat) {\n                            text = textFormat(value);\n                        }\n                        const textSize = context.measureText(text).width;\n\n                        const startPos = value * nextZoom;\n                        const endPos = startPos + textSize;\n\n                        findLast(values, ({ value: prevValue, textSize: prevTextSize }, index) => {\n                            const prevStartPos = prevValue * nextZoom;\n                            const prevEndPos = prevStartPos + prevTextSize;\n\n                            if (prevStartPos <= endPos && startPos <= prevEndPos) {\n                                values.splice(index, 1);\n                            }\n                        });\n                        values.push({\n                            value,\n                            color: selectedRangesTextColor,\n                            offset: selectedRangesTextOffset,\n                            text,\n                            textSize,\n                        });\n                    });\n                }\n\n                if (rangeWidth <= 0) {\n                    return;\n                }\n                context.save();\n                context.fillStyle = selectedBackgroundColor;\n\n                if (isHorizontal) {\n                    context.fillRect(rangeX, 0, rangeWidth, barSize);\n                } else {\n                    context.fillRect(0, rangeX, barSize, rangeWidth);\n                }\n                context.restore();\n            });\n        }\n        // Draw Range Background\n        if (rangeBackgroundColor !== \"transparent\" && range[0] !== -Infinity && range[1] !== Infinity) {\n            const rangeStart = (range[0] - scrollPos) * nextZoom;\n            const rangeEnd = ((range[1] - range[0]) * nextZoom);\n            context.save();\n            context.fillStyle = rangeBackgroundColor;\n            if (isHorizontal) {\n                context.fillRect(rangeStart, 0, rangeEnd, barSize);\n            } else {\n                context.fillRect(0, rangeStart, barSize, rangeEnd);\n            }\n\n            context.restore();\n        }\n\n        // Render Segments First\n\n        for (let i = 0; i <= length; ++i) {\n            const value = i + minRange;\n\n            if (!isNegative && value < 0) {\n                continue;\n            }\n            const startValue = value * unit;\n            const startPos = (startValue - scrollPos) * nextZoom;\n\n            for (let j = 0; j < segment; ++j) {\n                const pos = startPos + j / segment * zoomUnit;\n                const value = startValue + j / segment * unit;\n\n                if (pos < 0 || pos >= size || value < range[0] || value > range[1]) {\n                    continue;\n                }\n\n                const lineSize = j === 0\n                    ? mainLineSize\n                    : (j % 2 === 0 ? longLineSize : shortLineSize);\n\n                let origin = 0\n                switch (direction) {\n                    case \"start\":\n                        origin = 0;\n                        break;\n                    case \"center\":\n                        origin = barSize / 2 - lineSize / 2;\n                        break;\n                    case \"end\":\n                        origin = barSize - lineSize;\n                        break;\n                }\n\n                const [x1, y1] = isHorizontal ?\n                    [pos + lineOffset[0], origin + lineOffset[1]] :\n                    [origin + lineOffset[0], pos + lineOffset[1]];\n\n                const [x2, y2] = isHorizontal ? [x1, y1 + lineSize] : [x1 + lineSize, y1];\n\n                context.moveTo(x1 + lineOffset[0], y1 + lineOffset[1]);\n                context.lineTo(x2 + lineOffset[0], y2 + lineOffset[1]);\n            }\n        }\n        context.stroke();\n\n        context.beginPath();\n        // Render marks\n        context.strokeStyle = markColor;\n        context.lineWidth = 1;\n        (marks || []).forEach(value => {\n            const pos = (-scrollPos + value) * nextZoom;\n\n            if (pos < 0 || pos >= size || value < range[0] || value > range[1]) {\n                return;\n            }\n            const [x1, y1] = isHorizontal ?\n                [pos + lineOffset[0], lineOffset[1]] :\n                [lineOffset[0], pos + lineOffset[1]];\n            const [x2, y2] = isHorizontal ? [x1, y1 + containerSize] : [x1 + containerSize, y1];\n\n            context.moveTo(x1 + lineOffset[0], y1 + lineOffset[1]);\n            context.lineTo(x2 + lineOffset[0], y2 + lineOffset[1]);\n        });\n        context.stroke();\n\n        // Render Labels\n\n        values.forEach(({ value, offset, backgroundColor, color, text, textSize }) => {\n            if (!isNegative && value < 0) {\n                return;\n            }\n            const startPos = (value - scrollPos) * nextZoom;\n\n            if (startPos < -zoomUnit || startPos >= size + unit * nextZoom || value < range[0] || value > range[1]) {\n                return;\n            }\n\n            let origin = 0\n            switch (direction) {\n                case \"start\":\n                    origin = 17;\n                    break;\n                case \"center\":\n                    origin = barSize / 2;\n                    break;\n                case \"end\":\n                    origin = barSize - 17;\n                    break;\n            }\n\n            const [startX, startY] = isHorizontal\n                ? [startPos + alignOffset * -3, origin]\n                : [origin, startPos + alignOffset * 3];\n\n            if (backgroundColor) {\n                let backgroundOffset = 0\n                switch (textAlign) {\n                    case \"left\":\n                        backgroundOffset = 0;\n                        break;\n                    case \"center\":\n                        backgroundOffset = -textSize / 2;\n                        break;\n                    case \"right\":\n                        backgroundOffset = -textSize;\n                        break;\n                }\n                context.save();\n                context.fillStyle = backgroundColor;\n                if (isHorizontal) {\n                    context.fillRect(startX + offset[0] + backgroundOffset, 0, textSize, mainLineSize);\n                } else {\n                    context.translate(0, startY + offset[1]);\n                    context.rotate(-Math.PI / 2);\n                    context.fillRect(backgroundOffset, 0, textSize, mainLineSize);\n                }\n                context.restore();\n            }\n\n            context.save();\n            context.fillStyle = color;\n            if (isHorizontal) {\n                context.fillText(text, startX + offset[0], startY + offset[1]);\n            } else {\n                context.translate(startX + offset[0], startY + offset[1]);\n                context.rotate(-Math.PI / 2);\n                context.fillText(text, 0, 0);\n            }\n            context.restore();\n        });\n\n        context.restore();\n    }\n    private _getRulerScale() {\n        const defaultPixelScale = this.props.defaultPixelScale || 2;\n\n        if (!this._rulerScale) {\n            let isHighDensity = window.devicePixelRatio > 1;\n\n            if (!isHighDensity && window.matchMedia) {\n                const mq = window.matchMedia('only screen and (min--moz-device-pixel-ratio: 1.3), only screen and (-o-min-device-pixel-ratio: 2.6/2), only screen and (-webkit-min-device-pixel-ratio: 1.3), only screen  and (min-device-pixel-ratio: 1.3), only screen and (min-resolution: 1.3dppx)');\n                isHighDensity = mq && mq.matches;\n            }\n            this._rulerScale = isHighDensity ? 3 : defaultPixelScale;\n        }\n        return this._rulerScale;\n    }\n    private _checkResize = () => {\n        this.resize();\n    }\n}\n","import { RulerInterface, RulerProps } from \"./types\";\n\nexport const PROPERTIES: Array<keyof RulerProps> = [\n    \"type\",\n    \"width\",\n    \"height\",\n    \"unit\",\n    \"zoom\",\n    \"direction\",\n    \"textAlign\",\n    \"font\",\n    \"segment\",\n    \"mainLineSize\",\n    \"longLineSize\",\n    \"shortLineSize\",\n    \"lineOffset\",\n    \"textOffset\",\n    \"negativeRuler\",\n    \"range\",\n    \"scrollPos\",\n    \"defaultScrollPos\",\n    \"style\",\n    \"backgroundColor\",\n    \"rangeBackgroundColor\",\n    \"lineColor\",\n    \"textColor\",\n    \"textBackgroundColor\",\n    \"textFormat\",\n    \"warpSelf\",\n    \"selectedBackgroundColor\",\n    \"selectedRanges\",\n    \"defaultPixelScale\",\n    \"useResizeObserver\",\n    \"selectedRangesText\",\n    \"selectedRangesTextColor\",\n    \"selectedRangesTextOffset\",\n    \"marks\",\n    \"markColor\",\n];\nexport const METHODS: Array<keyof RulerInterface> = [\n    \"scroll\",\n    \"resize\",\n    \"getScrollPos\",\n    \"draw\",\n];\n","import Ruler, * as others from \"./index.esm\";\n\nfor (const name in others) {\n    (Ruler as any)[name] = (others as any)[name];\n}\nexport default Ruler;\n"],"names":["__extends","_this","scrollPos","resize","props","_zoom","zoom","React","ref","style","state","defaultScrollPos","canvas","canvasElement","context","getContext","alpha","canvasContext","useResizeObserver","_observer","ResizeObserver","_checkResize","observe","box","disconnect","draw","nextZoom","_a","width","height","rulerScale","_getRulerScale","offsetWidth","offsetHeight","options","_b","_c","marks","_d","selectedRanges","_e","segment","_f","unit","_g","type","backgroundColor","lineColor","textColor","textBackgroundColor","direction","_h","negativeRuler","textFormat","_j","range","Infinity","rangeBackgroundColor","selectedBackgroundColor","_k","lineWidth","selectedRangesText","_l","selectedRangesTextColor","_m","selectedRangesTextOffset","_o","markColor","isHorizontal","isNegative","font","textAlign","textOffset","containerSize","mainLineSize","convertUnitSize","longLineSize","shortLineSize","lineOffset","clearRect","rect","fillStyle","fill","save","scale","strokeStyle","textBaseline","translate","beginPath","size","zoomUnit","minRange","Math","floor","maxRange","ceil","length","alignOffset","max","indexOf","barSize","values","i","value","text","textSize","measureText","push","color","offset","forEach","selectedRange","rangeStart","rangeEnd","min","rangeX","rangeWidth","startPos","endPos","findLast","index","prevValue","prevTextSize","prevStartPos","prevEndPos","splice","fillRect","restore","startValue","j","pos","value_1","lineSize","origin","_p","x1","y1","_q","x2","y2","moveTo","lineTo","stroke","startX","startY","backgroundOffset","rotate","PI","fillText","defaultPixelScale","_rulerScale","isHighDensity","window","devicePixelRatio","matchMedia","mq","matches","Ruler","PROPERTIES","METHODS","name","others"],"mappings":"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"}